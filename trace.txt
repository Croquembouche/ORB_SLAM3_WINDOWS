Put cmake in trace mode, but with variables expanded.
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.20 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(2):  project(ORB_SLAM3 LANGUAGES CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(11):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(127):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(128):  if(CMAKE_HOST_WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(129):  if(DEFINED ENV{PROCESSOR_ARCHITEW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(131):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(132):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(141):  if(CMAKE_TOOLCHAIN_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(143):  include(C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/C:\vcpkg\scripts\buildsystems\vcpkg.cmake OPTIONAL RESULT_VARIABLE _INCLUDED_TOOLCHAIN_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(144):  if(NOT _INCLUDED_TOOLCHAIN_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(146):  include(C:\vcpkg\scripts\buildsystems\vcpkg.cmake OPTIONAL RESULT_VARIABLE _INCLUDED_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(61):  if(EXISTS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/vcpkg.json )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(85):  set(Z_VCPKG_CHECK_MANIFEST_MODE OFF CACHE INTERNAL Making sure VCPKG_MANIFEST_MODE doesn't change )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(220):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(221):  set(CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL MinSizeRel;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(222):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(226):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(227):  set(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO RelWithDebInfo;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(228):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(233):  if(VCPKG_TARGET_TRIPLET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(242):  elseif(CMAKE_GENERATOR_PLATFORM MATCHES ^[Ww][Ii][Nn]32$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(244):  elseif(CMAKE_GENERATOR_PLATFORM MATCHES ^[Xx]64$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(245):  set(Z_VCPKG_TARGET_TRIPLET_ARCH x64 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(347):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsStore OR CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(349):  elseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Linux ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(351):  elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(353):  elseif(CMAKE_SYSTEM_NAME STREQUAL iOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(355):  elseif(CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(357):  elseif(MINGW )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(359):  elseif(CMAKE_SYSTEM_NAME STREQUAL Windows OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(360):  if(XBOX_CONSOLE_TARGET STREQUAL scarlett )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(362):  elseif(XBOX_CONSOLE_TARGET STREQUAL xboxone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(364):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(365):  set(Z_VCPKG_TARGET_TRIPLET_PLAT windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(375):  if(EMSCRIPTEN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(380):  set(VCPKG_TARGET_TRIPLET x64-windows CACHE STRING Vcpkg target triplet (ex. x86-windows) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(381):  set(Z_VCPKG_TOOLCHAIN_DIR C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(384):  set(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(385):  while(NOT DEFINED Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(386):  if(EXISTS C:/vcpkg/scripts/buildsystems/.vcpkg-root )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(388):  elseif(IS_DIRECTORY C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(389):  get_filename_component(Z_VCPKG_ROOT_DIR_TEMP C:/vcpkg/scripts/buildsystems DIRECTORY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(390):  if(Z_VCPKG_ROOT_DIR_TEMP STREQUAL Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(393):  SET(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(394):  unset(Z_VCPKG_ROOT_DIR_TEMP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(386):  if(EXISTS C:/vcpkg/scripts/.vcpkg-root )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(388):  elseif(IS_DIRECTORY C:/vcpkg/scripts )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(389):  get_filename_component(Z_VCPKG_ROOT_DIR_TEMP C:/vcpkg/scripts DIRECTORY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(390):  if(Z_VCPKG_ROOT_DIR_TEMP STREQUAL Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(393):  SET(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(394):  unset(Z_VCPKG_ROOT_DIR_TEMP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(386):  if(EXISTS C:/vcpkg/.vcpkg-root )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(387):  set(Z_VCPKG_ROOT_DIR C:/vcpkg CACHE INTERNAL Vcpkg root directory )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(399):  unset(Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(401):  if(NOT Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(405):  if(DEFINED VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(407):  elseif(DEFINED _VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(409):  elseif(VCPKG_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(411):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(412):  set(Z_VCPKG_INSTALLED_DIR_INITIAL_VALUE C:/vcpkg/installed )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(415):  set(VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(418):  set(_VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(422):  function(z_vcpkg_add_vcpkg_to_cmake_path list suffix )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(437):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_PREFIX_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_PREFIX_PATH 0 C:/vcpkg/installed/x64-windows;C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_PREFIX_PATH C:/vcpkg/installed/x64-windows;C:/vcpkg/installed/x64-windows/debug PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(438):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_LIBRARY_PATH /lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows/lib/manual-link C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_LIBRARY_PATH 0 C:/vcpkg/installed/x64-windows/lib/manual-link;C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_LIBRARY_PATH C:/vcpkg/installed/x64-windows/lib/manual-link;C:/vcpkg/installed/x64-windows/debug/lib/manual-link PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(439):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_FIND_ROOT_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_FIND_ROOT_PATH 0 C:/vcpkg/installed/x64-windows;C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows;C:/vcpkg/installed/x64-windows/debug PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(441):  if(NOT VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(442):  set(CMAKE_FIND_FRAMEWORK LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(443):  set(CMAKE_FIND_APPBUNDLE LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(450):  if(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_LIBRARY STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_PACKAGE STREQUAL ONLY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(456):  set(VCPKG_CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows;C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(459):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(460):  set(Z_VCPKG_EXECUTABLE C:/vcpkg/vcpkg.exe )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(461):  set(Z_VCPKG_BOOTSTRAP_SCRIPT C:/vcpkg/bootstrap-vcpkg.bat )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(467):  if(VCPKG_MANIFEST_MODE AND VCPKG_MANIFEST_INSTALL AND NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE AND NOT Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(561):  option(VCPKG_SETUP_CMAKE_PROGRAM_PATH Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(562):  set(VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(563):  if(DEFINED VCPKG_HOST_TRIPLET AND NOT VCPKG_HOST_TRIPLET STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(566):  cmake_dependent_option(VCPKG_USE_HOST_TOOLS Setup CMAKE_PROGRAM_PATH to use host tools ON VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_USE_HOST_TOOLS_ISSET MATCHES ^VCPKG_USE_HOST_TOOLS_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_USE_HOST_TOOLS_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_USE_HOST_TOOLS MATCHES ^VCPKG_USE_HOST_TOOLS$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_CAN_USE_HOST_TOOLSx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(567):  unset(VCPKG_CAN_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(569):  if(VCPKG_SETUP_CMAKE_PROGRAM_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(570):  set(tools_base_path C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(571):  if(VCPKG_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(574):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(575):  file(GLOB Z_VCPKG_TOOLS_DIRS LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(576):  file(GLOB Z_VCPKG_TOOLS_FILES LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(577):  file(GLOB Z_VCPKG_TOOLS_DIRS_BIN LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(578):  file(GLOB Z_VCPKG_TOOLS_FILES_BIN LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(579):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(580):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS_BIN   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(581):  string(REPLACE /bin  Z_VCPKG_TOOLS_DIRS_TO_REMOVE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(582):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(583):  list(APPEND Z_VCPKG_TOOLS_DIRS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(584):  foreach(Z_VCPKG_TOOLS_DIR IN LISTS Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/flatbuffers )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/pkgconf )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(587):  unset(Z_VCPKG_TOOLS_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(588):  unset(Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(589):  unset(Z_VCPKG_TOOLS_FILES )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(590):  unset(Z_VCPKG_TOOLS_DIRS_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(591):  unset(Z_VCPKG_TOOLS_FILES_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(592):  unset(Z_VCPKG_TOOLS_DIRS_TO_REMOVE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(593):  unset(tools_base_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(596):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(598):  function(add_executable )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(639):  function(add_library )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(671):  function(x_vcpkg_install_local_dependencies )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(720):  if(X_VCPKG_APPLOCAL_DEPS_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(768):  option(VCPKG_TRACE_FIND_PACKAGE Trace calls to find_package() OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(769):  if(NOT DEFINED VCPKG_OVERRIDE_FIND_PACKAGE_NAME )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(770):  set(VCPKG_OVERRIDE_FIND_PACKAGE_NAME find_package )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(775):  set(z_vcpkg_find_package_backup_id 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(776):  macro(find_package z_vcpkg_find_package_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(914):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(915):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(917):  set(VCPKG_TOOLCHAIN ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(918):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(919):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(920):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(921):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(922):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(925):  if(NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(926):  list(APPEND CMAKE_TRY_COMPILE_PLATFORM_VARIABLES VCPKG_TARGET_TRIPLET VCPKG_TARGET_ARCHITECTURE VCPKG_HOST_TRIPLET VCPKG_INSTALLED_DIR VCPKG_PREFER_SYSTEM_LIBS VCPKG_CHAINLOAD_TOOLCHAIN_FILE Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(940):  if(Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(944):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(149):  if(_INCLUDED_TOOLCHAIN_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(150):  set(CMAKE_TOOLCHAIN_FILE C:/vcpkg/scripts/buildsystems/vcpkg.cmake CACHE FILEPATH The CMake toolchain file FORCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(156):  if(CMAKE_SYSTEM_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(162):  elseif(CMAKE_VS_WINCE_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(167):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(169):  set(CMAKE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(170):  if(NOT DEFINED CMAKE_SYSTEM_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(171):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(173):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(174):  if(CMAKE_CROSSCOMPILING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(181):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(184):  include(Platform/Windows-Determine OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(186):  set(CMAKE_SYSTEM Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(187):  if(CMAKE_SYSTEM_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(188):  string(APPEND CMAKE_SYSTEM -10.0.22621 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(190):  set(CMAKE_HOST_SYSTEM Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(191):  if(CMAKE_HOST_SYSTEM_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(192):  string(APPEND CMAKE_HOST_SYSTEM -10.0.22621 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(197):  if(CMAKE_BINARY_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(199):  if(CMAKE_CROSSCOMPILING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(204):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(205):  message(CONFIGURE_LOG The system is: Windows - 10.0.22621 - AMD64
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(212):  set(INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(213):  if(CMAKE_TOOLCHAIN_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(214):  set(INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED include("C:/vcpkg/scripts/buildsystems/vcpkg.cmake") )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake(218):  configure_file(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystem.cmake.in C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake @ONLY )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(6):  include(C:/vcpkg/scripts/buildsystems/vcpkg.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(79):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(80):  set(VCPKG_MANIFEST_INSTALL OFF CACHE INTERNAL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 )
CMake Warning (dev) at C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake:80 (set):
  Policy CMP0126 is not set: set(CACHE) does not remove a normal variable of
  the same name.  Run "cmake --help-policy CMP0126" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

  For compatibility with older versions of CMake, normal variable
  "VCPKG_MANIFEST_INSTALL" will be removed from the current scope.
Call Stack (most recent call first):
  C:/vcpkg/scripts/buildsystems/vcpkg.cmake:101 (CMAKE_DEPENDENT_OPTION)
  build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake:6 (include)
  CMakeLists.txt:2 (project)
This warning is for project developers.  Use -Wno-dev to suppress it.

C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(213):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(214):  return()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
-- Selecting Windows SDK version 10.0.26100.0 to target Windows 10.0.22621.
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Windows-Initialize OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Initialize.cmake(1):  set(WIN32 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(23):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompiler.cmake(5):  macro(_cmake_find_compiler lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompiler.cmake(115):  macro(_cmake_find_compiler_path lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompiler.cmake(159):  function(_cmake_find_compiler_sysroot lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(26):  include(Platform/Windows-Determine-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Determine-CXX.cmake(1):  if(NOT CMAKE_CXX_COMPILER_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Determine-CXX.cmake(2):  set(CMAKE_CXX_COMPILER_NAMES c++ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Determine-CXX.cmake(7):  set(CMAKE_CXX_COMPILER_EXCLUDE CC aCC xlC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(27):  include(Platform/Windows-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(28):  if(NOT CMAKE_CXX_COMPILER_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(32):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(97):  if(CMAKE_CXX_COMPILER_TARGET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(102):  if(NOT CMAKE_CXX_COMPILER_ID_RUN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(103):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(106):  set(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(107):  set(CMAKE_CXX_PLATFORM_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(108):  file(READ C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakePlatformId.h.in CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(113):  list(APPEND CMAKE_CXX_COMPILER_ID_VENDORS IAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(114):  set(CMAKE_CXX_COMPILER_ID_VENDOR_FLAGS_IAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(115):  set(CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR IAR .+ Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(122):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX 
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdCXX/(\./)?(CompilerIdCXX.(framework|xctest|build/[^ 	
]+)/)?CompilerIdCXX[ 	
\"] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(123):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX 2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(125):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(4):  macro(__determine_compiler_id_test testflags_var userflags_var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(25):  function(CMAKE_DETERMINE_COMPILER_ID lang flagvar src )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(395):  include(CMakeCompilerIdDetection )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(5):  function(_readFile file )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(14):  function(compiler_id_detection outvar lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(399):  function(CMAKE_DETERMINE_COMPILER_ID_WRITE lang src )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(433):  function(CMAKE_DETERMINE_COMPILER_ID_BUILD lang testflags userflags src )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(932):  function(CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR lang output )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(943):  function(CMAKE_DETERMINE_COMPILER_ID_CHECK lang file )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1202):  function(CMAKE_DETERMINE_COMPILER_ID_VENDOR lang userflags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1263):  function(CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX lang userflags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(126):  CMAKE_DETERMINE_COMPILER_ID(CXX CXXFLAGS CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(27):  string(STRIP  CMAKE_CXX_COMPILER_ID_ARG1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(28):  string(REGEX REPLACE  + ; CMAKE_CXX_COMPILER_ID_ARG1  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(31):  if(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(33):  elseif(DEFINED ENV{CXXFLAGS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(35):  else(CMAKE_CXX_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(36):  set(CMAKE_CXX_COMPILER_ID_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(38):  separate_arguments(CMAKE_CXX_COMPILER_ID_FLAGS_LIST NATIVE_COMMAND  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(41):  set(CMAKE_CXX_COMPILER_ID_DIR C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(45):  if(CMAKE_CXX_COMPILER_ID_REQUIRE_SUCCESS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(59):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(62):  foreach(userflags   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(63):  foreach(testflags    )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(64):  __determine_compiler_id_test(testflags userflags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(5):  set(_CMAKE_CXX_COMPILER_ID_LOG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(7):  separate_arguments(testflags UNIX_COMMAND  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(8):  CMAKE_DETERMINE_COMPILER_ID_BUILD(CXX   CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(435):  file(REMOVE_RECURSE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(436):  file(MAKE_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(437):  file(MAKE_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(438):  CMAKE_DETERMINE_COMPILER_ID_WRITE(CXX CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(400):  find_file(src_in CMakeCXXCompilerId.cpp.in PATHS C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules  NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(401):  file(READ C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompilerId.cpp.in ID_CONTENT_IN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(403):  compiler_id_detection(CMAKE_CXX_COMPILER_ID_CONTENT CXX ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT xCXX STREQUAL xFortran AND NOT xCXX STREQUAL xCSharp AND NOT xCXX STREQUAL xISPC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(18):  file(GLOB lang_files C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(20):  set(nonlang CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(21):  if(xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(22):  set(nonlang C )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(25):  file(GLOB nonlang_files C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/*-C-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(27):  list(REMOVE_ITEM lang_files C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Bruce-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SDCC-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-C-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-C-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(30):  set(files C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(31):  if(files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(32):  foreach(file C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake;C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_ADI_COMPILER) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ADSP-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ADSP-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ADSP 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ADSP  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ADSP defined(_ADI_COMPILER) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMCC-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ARMCC-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ARMCC 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ARMCC  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ARMCC defined(__ARMCC_VERSION) && !defined(__clang__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION/100   % 100) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/ARMClang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ARMClang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ARMClang 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION/100   % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ARMClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ARMClang defined(__clang__) && defined(__ARMCOMPILER_VERSION) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/AppleClang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId AppleClang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_AppleClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_AppleClang 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_AppleClang defined(__clang__) && defined(__apple_build_version__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Borland-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Borland-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Borland 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Borland  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Borland defined(__BORLANDC__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Clang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Clang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Clang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Clang 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Clang defined(__clang__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Compaq-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Compaq 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Compaq  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Compaq defined(__DECCXX) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Cray-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Cray-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Cray 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Cray  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Cray defined(_CRAYC) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__clang__) && defined(__cray__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__cray_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__cray_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__cray_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CrayClang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId CrayClang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_CrayClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__cray_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__cray_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__cray_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_CrayClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_CrayClang defined(__clang__) && defined(__cray__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Embarcadero-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Embarcadero-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Embarcadero 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Embarcadero  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Embarcadero defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Fujitsu-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Fujitsu-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Fujitsu 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Fujitsu  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Fujitsu defined(__FUJITSU) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__CLANG_FUJITSU) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId FujitsuClang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_FujitsuClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_FujitsuClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_FujitsuClang defined(__CLANG_FUJITSU) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GHS-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId GHS-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_GHS 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_GHS  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_GHS defined(__ghs__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId GNU-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_GNU 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_GNU  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_GNU defined(__GNUC__) || defined(__GNUG__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/HP-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId HP-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_HP 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_HP  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_HP defined(__HP_aCC) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake(24):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IAR-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IAR-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IAR 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IAR  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IAR defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__open_xl__) && defined(__clang__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IBMClang-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IBMClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IBMClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IBMClang defined(__open_xl__) && defined(__clang__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake(43):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Intel-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Intel-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Intel 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Intel 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Intel defined(__INTEL_COMPILER) || defined(__ICC) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(35):  set(_compiler_id_simulate 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IntelLLVM-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IntelLLVM 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IntelLLVM 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IntelLLVM (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId LCC-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_LCC 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_LCC  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_LCC defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__)) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId MSVC-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_MSVC 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_MSVC  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_MSVC defined(_MSC_VER) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCOMPILER) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVHPC-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId NVHPC-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_NVHPC 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_NVHPC  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_NVHPC defined(__NVCOMPILER) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(22):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_ID "Clang"
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/NVIDIA-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId NVIDIA-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_NVIDIA 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_NVIDIA 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_ID "Clang"
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_NVIDIA defined(__NVCC__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId OpenWatcom-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_OpenWatcom 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_OpenWatcom  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_OpenWatcom defined(__WATCOMC__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ORANGEC__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ORANGEC_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ORANGEC_MINOR__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ORANGEC_PATCHLEVEL__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/OrangeC-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId OrangeC-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_OrangeC 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ORANGEC_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ORANGEC_MINOR__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ORANGEC_PATCHLEVEL__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_OrangeC  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_OrangeC defined(__ORANGEC__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PGI-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId PGI-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_PGI 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_PGI  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_PGI defined(__PGI) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/PathScale-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId PathScale-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_PathScale 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_PathScale  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_PathScale defined(__PATHCC__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SCO-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId SCO-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_SCO  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_SCO  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_SCO defined(__SCO_VERSION__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId SunPro-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_SunPro 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_SunPro  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_SunPro defined(__SUNPRO_CC) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TI-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId TI-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_TI 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_TI  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_TI defined(__TI_COMPILER_VERSION__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ti__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ti_major__)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ti_minor__)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ti_patchlevel__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ti_version__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/TIClang-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId TIClang-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_TIClang 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ti_major__)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ti_minor__)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ti_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ti_version__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_TIClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_TIClang defined(__clang__) && defined(__ti__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake(3):  set(_compiler_id_pp_test defined(__TASKING__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake(5):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Tasking-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Tasking-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Tasking 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Tasking  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Tasking defined(__TASKING__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId VisualAge-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_VisualAge 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_VisualAge  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_VisualAge defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/Watcom-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Watcom-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Watcom 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Watcom  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Watcom defined(__WATCOMC__) && __WATCOMC__ < 1200 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XL-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId XL-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_XL 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_XL  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_XL defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId XLClang-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_XLClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_XLClang  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_XLClang defined(__ibmxl__) && defined(__clang__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(6):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId zOS-CXX-DetermineCompiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_zOS 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_zOS  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_zOS defined(__IBMCPP__) && defined(__COMPILER_VER__) PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(36):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(37):  set(oneValueArgs PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(38):  cmake_parse_arguments(CID ID_STRING;VERSION_STRINGS;ID_DEFINE;PLATFORM_DEFAULT_COMPILER PREFIX  ID_STRING;VERSION_STRINGS;PLATFORM_DEFAULT_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(39):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Intel IntelLLVM PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS IBMClang XLClang XL VisualAge NVHPC PGI CrayClang Cray TI FujitsuClang Fujitsu GHS Tasking OrangeC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(72):  if(xCXX STREQUAL xC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(78):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang TIClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(85):  list(APPEND ordered_compilers Clang LCC GNU MSVC ADSP IAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(93):  if(xCXX STREQUAL xC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(99):  if(xCXX STREQUAL xCUDA )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(103):  if(xCXX STREQUAL xHIP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(107):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(115):  set(pp_if #if )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(117):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(121):  foreach(Id Intel;IntelLLVM;PathScale;Embarcadero;Borland;Watcom;OpenWatcom;SunPro;HP;Compaq;zOS;IBMClang;XLClang;XL;VisualAge;NVHPC;PGI;CrayClang;Cray;TI;FujitsuClang;Fujitsu;GHS;Tasking;OrangeC;SCO;ARMCC;AppleClang;ARMClang;TIClang;Clang;LCC;GNU;MSVC;ADSP;IAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Intel )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #if defined(__INTEL_COMPILER) || defined(__ICC)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#if defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_IntelLLVM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_PathScale )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__PATHCC__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "PathScale" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Embarcadero )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Embarcadero" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__BORLANDC__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Borland" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Watcom )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__WATCOMC__) && __WATCOMC__ < 1200
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Watcom" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_OpenWatcom )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__WATCOMC__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "OpenWatcom" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_SunPro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__SUNPRO_CC)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "SunPro" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_HP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__HP_aCC)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "HP" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Compaq )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__DECCXX)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Compaq" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_zOS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "zOS" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_IBMClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__open_xl__) && defined(__clang__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "IBMClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_XLClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__ibmxl__) && defined(__clang__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "XLClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_XL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "XL" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_VisualAge )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "VisualAge" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_NVHPC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__NVCOMPILER)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "NVHPC" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_PGI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__PGI)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "PGI" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_CrayClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__clang__) && defined(__cray__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "CrayClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__cray_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__cray_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__cray_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__cray__)
# define COMPILER_ID "CrayClang"
# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Cray )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(_CRAYC)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Cray" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_TI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__TI_COMPILER_VERSION__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "TI" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_FujitsuClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__CLANG_FUJITSU)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "FujitsuClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Fujitsu )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__FUJITSU)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Fujitsu" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_GHS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__ghs__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "GHS" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Tasking )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__TASKING__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Tasking" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_OrangeC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__ORANGEC__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "OrangeC" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ORANGEC_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ORANGEC_MINOR__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ORANGEC_PATCHLEVEL__) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ORANGEC__)
# define COMPILER_ID "OrangeC"
# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_SCO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__SCO_VERSION__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "SCO" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE  VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_ARMCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__ARMCC_VERSION) && !defined(__clang__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "ARMCC" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_AppleClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__clang__) && defined(__apple_build_version__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_ARMClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "ARMClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION/100   % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_TIClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__clang__) && defined(__ti__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "TIClang" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ti_major__)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ti_minor__)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ti_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ti_version__) VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__ti__)
# define COMPILER_ID "TIClang"
  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__clang__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_LCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "LCC" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_GNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__GNUC__) || defined(__GNUG__)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "GNU" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(_MSC_VER)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "MSVC" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_ADSP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(_ADI_COMPILER)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "ADSP" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(122):  if(NOT _compiler_id_pp_test_IAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(125):  set(id_content #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(126):  if(CID_ID_STRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(127):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(128):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(129):  string(APPEND id_content # define COMPILER_ID "IAR" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(131):  if(CID_ID_DEFINE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(135):  if(CID_VERSION_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(136):  set(PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(137):  set(MACRO_DEC DEC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(138):  set(MACRO_HEX HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(139):  string(CONFIGURE 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif VERSION_BLOCK @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND id_content 
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(142):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(143):  set(pp_if #elif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(146):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(147):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID "" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(158):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 

/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCompilerIdDetection.cmake(161):  set(CMAKE_CXX_COMPILER_ID_CONTENT 
/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */

#if defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif

#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif

#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)

#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)

#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif

#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)

#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)

#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)


#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)


#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif

#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif

#elif defined(__clang__) && defined(__cray__)
# define COMPILER_ID "CrayClang"
# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)

#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)

#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif


#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif

#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)

#elif defined(__ORANGEC__)
# define COMPILER_ID "OrangeC"
# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)

#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"

#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif


#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)

#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)

#elif defined(__clang__) && defined(__ti__)
# define COMPILER_ID "TIClang"
  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)

#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif

#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif

#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif

#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif


/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(409):  if(lang MATCHES ^(CUDA|HIP)$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(425):  unset(src_in CACHE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(426):  string(CONFIGURE /* This source file must have a .cpp extension so that all C++ compilers
   recognize the extension without flags.  Borland does not know .cxx for
   example.  */
#ifndef __cplusplus
# error "A C compiler has been selected for C++."
#endif

#if !defined(__has_include)
/* If the compiler does not have __has_include, pretend the answer is
   always no.  */
#  define __has_include(x) 0
#endif

@CMAKE_CXX_COMPILER_ID_CONTENT@

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
#ifdef SIMULATE_ID
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
#endif

#ifdef __QNXNTO__
char const* qnxnto = "INFO" ":" "qnxnto[]";
#endif

#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
#endif

@CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT@
@CMAKE_CXX_COMPILER_ID_ERROR_FOR_TEST@

#define CXX_STD_98 199711L
#define CXX_STD_11 201103L
#define CXX_STD_14 201402L
#define CXX_STD_17 201703L
#define CXX_STD_20 202002L
#define CXX_STD_23 202302L

#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG)
#  if _MSVC_LANG > CXX_STD_17
#    define CXX_STD _MSVC_LANG
#  elif _MSVC_LANG == CXX_STD_17 && defined(__cpp_aggregate_paren_init)
#    define CXX_STD CXX_STD_20
#  elif _MSVC_LANG > CXX_STD_14 && __cplusplus > CXX_STD_17
#    define CXX_STD CXX_STD_20
#  elif _MSVC_LANG > CXX_STD_14
#    define CXX_STD CXX_STD_17
#  elif defined(__INTEL_CXX11_MODE__) && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  elif defined(__INTEL_CXX11_MODE__)
#    define CXX_STD CXX_STD_11
#  else
#    define CXX_STD CXX_STD_98
#  endif
#elif defined(_MSC_VER) && defined(_MSVC_LANG)
#  if _MSVC_LANG > __cplusplus
#    define CXX_STD _MSVC_LANG
#  else
#    define CXX_STD __cplusplus
#  endif
#elif defined(__NVCOMPILER)
#  if __cplusplus == CXX_STD_17 && defined(__cpp_aggregate_paren_init)
#    define CXX_STD CXX_STD_20
#  else
#    define CXX_STD __cplusplus
#  endif
#elif defined(__INTEL_COMPILER) || defined(__PGI)
#  if __cplusplus == CXX_STD_11 && defined(__cpp_namespace_attributes)
#    define CXX_STD CXX_STD_17
#  elif __cplusplus == CXX_STD_11 && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  else
#    define CXX_STD __cplusplus
#  endif
#elif (defined(__IBMCPP__) || defined(__ibmxl__)) && defined(__linux__)
#  if __cplusplus == CXX_STD_11 && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  else
#    define CXX_STD __cplusplus
#  endif
#elif __cplusplus == 1 && defined(__GXX_EXPERIMENTAL_CXX0X__)
#  define CXX_STD CXX_STD_11
#else
#  define CXX_STD __cplusplus
#endif

const char* info_language_standard_default = "INFO" ":" "standard_default["
#if CXX_STD > CXX_STD_23
  "26"
#elif CXX_STD > CXX_STD_20
  "23"
#elif CXX_STD > CXX_STD_17
  "20"
#elif CXX_STD > CXX_STD_14
  "17"
#elif CXX_STD > CXX_STD_11
  "14"
#elif CXX_STD >= CXX_STD_11
  "11"
#else
  "98"
#endif
"]";

const char* info_language_extensions_default = "INFO" ":" "extensions_default["
#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
     defined(__TI_COMPILER_VERSION__)) &&                                     \
  !defined(__STRICT_ANSI__)
  "ON"
#else
  "OFF"
#endif
"]";

/*--------------------------------------------------------------------------*/

int main(int argc, char* argv[])
{
  int require = 0;
  require += info_compiler[argc];
  require += info_platform[argc];
  require += info_arch[argc];
#ifdef COMPILER_VERSION_MAJOR
  require += info_version[argc];
#endif
#ifdef COMPILER_VERSION_INTERNAL
  require += info_version_internal[argc];
#endif
#ifdef SIMULATE_ID
  require += info_simulate[argc];
#endif
#ifdef SIMULATE_VERSION_MAJOR
  require += info_simulate_version[argc];
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
  require += info_cray[argc];
#endif
  require += info_language_standard_default[argc];
  require += info_language_extensions_default[argc];
  (void)argv;
  return require;
}
 ID_CONTENT_OUT @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(427):  file(WRITE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CMakeCXXCompilerId.cpp /* This source file must have a .cpp extension so that all C++ compilers
   recognize the extension without flags.  Borland does not know .cxx for
   example.  */
#ifndef __cplusplus
# error "A C compiler has been selected for C++."
#endif

#if !defined(__has_include)
/* If the compiler does not have __has_include, pretend the answer is
   always no.  */
#  define __has_include(x) 0
#endif


/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */

#if defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif

#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif

#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)

#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)

#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif

#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)

#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)

#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)


#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)


#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif

#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif

#elif defined(__clang__) && defined(__cray__)
# define COMPILER_ID "CrayClang"
# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)

#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)

#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif


#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif

#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)

#elif defined(__ORANGEC__)
# define COMPILER_ID "OrangeC"
# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)

#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"

#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif


#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)

#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)

#elif defined(__clang__) && defined(__ti__)
# define COMPILER_ID "TIClang"
  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)

#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif

#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif

#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif

#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif


/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
#ifdef SIMULATE_ID
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
#endif

#ifdef __QNXNTO__
char const* qnxnto = "INFO" ":" "qnxnto[]";
#endif

#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
#endif

#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__MSYS__)
# define PLATFORM_ID "MSYS"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# elif defined(__VXWORKS__)
#  define PLATFORM_ID "VxWorks"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#elif defined(__INTEGRITY)
# if defined(INT_178B)
#  define PLATFORM_ID "Integrity178"

# else /* regular Integrity */
#  define PLATFORM_ID "Integrity"
# endif

# elif defined(_ADI_COMPILER)
#  define PLATFORM_ID "ADSP"

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_ARM64EC)
#  define ARCHITECTURE_ID "ARM64EC"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCRX__)
#  define ARCHITECTURE_ID "RX"

# elif defined(__ICCRH850__)
#  define ARCHITECTURE_ID "RH850"

# elif defined(__ICCRL78__)
#  define ARCHITECTURE_ID "RL78"

# elif defined(__ICCRISCV__)
#  define ARCHITECTURE_ID "RISCV"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# elif defined(__ICC430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__ICCV850__)
#  define ARCHITECTURE_ID "V850"

# elif defined(__ICC8051__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__ICCSTM8__)
#  define ARCHITECTURE_ID "STM8"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__ghs__)
# if defined(__PPC64__)
#  define ARCHITECTURE_ID "PPC64"

# elif defined(__ppc__)
#  define ARCHITECTURE_ID "PPC"

# elif defined(__ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__x86_64__)
#  define ARCHITECTURE_ID "x64"

# elif defined(__i386__)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__clang__) && defined(__ti__)
# if defined(__ARM_ARCH)
#  define ARCHITECTURE_ID "ARM"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__TI_COMPILER_VERSION__)
# if defined(__TI_ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__MSP430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__TMS320C28XX__)
#  define ARCHITECTURE_ID "TMS320C28x"

# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
#  define ARCHITECTURE_ID "TMS320C6x"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

# elif defined(__ADSPSHARC__)
#  define ARCHITECTURE_ID "SHARC"

# elif defined(__ADSPBLACKFIN__)
#  define ARCHITECTURE_ID "Blackfin"

#elif defined(__TASKING__)

# if defined(__CTC__) || defined(__CPTC__)
#  define ARCHITECTURE_ID "TriCore"

# elif defined(__CMCS__)
#  define ARCHITECTURE_ID "MCS"

# elif defined(__CARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__CARC__)
#  define ARCHITECTURE_ID "ARC"

# elif defined(__C51__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__CPCP__)
#  define ARCHITECTURE_ID "PCP"

# else
#  define ARCHITECTURE_ID ""
# endif

#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number. */
#ifdef COMPILER_VERSION
char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";

/* Construct a string literal encoding the version number components. */
#elif defined(COMPILER_VERSION_MAJOR)
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#elif defined(COMPILER_VERSION_INTERNAL_STR)
char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";



#define CXX_STD_98 199711L
#define CXX_STD_11 201103L
#define CXX_STD_14 201402L
#define CXX_STD_17 201703L
#define CXX_STD_20 202002L
#define CXX_STD_23 202302L

#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG)
#  if _MSVC_LANG > CXX_STD_17
#    define CXX_STD _MSVC_LANG
#  elif _MSVC_LANG == CXX_STD_17 && defined(__cpp_aggregate_paren_init)
#    define CXX_STD CXX_STD_20
#  elif _MSVC_LANG > CXX_STD_14 && __cplusplus > CXX_STD_17
#    define CXX_STD CXX_STD_20
#  elif _MSVC_LANG > CXX_STD_14
#    define CXX_STD CXX_STD_17
#  elif defined(__INTEL_CXX11_MODE__) && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  elif defined(__INTEL_CXX11_MODE__)
#    define CXX_STD CXX_STD_11
#  else
#    define CXX_STD CXX_STD_98
#  endif
#elif defined(_MSC_VER) && defined(_MSVC_LANG)
#  if _MSVC_LANG > __cplusplus
#    define CXX_STD _MSVC_LANG
#  else
#    define CXX_STD __cplusplus
#  endif
#elif defined(__NVCOMPILER)
#  if __cplusplus == CXX_STD_17 && defined(__cpp_aggregate_paren_init)
#    define CXX_STD CXX_STD_20
#  else
#    define CXX_STD __cplusplus
#  endif
#elif defined(__INTEL_COMPILER) || defined(__PGI)
#  if __cplusplus == CXX_STD_11 && defined(__cpp_namespace_attributes)
#    define CXX_STD CXX_STD_17
#  elif __cplusplus == CXX_STD_11 && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  else
#    define CXX_STD __cplusplus
#  endif
#elif (defined(__IBMCPP__) || defined(__ibmxl__)) && defined(__linux__)
#  if __cplusplus == CXX_STD_11 && defined(__cpp_aggregate_nsdmi)
#    define CXX_STD CXX_STD_14
#  else
#    define CXX_STD __cplusplus
#  endif
#elif __cplusplus == 1 && defined(__GXX_EXPERIMENTAL_CXX0X__)
#  define CXX_STD CXX_STD_11
#else
#  define CXX_STD __cplusplus
#endif

const char* info_language_standard_default = "INFO" ":" "standard_default["
#if CXX_STD > CXX_STD_23
  "26"
#elif CXX_STD > CXX_STD_20
  "23"
#elif CXX_STD > CXX_STD_17
  "20"
#elif CXX_STD > CXX_STD_14
  "17"
#elif CXX_STD > CXX_STD_11
  "14"
#elif CXX_STD >= CXX_STD_11
  "11"
#else
  "98"
#endif
"]";

const char* info_language_extensions_default = "INFO" ":" "extensions_default["
#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
     defined(__TI_COMPILER_VERSION__)) &&                                     \
  !defined(__STRICT_ANSI__)
  "ON"
#else
  "OFF"
#endif
"]";

/*--------------------------------------------------------------------------*/

int main(int argc, char* argv[])
{
  int require = 0;
  require += info_compiler[argc];
  require += info_platform[argc];
  require += info_arch[argc];
#ifdef COMPILER_VERSION_MAJOR
  require += info_version[argc];
#endif
#ifdef COMPILER_VERSION_INTERNAL
  require += info_version_internal[argc];
#endif
#ifdef SIMULATE_ID
  require += info_simulate[argc];
#endif
#ifdef SIMULATE_VERSION_MAJOR
  require += info_simulate_version[argc];
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
  require += info_cray[argc];
#endif
  require += info_language_standard_default[argc];
  require += info_language_extensions_default[argc];
  (void)argv;
  return require;
}
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(441):  set(COMPILER_DESCRIPTION Compiler:  
Build flags: 
Id flags:  
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(448):  if(Visual Studio 17 2022 MATCHES Visual Studio ([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(449):  set(vs_version 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(450):  set(id_platform x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(451):  set(id_lang CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(452):  set(id_PostBuildEvent_Command  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(453):  set(id_api_level  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(454):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES ^[Ll][Ll][Vv][Mm](_v[0-9]+(_xp)?)?$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(456):  elseif(CMAKE_VS_PLATFORM_TOOLSET MATCHES ^[Cc][Ll][Aa][Nn][Gg]([Cc][Ll]$|_[0-9]) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(458):  elseif(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(460):  elseif(CMAKE_VS_PLATFORM_TOOLSET MATCHES Intel )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(468):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(469):  set(id_cl cl.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(471):  if(CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(lang STREQUAL Fortran )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(491):  elseif(lang STREQUAL CSharp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(495):  elseif(NOT 17 VERSION_LESS 10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(496):  set(v 10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(497):  set(ext vcxproj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(503):  if(CMAKE_VS_PLATFORM_TOOLSET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(504):  if(CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(506):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(507):  set(id_toolset <PlatformToolset>v143</PlatformToolset> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(508):  if(CMAKE_VS_PLATFORM_TOOLSET_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(523):  if(CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(524):  set(id_PreferredToolArchitecture <PreferredToolArchitecture>x64</PreferredToolArchitecture> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(528):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(531):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsStore )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(534):  elseif(CMAKE_SYSTEM_NAME STREQUAL Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(537):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(538):  set(id_keyword Win32Proj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(539):  set(id_system  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(541):  if(id_keyword STREQUAL Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(550):  elseif(id_system AND CMAKE_SYSTEM_VERSION MATCHES ^([0-9]+\.[0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(552):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(553):  set(id_system_version  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(555):  if(id_keyword STREQUAL Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(557):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(558):  set(id_config_type Application )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(560):  if(CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(561):  set(id_WindowsTargetPlatformVersion <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(563):  if(CMAKE_VS_PLATFORM_TOOLSET_VCTARGETS_CUSTOM_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(566):  if(CMAKE_VS_TARGET_FRAMEWORK_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(567):  set(id_TargetFrameworkVersion <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(569):  if(CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(572):  if(CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(575):  set(id_CustomGlobals  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(576):  foreach(pair IN LISTS CMAKE_VS_GLOBALS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(581):  if(id_keyword STREQUAL Android )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(583):  elseif(id_platform STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(585):  elseif(id_platform STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(587):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(588):  set(id_WindowsSDKDesktopARMSupport  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(590):  if(CMAKE_VS_WINCE_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(597):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(598):  set(id_subsystem 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(600):  set(id_dir C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(601):  set(id_src CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(602):  set(id_compile ClCompile )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(603):  if(id_cl_var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(605):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(606):  set(id_PostBuildEvent_Command for %%i in (cl.exe) do %40echo CMAKE_CXX_COMPILER=%%~$PATH:i )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(608):  set(id_Import_props  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(609):  set(id_Import_targets  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(610):  set(id_ItemDefinitionGroup_entry  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(611):  set(id_Link_AdditionalDependencies  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(612):  if(lang STREQUAL CUDA )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(647):  configure_file(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CompilerId/VS-10.vcxproj.in C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.vcxproj @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(649):  if(CMAKE_VS_MSBUILD_COMMAND AND NOT lang STREQUAL Fortran )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(650):  set(command C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe CompilerIdCXX.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(658):  if(command )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(659):  execute_process(COMMAND C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe;CompilerIdCXX.vcxproj;/p:Configuration=Debug;/p:Platform=x64;/p:VisualStudioVersion=17.0 WORKING_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX OUTPUT_VARIABLE CMAKE_CXX_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_CXX_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_CXX_COMPILER_ID_RESULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(671):  if(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58
 MATCHES CMAKE_CXX_COMPILER=([^%
]+)[
] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(673):  string(REGEX REPLACE  \(TaskId:[0-9]*\)$  _comp C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(674):  if(EXISTS C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(675):  file(TO_CMAKE_PATH C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe _comp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(676):  set(CMAKE_CXX_COMPILER_ID_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(842):  if(CMAKE_CXX_COMPILER_ID_RESULT OR CMAKE_CXX_COMPILER_ID_OUTPUT MATCHES warning #5117: Bad # preprocessor line )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(875):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(877):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58


 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(888):  string(REGEX REPLACE ([][]) [\1] _glob_id_dir C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(889):  file(GLOB files RELATIVE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/* C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/*.xctest/* C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/*.framework/* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(901):  list(REMOVE_ITEM files CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(902):  set(COMPILER_CXX_PRODUCED_FILES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(903):  foreach(file CompilerIdCXX.exe;CompilerIdCXX.vcxproj;Debug;tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(904):  if(NOT IS_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(905):  list(APPEND COMPILER_CXX_PRODUCED_FILES CompilerIdCXX.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(906):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG Compilation of the CXX compiler identification source " CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(904):  if(NOT IS_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.vcxproj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(905):  list(APPEND COMPILER_CXX_PRODUCED_FILES CompilerIdCXX.vcxproj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(906):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG Compilation of the CXX compiler identification source " CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(904):  if(NOT IS_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(904):  if(NOT IS_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(912):  if(NOT COMPILER_CXX_PRODUCED_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(920):  set(COMPILER_CXX_PRODUCED_OUTPUT 閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(924):  set(COMPILER_CXX_PRODUCED_FILES CompilerIdCXX.exe;CompilerIdCXX.vcxproj PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(925):  set(COMPILER_CXX_PRODUCED_OUTPUT 閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(926):  set(_CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(9):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(CXX 閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(933):  foreach(vendor  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(938):  set(CMAKE_CXX_COMPILER_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(11):  if(NOT CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(12):  foreach(file CompilerIdCXX.exe;CompilerIdCXX.vcxproj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(13):  CMAKE_DETERMINE_COMPILER_ID_CHECK(CXX C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(945):  if(NOT CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(947):  set(COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(948):  set(COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(949):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(950):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(951):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(952):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(953):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(954):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(955):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(956):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(957):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(958):  set(COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(959):  set(DIGIT_VALUE_1 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(960):  set(DIGIT_VALUE_2 10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(961):  set(DIGIT_VALUE_3 100 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(962):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(963):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(964):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(965):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(966):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(967):  set(PLATFORM_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(968):  set(ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(969):  set(SIMULATE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(970):  set(SIMULATE_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(971):  set(HOST_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(972):  set(HOST_COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(973):  set(CMAKE_CXX_COMPILER_ID_STRING_REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\[[^]]*\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(974):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(975):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(976):  cmake_policy(SET CMP0159 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(977):  file(STRINGS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe CMAKE_CXX_COMPILER_ID_STRINGS LIMIT_COUNT 38  REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\[[^]]*\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(980):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(981):  if(NOT CMAKE_CXX_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(982):  break()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(987):  if(CMAKE_CXX_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(996):  list(FILTER CMAKE_CXX_COMPILER_ID_STRINGS EXCLUDE REGEX \?<Constant \" )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1001):  if(CMAKE_CXX_COMPILER_ID_STRINGS MATCHES (.)I.N.F.O.:. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1007):  string(REGEX MATCHALL INFO:[A-Za-z0-9_]+\[([^]"]*)\] CMAKE_CXX_COMPILER_ID_STRINGS INFO:compiler[MSVC];INFO:compiler_version[00000019.00000044.00035215.00000000];INFO:platform[Windows];INFO:arch[x64];INFO:standard_default[14];INFO:extensions_default[OFF] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1011):  list(REMOVE_DUPLICATES CMAKE_CXX_COMPILER_ID_STRINGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1013):  set(COMPILER_ID_TWICE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1014):  foreach(info INFO:compiler[MSVC];INFO:compiler_version[00000019.00000044.00035215.00000000];INFO:platform[Windows];INFO:arch[x64];INFO:standard_default[14];INFO:extensions_default[OFF] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:compiler[MSVC] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1016):  if(COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1019):  set(COMPILER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:compiler[MSVC] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:compiler[MSVC] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:compiler[MSVC] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:compiler[MSVC] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:compiler[MSVC] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:compiler[MSVC] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:compiler[MSVC] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:compiler[MSVC] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:compiler[MSVC] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:compiler[MSVC] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1028):  string(REGEX REPLACE ^0+([0-9]+) \1 COMPILER_VERSION 00000019.00000044.00035215.00000000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1029):  string(REGEX REPLACE \.0+([0-9]) .\1 COMPILER_VERSION 19.00000044.00035215.00000000 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:compiler_version[00000019.00000044.00035215.00000000] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:platform[Windows] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:platform[Windows] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1022):  set(PLATFORM_ID Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:platform[Windows] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:platform[Windows] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:platform[Windows] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:platform[Windows] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:platform[Windows] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:platform[Windows] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:platform[Windows] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:platform[Windows] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:platform[Windows] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:platform[Windows] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:platform[Windows] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:arch[x64] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:arch[x64] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:arch[x64] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1025):  set(ARCHITECTURE_ID x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:arch[x64] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:arch[x64] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:arch[x64] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:arch[x64] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:arch[x64] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:arch[x64] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:arch[x64] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:arch[x64] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:arch[x64] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:arch[x64] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:arch[x64] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:standard_default[14] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:standard_default[14] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:standard_default[14] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:standard_default[14] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:standard_default[14] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:standard_default[14] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:standard_default[14] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:standard_default[14] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:standard_default[14] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:standard_default[14] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:standard_default[14] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:standard_default[14] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1067):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:standard_default[14] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1015):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1021):  if(INFO:extensions_default[OFF] MATCHES INFO:platform\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1024):  if(INFO:extensions_default[OFF] MATCHES INFO:arch\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1027):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1031):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1037):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1038):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1039):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1046):  if(INFO:extensions_default[OFF] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1049):  if(INFO:extensions_default[OFF] MATCHES INFO:simulate\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1052):  if(INFO:extensions_default[OFF] MATCHES INFO:simulate_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1056):  if(INFO:extensions_default[OFF] MATCHES INFO:qnxnto\[\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1059):  if(INFO:extensions_default[OFF] MATCHES INFO:host_compiler\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1062):  if(INFO:extensions_default[OFF] MATCHES INFO:host_compiler_version\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1066):  if(INFO:extensions_default[OFF] MATCHES INFO:standard_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1069):  if(INFO:extensions_default[OFF] MATCHES INFO:extensions_default\[([^]"]*)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1070):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1075):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1089):  if(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1091):  file(READ C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1092):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1093):  string(SUBSTRING f0 0 1 peoffsethex1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1094):  string(SUBSTRING f0 1 1 peoffsethex2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1095):  set(peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1096):  string(REPLACE a 10 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1097):  string(REPLACE b 11 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1098):  string(REPLACE c 12 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1099):  string(REPLACE d 13 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1100):  string(REPLACE e 14 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1101):  string(REPLACE f 15 peoffsetexpression f * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1102):  math(EXPR peoffset 15 * 16 + 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1104):  file(READ C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe peheader LIMIT 6 OFFSET 240 HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1105):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1107):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1109):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1111):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1118):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1119):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1120):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1121):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1122):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1123):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1124):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1125):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1126):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1127):  set(CMAKE_CXX_HOST_COMPILER_ID  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1128):  set(CMAKE_CXX_HOST_COMPILER_VERSION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1132):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1134):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG The CXX compiler identification is MSVC, found in:
   C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1137):  if(CMAKE_CXX_HOST_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1141):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG 
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1148):  set(_CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in:
  C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe

 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1152):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1153):  file(READ C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe CMAKE_EXECUTABLE_MAGIC LIMIT 4 HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1156):  if(4d5a9000 STREQUAL 7f454c46 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1166):  if(4d5a9000 MATCHES feedface|cefaedfe|feedfacf|cffaedfe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1171):  if(4d5a9000 MATCHES ^01(df|f7) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1177):  set(CMAKE_CXX_COMPILER_ID MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1178):  set(CMAKE_CXX_PLATFORM_ID Windows PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1179):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1180):  set(MSVC_CXX_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1182):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1183):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1184):  set(CMAKE_CXX_COMPILER_WRAPPER  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1185):  set(CMAKE_CXX_SIMULATE_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1186):  set(CMAKE_CXX_SIMULATE_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1187):  set(COMPILER_QNXNTO  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1188):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1189):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1190):  set(CMAKE_CXX_HOST_COMPILER_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1191):  set(CMAKE_CXX_HOST_COMPILER_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(13):  CMAKE_DETERMINE_COMPILER_ID_CHECK(CXX C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.vcxproj CMakeCXXCompilerId.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(945):  if(NOT CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1152):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1153):  file(READ C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.vcxproj CMAKE_EXECUTABLE_MAGIC LIMIT 4 HEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1156):  if(3c3f786d STREQUAL 7f454c46 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1166):  if(3c3f786d MATCHES feedface|cefaedfe|feedfacf|cffaedfe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1171):  if(3c3f786d MATCHES ^01(df|f7) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1177):  set(CMAKE_CXX_COMPILER_ID MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1178):  set(CMAKE_CXX_PLATFORM_ID Windows PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1179):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1180):  set(MSVC_CXX_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1182):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1183):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1184):  set(CMAKE_CXX_COMPILER_WRAPPER  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1185):  set(CMAKE_CXX_SIMULATE_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1186):  set(CMAKE_CXX_SIMULATE_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1187):  set(COMPILER_QNXNTO  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1188):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1189):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1190):  set(CMAKE_CXX_HOST_COMPILER_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(1191):  set(CMAKE_CXX_HOST_COMPILER_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(17):  message(CONFIGURE_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in:
  C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CompilerIdCXX.exe

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(18):  unset(_CMAKE_CXX_COMPILER_ID_LOG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(65):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(66):  break()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(69):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(70):  break()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(76):  if(CMAKE_CXX_COMPILER_ID_TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(77):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(78):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(84):  if(CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(91):  if(NOT CMAKE_CXX_COMPILER_ID AND Visual Studio 17 2022 MATCHES Green Hills MULTI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(96):  if(lang STREQUAL CUDA AND CMAKE_CXX_COMPILER_ID STREQUAL NVIDIA AND NOT CMAKE_CXX_COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(112):  if(lang STREQUAL Swift AND CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(136):  if(lang STREQUAL ISPC AND CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(157):  if(lang STREQUAL Fortran AND CMAKE_CXX_COMPILER_ID STREQUAL LCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(177):  if(xCXX STREQUAL xFortran AND xMSVC STREQUAL xLLVMFlang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(206):  if(COMPILER_QNXNTO AND ( CMAKE_CXX_COMPILER_ID STREQUAL GNU OR CMAKE_CXX_COMPILER_ID STREQUAL LCC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(223):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(241):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(242):  set(CMAKE_EXECUTABLE_FORMAT Unknown CACHE INTERNAL Executable file format )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(245):  if(( CMAKE_GENERATOR MATCHES ^Ninja OR ( ( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake ) ) AND MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(255):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(256):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(259):  set(_variant  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(260):  if(xMSVC STREQUAL xClang OR xMSVC STREQUAL xIntelLLVM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(281):  elseif(xMSVC STREQUAL xGNU OR xMSVC STREQUAL xAppleClang OR xMSVC STREQUAL xFujitsuClang OR xMSVC STREQUAL xTIClang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(286):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(287):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(294):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(295):  if(xCXX STREQUAL xCXX AND xMSVC STREQUAL xClang AND xMSVC STREQUAL xGNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(315):  set(CMAKE_CXX_STANDARD_LIBRARY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(316):  if(xCXX STREQUAL xCXX AND EXISTS C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CXX-DetectStdlib.h AND xMSVC STREQUAL xClang AND xMSVC STREQUAL xGNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(339):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(340):  if(CMAKE_CXX_COMPILER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(341):  set(_version  19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(345):  if(CMAKE_CXX_COMPILER_ARCHITECTURE_ID AND xMSVC STREQUAL xIAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(347):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(348):  set(_archid  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(350):  if(CMAKE_CXX_HOST_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(356):  set(_hostcc  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(358):  message(STATUS The CXX compiler identification is  MSVC 19.44.35215.0 )
-- The CXX compiler identification is MSVC 19.44.35215.0
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(360):  unset(_hostcc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(361):  unset(_archid )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(362):  unset(_version )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(363):  unset(_variant )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(368):  if(lang STREQUAL Fortran AND CMAKE_CXX_COMPILER_ID STREQUAL XL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(372):  set(CMAKE_CXX_COMPILER_ID MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(373):  set(CMAKE_CXX_PLATFORM_ID Windows PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(374):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(375):  set(MSVC_CXX_ARCHITECTURE_ID x64 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(377):  set(CMAKE_CXX_XCODE_ARCHS  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(378):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(379):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(380):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(381):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(382):  set(CMAKE_CXX_COMPILER_WRAPPER  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(383):  set(CMAKE_CXX_SIMULATE_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(384):  set(CMAKE_CXX_SIMULATE_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(385):  set(CMAKE_CXX_HOST_COMPILER_ID  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(386):  set(CMAKE_CXX_HOST_COMPILER_VERSION  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(387):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(388):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(389):  set(CMAKE_CXX_COMPILER_PRODUCED_OUTPUT 閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:51銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淒ebug\CompilerIdCXX.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\CompilerIdCXX.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€淒ebug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\3.31.6-msvc6\CompilerIdCXX\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.58
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(390):  set(CMAKE_CXX_COMPILER_PRODUCED_FILES CompilerIdCXX.exe;CompilerIdCXX.vcxproj PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(391):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake(392):  set(CMAKE_CXX_STANDARD_LIBRARY  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(128):  _cmake_find_compiler_sysroot(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompiler.cmake(160):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU OR CMAKE_CXX_COMPILER_ID STREQUAL LCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(131):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(153):  if(NOT _CMAKE_TOOLCHAIN_LOCATION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(154):  get_filename_component(_CMAKE_TOOLCHAIN_LOCATION C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(166):  if(NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(168):  if(CMAKE_CXX_COMPILER_ID MATCHES GNU|Clang|QCC|LCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(194):  elseif(CMAKE_CXX_COMPILER_ID MATCHES TI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(206):  set(_CMAKE_PROCESSING_LANGUAGE CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(207):  include(CMakeFindBinUtils )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(23):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(24):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(27):  function(__resolve_tool_path CMAKE_TOOL SEARCH_PATH DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(60):  __resolve_tool_path(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 Default Linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(61):  __resolve_tool_path(CMAKE_MT C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 Default Manifest Tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(63):  macro(__resolve_linker_path __linker_type __name __search_path __doc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(70):  set(_CMAKE_TOOL_VARS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(73):  if(( x STREQUAL xMSVC AND ( xMSVC STREQUAL xMSVC OR NOT xMSVC STREQUAL xClang ) ) OR xMSVC STREQUAL xMSVC OR ( CMAKE_HOST_WIN32 AND xMSVC STREQUAL xPGI ) OR ( CMAKE_HOST_WIN32 AND xMSVC STREQUAL xNVIDIA ) OR ( CMAKE_HOST_WIN32 AND xCXX STREQUAL xISPC ) OR ( CMAKE_GENERATOR MATCHES Visual Studio AND NOT CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(84):  set(_CMAKE_LINKER_NAMES link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(85):  set(_CMAKE_AR_NAMES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(86):  set(_CMAKE_MT_NAMES mt )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(89):  if(xMSVC MATCHES ^x(Clang|LLVMFlang)$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(97):  elseif(xMSVC STREQUAL xIntel )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(102):  list(APPEND _CMAKE_TOOL_VARS LINKER MT AR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(105):  __resolve_linker_path(LINK link C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 link Linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(64):  if(NOT CMAKE_LINKER_LINK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(65):  set(CMAKE_LINKER_LINK link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(67):  __resolve_tool_path(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 link Linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_LINKER_LINK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(34):  get_filename_component(_CMAKE_USER_TOOL_PATH link DIRECTORY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(36):  if(NOT _CMAKE_USER_TOOL_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(39):  find_program(_CMAKE_TOOL_WITH_PATH NAMES link HINTS C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(40):  if(_CMAKE_TOOL_WITH_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(43):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(45):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_LINKER_LINK PROPERTY TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(47):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(52):  unset(_CMAKE_TOOL_WITH_PATH CACHE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(106):  __resolve_linker_path(LLD lld-link C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 lld-link Linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(64):  if(NOT CMAKE_LINKER_LLD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(65):  set(CMAKE_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(67):  __resolve_tool_path(CMAKE_LINKER_LLD C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 lld-link Linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_LINKER_LLD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(34):  get_filename_component(_CMAKE_USER_TOOL_PATH lld-link DIRECTORY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(36):  if(NOT _CMAKE_USER_TOOL_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(39):  find_program(_CMAKE_TOOL_WITH_PATH NAMES lld-link HINTS C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(40):  if(_CMAKE_TOOL_WITH_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(52):  unset(_CMAKE_TOOL_WITH_PATH CACHE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(212):  foreach(_CMAKE_TOOL IN LISTS _CMAKE_TOOL_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(214):  set(_CMAKE_LINKER_FIND_NAMES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(215):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_LINKER_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(216):  list(APPEND _CMAKE_LINKER_FIND_NAMES link link link link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(223):  list(REMOVE_DUPLICATES _CMAKE_LINKER_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(225):  find_program(CMAKE_LINKER NAMES link HINTS C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(226):  unset(_CMAKE_LINKER_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(214):  set(_CMAKE_MT_FIND_NAMES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(215):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_MT_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(216):  list(APPEND _CMAKE_MT_FIND_NAMES mt mt mt mt )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(223):  list(REMOVE_DUPLICATES _CMAKE_MT_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(225):  find_program(CMAKE_MT NAMES mt HINTS C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(226):  unset(_CMAKE_MT_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(214):  set(_CMAKE_AR_FIND_NAMES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(215):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_AR_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(216):  list(APPEND _CMAKE_AR_FIND_NAMES lib lib lib lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(223):  list(REMOVE_DUPLICATES _CMAKE_AR_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(225):  find_program(CMAKE_AR NAMES lib HINTS C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64 NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(226):  unset(_CMAKE_AR_FIND_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(229):  if(NOT CMAKE_RANLIB )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(230):  set(CMAKE_RANLIB : CACHE INTERNAL noop for ranlib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(233):  if(APPLE AND TAPI IN_LIST _CMAKE_TOOL_VARS AND NOT CMAKE_TAPI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(248):  if(CMAKE_PLATFORM_HAS_INSTALLNAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(259):  foreach(_CMAKE_TOOL IN LISTS _CMAKE_TOOL_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(260):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_LINKER PROPERTY TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(261):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(262):  mark_as_advanced(CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(264):  unset(_CMAKE_LINKER_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(260):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_MT PROPERTY TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(261):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(262):  mark_as_advanced(CMAKE_MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(264):  unset(_CMAKE_MT_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(260):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_AR PROPERTY TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(261):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(262):  mark_as_advanced(CMAKE_AR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(264):  unset(_CMAKE_AR_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(266):  unset(_CMAKE_TOOL_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(267):  unset(_CMAKE_TOOL_CACHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(268):  unset(_CMAKE_TOOL_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(269):  unset(_CMAKE_TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(271):  if(xMSVC MATCHES ^xIAR$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindBinUtils.cmake(278):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(208):  include(Compiler/MSVC-FindBinUtils OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(209):  unset(_CMAKE_PROCESSING_LANGUAGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(211):  if(CMAKE_CXX_COMPILER_SYSROOT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(215):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(216):  set(_SET_CMAKE_CXX_COMPILER_SYSROOT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(219):  if(CMAKE_CXX_COMPILER_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(220):  set(_SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(226):  if(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(227):  set(SET_MSVC_CXX_ARCHITECTURE_ID set(MSVC_CXX_ARCHITECTURE_ID x64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(231):  if(CMAKE_CXX_XCODE_ARCHS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(237):  configure_file(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompiler.cmake.in C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake(242):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(81):  if(NOT DEFINED CMAKE_EXPORT_BUILD_DATABASE AND CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(95):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(187):  if(NOT DEFINED CMAKE_INSTALL_PREFIX AND NOT DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(189):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(192):  if(DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(195):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(198):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(201):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(202):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(102):  if(Visual Studio 17 2022 MATCHES (Win64|IA64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(104):  elseif(x64 MATCHES x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(105):  set(arch_hint x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(118):  if(NOT arch_hint )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(140):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(142):  if(C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(146):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(148):  if(C:\Program Files STREQUAL C:\Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(151):  if(NOT x64 STREQUAL x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(171):  if(NOT C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(172):  file(TO_CMAKE_PATH C:\Program Files _base )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(179):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(203):  set(CMAKE_INSTALL_PREFIX C:/Program Files/ORB_SLAM3 CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(206):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(212):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(214):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(1):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(2):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(3):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(4):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(6):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(7):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(9):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(10):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(11):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(12):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(13):  set(CMAKE_DL_LIBS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(14):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(16):  set(CMAKE_FIND_LIBRARY_PREFIXES  lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(20):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.lib .lib .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(28):  if(CMAKE_GENERATOR MATCHES Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(35):  if(CMAKE_GENERATOR MATCHES NMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(40):  include(Platform/WindowsPaths )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31 PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/ORB_SLAM3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files/ORB_SLAM3 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/ORB_SLAM3/bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin /bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(59):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(60):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(4):  include(Compiler/MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(5):  if(__COMPILER_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(8):  set(__COMPILER_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(10):  macro(__compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(5):  __compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(11):  set(CMAKE_CXX_CLANG_TIDY_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(12):  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(13):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -WX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(16):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.05 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(17):  set(CMAKE_CXX_COMPILE_OPTIONS_JMC -JMC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(21):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30036.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(22):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -external:I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(23):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX_WARNING -external:W0  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(7):  include(Compiler/CMakeCommonCompilerMacros )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(146):  macro(cmake_record_cuda_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(186):  macro(cmake_record_hip_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(205):  function(cmake_create_cxx_import_std std variable )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(9):  if(( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0.24215.1 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 19.10 ) OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.10.25017 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(17):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(18):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(19):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(20):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(21):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(23):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.11.25505 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(24):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(25):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(26):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(27):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(33):  set(CMAKE_CXX_STANDARD_LATEST 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(35):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30129 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(36):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(37):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(38):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(39):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(40):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(47):  __compiler_check_default_language_standard(CXX 19.0 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 19.0 14  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(93):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(94):  string(CONCAT CMAKE_CXX_SCANDEP_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> <SOURCE> -nologo -TP  -showIncludes  -scanDependencies <DYNDEP_FILE>  -Fo<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(99):  set(CMAKE_CXX_SCANDEP_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(100):  set(CMAKE_CXX_MODULE_MAP_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(101):  set(CMAKE_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(102):  set(CMAKE_CXX_MODULE_BMI_ONLY_FLAG -ifcOnly;-ifcOutput;<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-cl-AMD64 OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(1):  include(Platform/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(6):  if(__WINDOWS_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(9):  set(__WINDOWS_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(11):  set(CMAKE_LIBRARY_PATH_FLAG -LIBPATH: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(12):  set(CMAKE_LINK_LIBRARY_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(13):  set(MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(19):  if(NOT DEFINED CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(23):  if(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(25):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(26):  set(CMAKE_CL_NOLOGO /nologo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(29):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(31):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(33):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(34):  set(_PLATFORM_LINK_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(37):  set(CMAKE_SUPPORT_WINDOWS_EXPORT_ALL_SYMBOLS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(38):  if(NOT CMAKE_NO_BUILD_TYPE AND CMAKE_GENERATOR MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(39):  set(CMAKE_NO_BUILD_TYPE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(42):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(43):  set(MSVC_IDE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(48):  if(NOT MSVC_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(49):  if(x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(51):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(52):  set(_compiler_version 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(66):  if(19.44.35215.0 MATCHES ^([0-9]+)\.([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(67):  math(EXPR MSVC_VERSION 19*100 + 44 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(72):  if(MSVC_VERSION GREATER_EQUAL 1930 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(74):  set(MSVC_TOOLSET_VERSION 143 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(103):  set(MSVC10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(104):  set(MSVC11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(105):  set(MSVC12 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(106):  set(MSVC14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(107):  set(MSVC60 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(108):  set(MSVC70 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(109):  set(MSVC71 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(110):  set(MSVC80 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(111):  set(MSVC90 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(112):  set(CMAKE_COMPILER_2005 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(113):  set(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(114):  if(NOT 19.44.35215.0 VERSION_LESS 20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(116):  elseif(NOT 19.44.35215.0 VERSION_LESS 19 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(117):  set(MSVC14 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(139):  if(MSVC_C_ARCHITECTURE_ID MATCHES 64 OR MSVC_CXX_ARCHITECTURE_ID MATCHES 64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(140):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(144):  if(CMAKE_FORCE_WIN64 OR CMAKE_FORCE_IA64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(145):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(148):  if(1944 GREATER 1599 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(149):  set(MSVC_INCREMENTAL_DEFAULT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(153):  set(CMAKE_BUILD_TYPE_INIT Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(156):  foreach(lang C CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_C_ARCHITECTURE_FAMILY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_CXX_ARCHITECTURE_FAMILY x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(169):  cmake_policy(GET CMP0117 __WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(170):  if(__WINDOWS_MSVC_CMP0117 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(171):  set(_GR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(175):  unset(__WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(177):  if(WINCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(215):  elseif(WINDOWS_PHONE OR WINDOWS_STORE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(228):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(240):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(241):  set(_PLATFORM_DEFINES /DWIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(242):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(245):  if(_MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM OR _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(247):  elseif(MSVC_VERSION GREATER 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(248):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(252):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(253):  set(_RTC1 /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(254):  set(_FLAGS_CXX  /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(256):  set(CMAKE_C_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(263):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(267):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(271):  if(MSVC_VERSION LESS 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(277):  unset(_GR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(279):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(282):  set(CMAKE_LINK_DEF_FILE_FLAG /DEF: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(284):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(296):  elseif(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(297):  if(MSVC_CXX_ARCHITECTURE_ID MATCHES ^ARMV.I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(299):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(301):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(303):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(305):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(306):  set(_MACHINE_ARCH_FLAG /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(314):  set(MSVC_INCREMENTAL_YES_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(315):  if(NOT WINDOWS_PHONE AND NOT WINDOWS_STORE AND NOT CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(316):  if(NOT MSVC_INCREMENTAL_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(318):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(319):  set(MSVC_INCREMENTAL_YES_FLAG /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(323):  foreach(t EXE SHARED MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(337):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(339):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(340):  string(APPEND CMAKE_STATIC_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(342):  unset(_MACHINE_ARCH_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(344):  cmake_policy(GET CMP0091 __WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(345):  if(__WINDOWS_MSVC_CMP0091 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(346):  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT MultiThreaded$<$<CONFIG:Debug>:Debug>DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(350):  unset(__WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(352):  cmake_policy(GET CMP0141 __WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(353):  if(__WINDOWS_MSVC_CMP0141 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(356):  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(358):  unset(__WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(361):  macro(__windows_compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(520):  macro(__windows_compiler_msvc_enable_rc flags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(2):  set(_COMPILE_CXX  /TP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(3):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(4):  set(_FS_CXX  /FS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(6):  __windows_compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(362):  if(NOT MSVC_VERSION LESS 1400 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(364):  set(_CMAKE_VS_LINK_DLL <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(365):  set(_CMAKE_VS_LINK_EXE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(367):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(369):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(370):  set(_DLL_DRIVER /dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(372):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(374):  unset(_DLL_DRIVER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(376):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(377):  set(CMAKE_CXX_CREATE_STATIC_LIBRARY <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(379):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /Fo<OBJECT> /Fd<TARGET_COMPILE_PDB> /FS -c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(381):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> > <PREPROCESSED_SOURCE>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(383):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /FoNUL /FAs /Fa<ASSEMBLY_SOURCE> /c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(386):  set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(387):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(390):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(393):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(394):  set(CMAKE_CXX_CREATE_WIN32_EXE /subsystem:windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(395):  set(CMAKE_CXX_CREATE_CONSOLE_EXE /subsystem:console )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(398):  set(CMAKE_PCH_EXTENSION .pch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(399):  set(CMAKE_LINK_PCH ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(400):  if(CMAKE_CXX_COMPILER_ID STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(410):  elseif(MSVC_VERSION GREATER_EQUAL 1913 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(412):  set(CMAKE_PCH_PROLOGUE #pragma system_header )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(414):  if(NOT MSVC STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(415):  set(CMAKE_PCH_COPY_COMPILE_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(417):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH /Yu<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(418):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH /Yc<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(420):  if(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(421):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(422):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(424):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO /GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(425):  set(CMAKE_CXX_LINK_OPTIONS_IPO /INCREMENTAL:NO /LTCG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(426):  string(REPLACE <LINK_FLAGS>  /LTCG <LINK_FLAGS>  CMAKE_CXX_CREATE_STATIC_LIBRARY_IPO <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(448):  if(xCXX STREQUAL xC OR xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(450):  if(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(451):  set(_MDd  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(452):  set(_MD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(458):  cmake_policy(GET CMP0092 _cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(459):  if(_cmp0092 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(460):  set(_W3  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(461):  set(_Wall  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(466):  unset(_cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(468):  if(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(470):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(471):  set(_Zi  /Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(474):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(482):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(483):  string(APPEND CMAKE_CXX_FLAGS_INIT  /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(484):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(485):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  /O2 /Ob2 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(486):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  /Zi /O2 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(487):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  /O1 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(489):  unset(_Wall )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(490):  unset(_W3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(491):  unset(_MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(492):  unset(_MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(493):  unset(_Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(495):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreaded -MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(496):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDLL -MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(497):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebug -MTd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(498):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebugDLL -MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(499):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded -Z7 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(500):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_ProgramDatabase -Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(501):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_EditAndContinue -ZI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(503):  set(CMAKE_CXX_LINKER_SUPPORTS_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(505):  __windows_compiler_msvc_enable_rc(/DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(521):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(522):  set(CMAKE_RC_COMPILER_INIT rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(524):  if(NOT CMAKE_RC_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(526):  string(REPLACE  /D  -D fixed_flags  /DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(527):  string(APPEND CMAKE_RC_FLAGS_INIT   -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(529):  if(NOT CMAKE_RC_FLAGS_DEBUG_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(530):  string(APPEND CMAKE_RC_FLAGS_DEBUG_INIT  -D_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(533):  enable_language(RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(11):  if(NOT CMAKE_RC_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(13):  if(NOT  STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(25):  if(CMAKE_GENERATOR_RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(26):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(32):  if(CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(33):  set(_CMAKE_RC_COMPILER_LIST rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(34):  set(_CMAKE_RC_COMPILER_FALLBACK rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(40):  find_program(CMAKE_RC_COMPILER NAMES rc DOC RC compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(41):  if(_CMAKE_RC_COMPILER_FALLBACK AND NOT CMAKE_RC_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(44):  unset(_CMAKE_RC_COMPILER_FALLBACK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(45):  unset(_CMAKE_RC_COMPILER_LIST )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(48):  mark_as_advanced(CMAKE_RC_COMPILER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(50):  get_filename_component(_CMAKE_RC_COMPILER_NAME_WE C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(51):  if(_CMAKE_RC_COMPILER_NAME_WE STREQUAL windres )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(53):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(54):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(58):  configure_file(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCCompiler.cmake.in C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineRCCompiler.cmake(60):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(13):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(14):  get_filename_component(CMAKE_BASE_NAME C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-rc.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-rc OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT    -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    -DWIN32  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS -DWIN32 CACHE STRING Flags for Windows Resource Compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -D_DEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG -D_DEBUG CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(45):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> /fo <OBJECT> <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(49):  set(CMAKE_RC_USE_LINKER_INFORMATION FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(52):  set(CMAKE_RC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestRCCompiler.cmake(13):  set(CMAKE_RC_COMPILER_WORKS 1 CACHE INTERNAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(534):  if(NOT DEFINED CMAKE_NINJA_CMCLDEPS_RC AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(535):  set(CMAKE_NINJA_CMCLDEPS_RC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(508):  if(MSVC_VERSION GREATER 1300 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(509):  set(CMAKE_DEPFILE_FLAGS_CXX /showIncludes )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(510):  set(CMAKE_CXX_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(514):  set(CMAKE_CXX_USING_LINKER_SYSTEM C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(515):  set(CMAKE_CXX_USING_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(516):  set(CMAKE_CXX_USING_LINKER_MSVC C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(517):  set(CMAKE_CXX_USING_LINKER_MODE TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(8):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_CXX_FLAGS_INIT   /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(100):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   /DWIN32 /D_WINDOWS /EHsc _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc CACHE STRING Flags used by the CXX compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /Ob0 /Od /RTC1 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O2 /Ob2 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE /O2 /Ob2 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O1 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL /O1 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /O2 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO /Zi /O2 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(102):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(103):  set(CMAKE_CXX_STANDARD_LIBRARIES kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib CACHE STRING Libraries linked by default with all C++ applications. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(105):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(113):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(118):  include(CMakeCommonLanguageInclude )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of modules during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(27):  macro(_cmake_common_language_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(119):  _cmake_common_language_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(28):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(29):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(32):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(36):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(39):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(40):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(42):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(43):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(46):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(47):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(50):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(51):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(54):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(58):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(62):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(63):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(66):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(67):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(70):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(71):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(74):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(75):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(78):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(79):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(82):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(86):  if(NOT DEFINED CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(87):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(90):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(91):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(94):  if(NOT DEFINED CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(95):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(101):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(102):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(103):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(106):  if(NOT DEFINED CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(109):  if(NOT DEFINED CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(110):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(113):  foreach(type IN ITEMS SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(148):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(154):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(161):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(162):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(164):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(165):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(167):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(172):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(177):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(182):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(186):  set(CMAKE_CXX_USE_LINKER_INFORMATION TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(188):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(5):  if(CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(12):  include(CMakeTestCompilerCommon )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(12):  function(PrintTestCompilerResult TYPE MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(17):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(29):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(15):  set(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(16):  if(_CMAKE_FEATURE_DETECTION_TARGET_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(22):  unset(CMAKE_CXX_COMPILER_WORKS CACHE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(25):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(9):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(9):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(10):  cmake_policy(SET CMP0053 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(11):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(13):  function(cmake_determine_linker_id lang linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(107):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(10):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitIncludeInfo.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitIncludeInfo.cmake(9):  function(cmake_parse_implicit_include_line line lang id_var log_var state_var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitIncludeInfo.cmake(177):  function(cmake_parse_implicit_include_info text lang dir_var log_var state_var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(11):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(4):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(5):  cmake_policy(SET CMP0053 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(6):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(17):  function(CMAKE_PARSE_IMPLICIT_LINK_INFO text lib_var dir_var fwk_var log_var obj_regex )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(38):  function(cmake_parse_implicit_link_info2 text log_var obj_regex )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(405):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(12):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(4):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(5):  cmake_policy(SET CMP0053 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(6):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(12):  function(cmake_parse_library_architecture lang implicit_dirs implicit_objs output_var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(54):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(13):  include(CMakeTestCompilerCommon )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(12):  function(PrintTestCompilerResult TYPE MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(17):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(29):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(15):  function(CMAKE_DETERMINE_COMPILER_ABI lang src )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(26):  CMAKE_DETERMINE_COMPILER_ABI(CXX C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompilerABI.cpp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(16):  if(NOT DEFINED CMAKE_CXX_ABI_COMPILED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(17):  message(CHECK_START Detecting CXX compiler ABI info )
-- Detecting CXX compiler ABI info
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(20):  set(BIN C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeDetermineCompilerABI_CXX.bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(21):  set(CMAKE_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(22):  set(COMPILE_DEFINITIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(23):  set(LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(24):  if(DEFINED CMAKE_CXX_VERBOSE_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(28):  if(DEFINED CMAKE_CXX_VERBOSE_COMPILE_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(31):  if(DEFINED CMAKE_CXX_VERBOSE_LINK_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(34):  if(lang MATCHES ^(CUDA|HIP)$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(42):  if(lang STREQUAL CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(43):  set(CMAKE_CXX_SCAN_FOR_MODULES OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(45):  if(NOT xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(50):  list(JOIN LINK_OPTIONS   LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(51):  list(APPEND CMAKE_FLAGS -DEXE_LINKER_FLAGS= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(53):  __TestCompiler_setTryCompileTargetType()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(18):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCompilerCommon.cmake(19):  if(Visual Studio 17 2022 MATCHES Green Hills MULTI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(56):  if(CMAKE_TRY_COMPILE_CONFIGURATION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(58):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(59):  set(_tc_config DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(61):  foreach(v CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(62):  string(REGEX REPLACE (^| )-Werror([= ][^-][^ ]*)?( |$)   CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(62):  string(REGEX REPLACE (^| )-Werror([= ][^-][^ ]*)?( |$)   CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(68):  set(_orig_lc_all  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(69):  set(_orig_lc_messages  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(70):  set(_orig_lang  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(71):  set(ENV{LC_ALL} C )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(72):  set(ENV{LC_MESSAGES} C )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(73):  set(ENV{LANG} C )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(74):  try_compile(CMAKE_CXX_ABI_COMPILED SOURCES C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompilerABI.cpp CMAKE_FLAGS -DEXE_LINKER_FLAGS= --no-warn-unused-cli COMPILE_DEFINITIONS  OUTPUT_VARIABLE OUTPUT COPY_FILE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeDetermineCompilerABI_CXX.bin COPY_FILE_ERROR _copy_error __CMAKE_INTERNAL ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.31.6.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(2):  cmake_policy(SET CMP0091 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(3):  cmake_policy(SET CMP0141 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(4):  cmake_policy(SET CMP0126 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(5):  cmake_policy(SET CMP0128 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(6):  project(CMAKE_TRY_COMPILE CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(6):  include(C:/vcpkg/scripts/buildsystems/vcpkg.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(61):  if(EXISTS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/vcpkg.json )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(85):  set(Z_VCPKG_CHECK_MANIFEST_MODE OFF CACHE INTERNAL Making sure VCPKG_MANIFEST_MODE doesn't change )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(220):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(221):  set(CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL MinSizeRel;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(222):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(226):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(227):  set(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO RelWithDebInfo;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(228):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(233):  if(VCPKG_TARGET_TRIPLET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(241):  set(VCPKG_TARGET_TRIPLET x64-windows CACHE STRING Vcpkg target triplet (ex. x86-windows) FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(347):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsStore OR CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(349):  elseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Linux ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(351):  elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(353):  elseif(CMAKE_SYSTEM_NAME STREQUAL iOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(355):  elseif(CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(357):  elseif(MINGW )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(359):  elseif(CMAKE_SYSTEM_NAME STREQUAL Windows OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(360):  if(XBOX_CONSOLE_TARGET STREQUAL scarlett )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(362):  elseif(XBOX_CONSOLE_TARGET STREQUAL xboxone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(364):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(365):  set(Z_VCPKG_TARGET_TRIPLET_PLAT windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(375):  if(EMSCRIPTEN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(380):  set(VCPKG_TARGET_TRIPLET -windows CACHE STRING Vcpkg target triplet (ex. x86-windows) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(381):  set(Z_VCPKG_TOOLCHAIN_DIR C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(384):  set(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(385):  while(NOT DEFINED Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(399):  unset(Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(401):  if(NOT Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(405):  if(DEFINED VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(406):  set(Z_VCPKG_INSTALLED_DIR_INITIAL_VALUE C:/vcpkg/installed )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(415):  set(VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(418):  set(_VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(422):  function(z_vcpkg_add_vcpkg_to_cmake_path list suffix )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(437):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_PREFIX_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_PREFIX_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_PREFIX_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(438):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_LIBRARY_PATH /lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows/lib/manual-link C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_LIBRARY_PATH 0 C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_LIBRARY_PATH C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(439):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_FIND_ROOT_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_FIND_ROOT_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(441):  if(NOT VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(442):  set(CMAKE_FIND_FRAMEWORK LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(443):  set(CMAKE_FIND_APPBUNDLE LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(450):  if(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_LIBRARY STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_PACKAGE STREQUAL ONLY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(456):  set(VCPKG_CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(459):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(460):  set(Z_VCPKG_EXECUTABLE C:/vcpkg/vcpkg.exe )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(461):  set(Z_VCPKG_BOOTSTRAP_SCRIPT C:/vcpkg/bootstrap-vcpkg.bat )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(467):  if(VCPKG_MANIFEST_MODE AND VCPKG_MANIFEST_INSTALL AND NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE AND NOT Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(561):  option(VCPKG_SETUP_CMAKE_PROGRAM_PATH Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(562):  set(VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(563):  if(DEFINED VCPKG_HOST_TRIPLET AND NOT VCPKG_HOST_TRIPLET STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(566):  cmake_dependent_option(VCPKG_USE_HOST_TOOLS Setup CMAKE_PROGRAM_PATH to use host tools ON VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_USE_HOST_TOOLS_ISSET MATCHES ^VCPKG_USE_HOST_TOOLS_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_USE_HOST_TOOLS_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_USE_HOST_TOOLS MATCHES ^VCPKG_USE_HOST_TOOLS$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_CAN_USE_HOST_TOOLSx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(567):  unset(VCPKG_CAN_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(569):  if(VCPKG_SETUP_CMAKE_PROGRAM_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(570):  set(tools_base_path C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(571):  if(VCPKG_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(574):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(575):  file(GLOB Z_VCPKG_TOOLS_DIRS LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(576):  file(GLOB Z_VCPKG_TOOLS_FILES LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(577):  file(GLOB Z_VCPKG_TOOLS_DIRS_BIN LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(578):  file(GLOB Z_VCPKG_TOOLS_FILES_BIN LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(579):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(580):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS_BIN   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(581):  string(REPLACE /bin  Z_VCPKG_TOOLS_DIRS_TO_REMOVE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(582):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(583):  list(APPEND Z_VCPKG_TOOLS_DIRS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(584):  foreach(Z_VCPKG_TOOLS_DIR IN LISTS Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/flatbuffers )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/pkgconf )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(587):  unset(Z_VCPKG_TOOLS_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(588):  unset(Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(589):  unset(Z_VCPKG_TOOLS_FILES )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(590):  unset(Z_VCPKG_TOOLS_DIRS_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(591):  unset(Z_VCPKG_TOOLS_FILES_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(592):  unset(Z_VCPKG_TOOLS_DIRS_TO_REMOVE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(593):  unset(tools_base_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(596):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(598):  function(add_executable )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(639):  function(add_library )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(671):  function(x_vcpkg_install_local_dependencies )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(720):  if(X_VCPKG_APPLOCAL_DEPS_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(768):  option(VCPKG_TRACE_FIND_PACKAGE Trace calls to find_package() OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(769):  if(NOT DEFINED VCPKG_OVERRIDE_FIND_PACKAGE_NAME )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(770):  set(VCPKG_OVERRIDE_FIND_PACKAGE_NAME find_package )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(775):  set(z_vcpkg_find_package_backup_id 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(776):  macro(find_package z_vcpkg_find_package_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(914):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(915):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(917):  set(VCPKG_TOOLCHAIN ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(918):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(919):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(920):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(921):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(922):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(925):  if(NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(936):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(937):  set(VCPKG_APPLOCAL_DEPS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(940):  if(Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(944):  cmake_policy(POP )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Windows-Initialize OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Initialize.cmake(1):  set(WIN32 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(81):  if(NOT DEFINED CMAKE_EXPORT_BUILD_DATABASE AND CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(95):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(187):  if(NOT DEFINED CMAKE_INSTALL_PREFIX AND NOT DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(189):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(192):  if(DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(195):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(198):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(201):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(202):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(102):  if(Visual Studio 17 2022 MATCHES (Win64|IA64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(104):  elseif(x64 MATCHES x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(105):  set(arch_hint x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(118):  if(NOT arch_hint )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(140):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(142):  if(C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(146):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(148):  if(C:\Program Files STREQUAL C:\Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(151):  if(NOT x64 STREQUAL x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(171):  if(NOT C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(172):  file(TO_CMAKE_PATH C:\Program Files _base )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(179):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(203):  set(CMAKE_INSTALL_PREFIX C:/Program Files/CMAKE_TRY_COMPILE CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(206):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(212):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(214):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(1):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(2):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(3):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(4):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(6):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(7):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(9):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(10):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(11):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(12):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(13):  set(CMAKE_DL_LIBS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(14):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(16):  set(CMAKE_FIND_LIBRARY_PREFIXES  lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(20):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.lib .lib .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(28):  if(CMAKE_GENERATOR MATCHES Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(35):  if(CMAKE_GENERATOR MATCHES NMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(40):  include(Platform/WindowsPaths )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31 PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/CMAKE_TRY_COMPILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files/CMAKE_TRY_COMPILE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/CMAKE_TRY_COMPILE/bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin /bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(59):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(60):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(4):  include(Compiler/MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(5):  if(__COMPILER_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(8):  set(__COMPILER_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(10):  macro(__compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(5):  __compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(11):  set(CMAKE_CXX_CLANG_TIDY_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(12):  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(13):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -WX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(16):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.05 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(17):  set(CMAKE_CXX_COMPILE_OPTIONS_JMC -JMC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(21):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30036.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(22):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -external:I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(23):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX_WARNING -external:W0  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(7):  include(Compiler/CMakeCommonCompilerMacros )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(146):  macro(cmake_record_cuda_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(186):  macro(cmake_record_hip_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(205):  function(cmake_create_cxx_import_std std variable )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(9):  if(( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0.24215.1 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 19.10 ) OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.10.25017 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(17):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(18):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(19):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(20):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(21):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(23):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.11.25505 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(24):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(25):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(26):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(27):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(33):  set(CMAKE_CXX_STANDARD_LATEST 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(35):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30129 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(36):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(37):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(38):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(39):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(40):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(47):  __compiler_check_default_language_standard(CXX 19.0 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 19.0 14  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(93):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(94):  string(CONCAT CMAKE_CXX_SCANDEP_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> <SOURCE> -nologo -TP  -showIncludes  -scanDependencies <DYNDEP_FILE>  -Fo<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(99):  set(CMAKE_CXX_SCANDEP_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(100):  set(CMAKE_CXX_MODULE_MAP_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(101):  set(CMAKE_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(102):  set(CMAKE_CXX_MODULE_BMI_ONLY_FLAG -ifcOnly;-ifcOutput;<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-cl-AMD64 OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(1):  include(Platform/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(6):  if(__WINDOWS_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(9):  set(__WINDOWS_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(11):  set(CMAKE_LIBRARY_PATH_FLAG -LIBPATH: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(12):  set(CMAKE_LINK_LIBRARY_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(13):  set(MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(19):  if(NOT DEFINED CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(23):  if(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(25):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(26):  set(CMAKE_CL_NOLOGO /nologo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(29):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(31):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(33):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(34):  set(_PLATFORM_LINK_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(37):  set(CMAKE_SUPPORT_WINDOWS_EXPORT_ALL_SYMBOLS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(38):  if(NOT CMAKE_NO_BUILD_TYPE AND CMAKE_GENERATOR MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(39):  set(CMAKE_NO_BUILD_TYPE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(42):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(43):  set(MSVC_IDE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(48):  if(NOT MSVC_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(49):  if(x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(51):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(52):  set(_compiler_version 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(66):  if(19.44.35215.0 MATCHES ^([0-9]+)\.([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(67):  math(EXPR MSVC_VERSION 19*100 + 44 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(72):  if(MSVC_VERSION GREATER_EQUAL 1930 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(74):  set(MSVC_TOOLSET_VERSION 143 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(103):  set(MSVC10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(104):  set(MSVC11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(105):  set(MSVC12 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(106):  set(MSVC14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(107):  set(MSVC60 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(108):  set(MSVC70 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(109):  set(MSVC71 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(110):  set(MSVC80 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(111):  set(MSVC90 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(112):  set(CMAKE_COMPILER_2005 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(113):  set(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(114):  if(NOT 19.44.35215.0 VERSION_LESS 20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(116):  elseif(NOT 19.44.35215.0 VERSION_LESS 19 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(117):  set(MSVC14 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(139):  if(MSVC_C_ARCHITECTURE_ID MATCHES 64 OR MSVC_CXX_ARCHITECTURE_ID MATCHES 64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(140):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(144):  if(CMAKE_FORCE_WIN64 OR CMAKE_FORCE_IA64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(145):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(148):  if(1944 GREATER 1599 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(149):  set(MSVC_INCREMENTAL_DEFAULT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(153):  set(CMAKE_BUILD_TYPE_INIT Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(156):  foreach(lang C CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_C_ARCHITECTURE_FAMILY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_CXX_ARCHITECTURE_FAMILY x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(169):  cmake_policy(GET CMP0117 __WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(170):  if(__WINDOWS_MSVC_CMP0117 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(171):  set(_GR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(175):  unset(__WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(177):  if(WINCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(215):  elseif(WINDOWS_PHONE OR WINDOWS_STORE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(228):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(240):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(241):  set(_PLATFORM_DEFINES /DWIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(242):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(245):  if(_MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM OR _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(247):  elseif(MSVC_VERSION GREATER 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(248):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(252):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(253):  set(_RTC1 /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(254):  set(_FLAGS_CXX  /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(256):  set(CMAKE_C_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(263):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(267):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(271):  if(MSVC_VERSION LESS 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(277):  unset(_GR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(279):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(282):  set(CMAKE_LINK_DEF_FILE_FLAG /DEF: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(284):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(296):  elseif(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(297):  if(MSVC_CXX_ARCHITECTURE_ID MATCHES ^ARMV.I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(299):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(301):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(303):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(305):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(306):  set(_MACHINE_ARCH_FLAG /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(314):  set(MSVC_INCREMENTAL_YES_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(315):  if(NOT WINDOWS_PHONE AND NOT WINDOWS_STORE AND NOT CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(316):  if(NOT MSVC_INCREMENTAL_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(318):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(319):  set(MSVC_INCREMENTAL_YES_FLAG /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(323):  foreach(t EXE SHARED MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(337):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(339):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(340):  string(APPEND CMAKE_STATIC_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(342):  unset(_MACHINE_ARCH_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(344):  cmake_policy(GET CMP0091 __WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(345):  if(__WINDOWS_MSVC_CMP0091 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(346):  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT MultiThreaded$<$<CONFIG:Debug>:Debug>DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(350):  unset(__WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(352):  cmake_policy(GET CMP0141 __WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(353):  if(__WINDOWS_MSVC_CMP0141 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(356):  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(358):  unset(__WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(361):  macro(__windows_compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(520):  macro(__windows_compiler_msvc_enable_rc flags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(2):  set(_COMPILE_CXX  /TP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(3):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(4):  set(_FS_CXX  /FS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(6):  __windows_compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(362):  if(NOT MSVC_VERSION LESS 1400 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(364):  set(_CMAKE_VS_LINK_DLL <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(365):  set(_CMAKE_VS_LINK_EXE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(367):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(369):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(370):  set(_DLL_DRIVER /dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(372):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(374):  unset(_DLL_DRIVER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(376):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(377):  set(CMAKE_CXX_CREATE_STATIC_LIBRARY <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(379):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /Fo<OBJECT> /Fd<TARGET_COMPILE_PDB> /FS -c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(381):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> > <PREPROCESSED_SOURCE>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(383):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /FoNUL /FAs /Fa<ASSEMBLY_SOURCE> /c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(386):  set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(387):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(390):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(393):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(394):  set(CMAKE_CXX_CREATE_WIN32_EXE /subsystem:windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(395):  set(CMAKE_CXX_CREATE_CONSOLE_EXE /subsystem:console )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(398):  set(CMAKE_PCH_EXTENSION .pch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(399):  set(CMAKE_LINK_PCH ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(400):  if(CMAKE_CXX_COMPILER_ID STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(410):  elseif(MSVC_VERSION GREATER_EQUAL 1913 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(412):  set(CMAKE_PCH_PROLOGUE #pragma system_header )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(414):  if(NOT MSVC STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(415):  set(CMAKE_PCH_COPY_COMPILE_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(417):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH /Yu<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(418):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH /Yc<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(420):  if(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(421):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(422):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(424):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO /GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(425):  set(CMAKE_CXX_LINK_OPTIONS_IPO /INCREMENTAL:NO /LTCG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(426):  string(REPLACE <LINK_FLAGS>  /LTCG <LINK_FLAGS>  CMAKE_CXX_CREATE_STATIC_LIBRARY_IPO <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(448):  if(xCXX STREQUAL xC OR xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(450):  if(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(451):  set(_MDd  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(452):  set(_MD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(458):  cmake_policy(GET CMP0092 _cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(459):  if(_cmp0092 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(460):  set(_W3  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(461):  set(_Wall  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(466):  unset(_cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(468):  if(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(470):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(471):  set(_Zi  /Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(474):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(482):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(483):  string(APPEND CMAKE_CXX_FLAGS_INIT  /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(484):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(485):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  /O2 /Ob2 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(486):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  /Zi /O2 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(487):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  /O1 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(489):  unset(_Wall )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(490):  unset(_W3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(491):  unset(_MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(492):  unset(_MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(493):  unset(_Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(495):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreaded -MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(496):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDLL -MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(497):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebug -MTd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(498):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebugDLL -MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(499):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded -Z7 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(500):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_ProgramDatabase -Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(501):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_EditAndContinue -ZI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(503):  set(CMAKE_CXX_LINKER_SUPPORTS_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(505):  __windows_compiler_msvc_enable_rc(/DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(521):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(522):  set(CMAKE_RC_COMPILER_INIT rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(524):  if(NOT CMAKE_RC_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(526):  string(REPLACE  /D  -D fixed_flags  /DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(527):  string(APPEND CMAKE_RC_FLAGS_INIT   -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(529):  if(NOT CMAKE_RC_FLAGS_DEBUG_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(530):  string(APPEND CMAKE_RC_FLAGS_DEBUG_INIT  -D_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(533):  enable_language(RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(13):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(14):  get_filename_component(CMAKE_BASE_NAME C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-rc.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-rc OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT    -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    -DWIN32  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS -DWIN32 CACHE STRING Flags for Windows Resource Compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -D_DEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG -D_DEBUG CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(45):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> /fo <OBJECT> <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(49):  set(CMAKE_RC_USE_LINKER_INFORMATION FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(52):  set(CMAKE_RC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(534):  if(NOT DEFINED CMAKE_NINJA_CMCLDEPS_RC AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(535):  set(CMAKE_NINJA_CMCLDEPS_RC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(508):  if(MSVC_VERSION GREATER 1300 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(509):  set(CMAKE_DEPFILE_FLAGS_CXX /showIncludes )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(510):  set(CMAKE_CXX_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(514):  set(CMAKE_CXX_USING_LINKER_SYSTEM C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(515):  set(CMAKE_CXX_USING_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(516):  set(CMAKE_CXX_USING_LINKER_MSVC C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(517):  set(CMAKE_CXX_USING_LINKER_MODE TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(8):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_CXX_FLAGS_INIT   /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(100):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   /DWIN32 /D_WINDOWS /EHsc _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc CACHE STRING Flags used by the CXX compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /Ob0 /Od /RTC1 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O2 /Ob2 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE /O2 /Ob2 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O1 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL /O1 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /O2 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO /Zi /O2 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(102):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(103):  set(CMAKE_CXX_STANDARD_LIBRARIES kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib CACHE STRING Libraries linked by default with all C++ applications. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(105):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(113):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(118):  include(CMakeCommonLanguageInclude )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of modules during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(27):  macro(_cmake_common_language_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(119):  _cmake_common_language_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(28):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(29):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(32):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(36):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(39):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(40):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(42):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(43):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(46):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(47):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(50):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(51):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(54):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(58):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(62):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(63):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(66):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(67):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(70):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(71):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(74):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(75):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(78):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(79):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(82):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(86):  if(NOT DEFINED CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(87):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(90):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(91):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(94):  if(NOT DEFINED CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(95):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(101):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(102):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(103):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(106):  if(NOT DEFINED CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(109):  if(NOT DEFINED CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(110):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(113):  foreach(type IN ITEMS SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(148):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(154):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(161):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(162):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(164):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(165):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(167):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(172):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(177):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(182):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(186):  set(CMAKE_CXX_USE_LINKER_INFORMATION TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(188):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(11):  include(Internal/CMakeCommonLinkerInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(8):  macro(_cmake_common_linker_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(13):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(16):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(21):  if(CMAKE_SYSTEM_PROCESSOR AND CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(27):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(34):  include(Platform/Linker/Windows-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-CXX.cmake(4):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-CXX.cmake(5):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-CXX.cmake(7):  if(CMAKE_CXX_SIMULATE_ID STREQUAL MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-CXX.cmake(10):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-CXX.cmake(12):  include(Platform/Linker/Windows-GNU-CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU-CXX.cmake(4):  include(Platform/Linker/Windows-GNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU.cmake(8):  include(Platform/Linker/GNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(8):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(9):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(13):  function(__cmake_set_whole_archive_feature __linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(49):  __cmake_set_whole_archive_feature(C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(14):  unset(__lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(15):  if(ARGC EQUAL 2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(19):  if(NOT __linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(23):  if(NOT DEFINED _CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(24):  execute_process(COMMAND C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe --help OUTPUT_VARIABLE __linker_help ERROR_VARIABLE __linker_help )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(27):  if(__linker_help MATCHES --push-state AND __linker_help MATCHES --pop-state )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(29):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(30):  set(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED FALSE CACHE INTERNAL linker supports push/pop state )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(34):  if(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(38):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(39):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:--whole-archive <LINK_ITEM> LINKER:--no-whole-archive PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(43):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/GNU.cmake(44):  set(CMAKE_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU.cmake(10):  macro(__windows_linker_gnu lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU-CXX.cmake(6):  __windows_linker_gnu(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU.cmake(11):  set(CMAKE_CXX_PLATFORM_LINKER_ID GNU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-GNU.cmake(12):  if(CMAKE_CXX_COMPILER_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(37):  _cmake_common_linker_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(10):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(39):  set(CMAKE_CXX_LINKER_INFORMATION_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(7):  set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(8):  set(CMAKE_VERBOSE_MAKEFILE 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(9):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(11):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(12):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(13):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(14):  include_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(15):  set(CMAKE_SUPPRESS_REGENERATION 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(16):  link_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(17):  cmake_policy(SET CMP0065 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(18):  cmake_policy(SET CMP0083 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(19):  cmake_policy(SET CMP0155 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(20):  cmake_policy(SET CMP0157 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(21):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(8):  if(NOT APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(9):  return()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(22):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(23):  add_executable(cmTC_1349e )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(599):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG cmTC_1349e )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;cmTC_1349e )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;cmTC_1349e 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(600):  _add_executable(cmTC_1349e )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(601):  set(target_name cmTC_1349e )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(603):  list(FIND ARGV IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(604):  list(FIND ARGV ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(605):  list(FIND ARGV MACOSX_BUNDLE MACOSX_BUNDLE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(606):  if(IMPORTED_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(607):  if(VCPKG_APPLOCAL_DEPS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(634):  set_target_properties(cmTC_1349e PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(635):  set_target_properties(cmTC_1349e PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(24):  target_sources(cmTC_1349e PRIVATE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompilerABI.cpp )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(27):  file(GENERATE OUTPUT C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/cmTC_1349e_$<UPPER_CASE:$<CONFIG>>_loc CONTENT $<TARGET_FILE:cmTC_1349e> )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/CMakeLists.txt(29):  target_link_libraries(cmTC_1349e  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(87):  set(ENV{LC_ALL}  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(88):  set(ENV{LC_MESSAGES}  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(89):  set(ENV{LANG}  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(92):  set(CMAKE_CXX_ABI_COMPILED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(93):  unset(CMAKE_CXX_ABI_COMPILED CACHE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(94):  if(CMAKE_CXX_ABI_COMPILED AND _copy_error )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(97):  set(CMAKE_CXX_ABI_COMPILED TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(100):  if(CMAKE_CXX_ABI_COMPILED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(101):  message(CHECK_PASS done )
-- Detecting CXX compiler ABI info - done
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(102):  if(CMAKE_HOST_APPLE AND CMAKE_SYSTEM_NAME STREQUAL Darwin AND NOT CMAKE_OSX_ARCHITECTURES MATCHES \$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(137):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(138):  cmake_policy(SET CMP0159 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(139):  file(STRINGS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeDetermineCompilerABI_CXX.bin ABI_STRINGS LIMIT_COUNT 32 REGEX INFO:[A-Za-z0-9_]+\[[^]]*\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(140):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(141):  set(ABI_SIZEOF_DPTR NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(142):  set(ABI_BYTE_ORDER NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(143):  set(ABI_NAME NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(144):  foreach(info INFO:sizeof_dptr[08];INFO:byte_order[LITTLE_ENDIAN] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(145):  if(INFO:sizeof_dptr[08] MATCHES INFO:sizeof_dptr\[0*([^]]*)\] AND NOT ABI_SIZEOF_DPTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(146):  set(ABI_SIZEOF_DPTR 8 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(148):  if(INFO:sizeof_dptr[08] MATCHES INFO:byte_order\[(BIG_ENDIAN|LITTLE_ENDIAN)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(158):  if(INFO:sizeof_dptr[08] MATCHES INFO:abi\[([^]]*)\] AND NOT ABI_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(145):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:sizeof_dptr\[0*([^]]*)\] AND NOT ABI_SIZEOF_DPTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(148):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:byte_order\[(BIG_ENDIAN|LITTLE_ENDIAN)\] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(149):  set(byte_order LITTLE_ENDIAN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(150):  if(ABI_BYTE_ORDER STREQUAL NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(152):  set(ABI_BYTE_ORDER LITTLE_ENDIAN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(158):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:abi\[([^]]*)\] AND NOT ABI_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(163):  if(ABI_SIZEOF_DPTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(164):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(169):  if(ABI_BYTE_ORDER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(170):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(173):  if(ABI_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(178):  if(CMAKE_CXX_VERBOSE_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(195):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(197):  if(_CMAKE_CXX_IMPLICIT_LINK_INFORMATION_DETERMINED_EARLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(203):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(205):  set(implicit_dirs  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(206):  set(implicit_objs  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(207):  set(implicit_libs  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(208):  set(implicit_fwks  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(209):  set(compute_artifacts COMPUTE_LINKER linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(210):  if(CMAKE_CXX_VERBOSE_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(216):  cmake_parse_implicit_link_info2(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi'

Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€?
  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp"
  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp"
  CMakeCXXCompilerABI.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj
  cmTC_1349e.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\cmTC_1349e.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.41

 log  COMPUTE_LINKER;linker_tool LANGUAGE CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(39):  set(implicit_libs_tmp  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(40):  set(implicit_objs_tmp  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(41):  set(implicit_dirs_tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(42):  set(implicit_fwks_tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(43):  set(log  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(45):  set(keywordArgs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(oneValueArgs LANGUAGE COMPUTE_IMPLICIT_LIBS COMPUTE_IMPLICIT_DIRS COMPUTE_IMPLICIT_FWKS COMPUTE_IMPLICIT_OBJECTS COMPUTE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(49):  set(multiValueArgs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(50):  cmake_parse_arguments(EXTRA_PARSE  LANGUAGE;COMPUTE_IMPLICIT_LIBS;COMPUTE_IMPLICIT_DIRS;COMPUTE_IMPLICIT_FWKS;COMPUTE_IMPLICIT_OBJECTS;COMPUTE_LINKER  COMPUTE_LINKER;linker_tool;LANGUAGE;CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(52):  set(is_lfortran_less_0_40 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(53):  set(is_msvc 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(54):  if(EXTRA_PARSE_LANGUAGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(55):  if(xMSVC STREQUAL xMSVC OR x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(57):  set(is_msvc 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(64):  set(linker ld[0-9]*(\.[a-z]+)? )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(65):  if(is_lfortran_less_0_40 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(69):  if(is_msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(70):  string(APPEND linker |link\.exe|lld-link(\.exe)? )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(72):  if(CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(73):  get_filename_component(default_linker C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(74):  if(NOT default_linker MATCHES (ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(79):  set(startfile CMAKE_LINK_STARTFILE-NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(80):  if(CMAKE_LINK_STARTFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(85):  set(linker_regex ^( *|.*[/\])(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(86):  set(linker_exclude_regex collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(87):  set(linker_tool_regex ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(88):  set(linker_tool_exclude_regex cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(89):  if(is_lfortran_less_0_40 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(93):  set(linker_tool NOTFOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(94):  set(linker_tool_fallback  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(95):  set(link_line_parsed 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(96):  string(APPEND log   link line regex: [^( *|.*[/\])(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(97):  if(EXTRA_PARSE_COMPUTE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(98):  string(APPEND log   linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$)]
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(100):  string(REGEX REPLACE ?
 ; output_lines Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi'

Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434
鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆?

鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆?
PrepareForBuild:
  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€?
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€?
  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€?
InitializeBuildStatus:
  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp"
  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp"
  CMakeCXXCompilerABI.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj
  cmTC_1349e.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe
FinalizeBuildStatus:
  姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濄€?
  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\cmTC_1349e.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?

宸叉垚鍔熺敓鎴愩€?
    0 涓鍛?
    0 涓敊璇?

宸茬敤鏃堕棿 00:00:00.41

 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(101):  foreach(line IN LISTS output_lines )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi' MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT  MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if( MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif( MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif( MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif( MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif( MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT 閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434 MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT 鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT  MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if( MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif( MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif( MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif( MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif( MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT 鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT PrepareForBuild: MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(PrepareForBuild: MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(PrepareForBuild: MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(PrepareForBuild: MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(PrepareForBuild: MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(PrepareForBuild: MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details. MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT InitializeBuildStatus: MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(InitializeBuildStatus: MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(InitializeBuildStatus: MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(InitializeBuildStatus: MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(InitializeBuildStatus: MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(InitializeBuildStatus: MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆? MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT ClCompile: MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(ClCompile: MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(ClCompile: MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(ClCompile: MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(ClCompile: MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(ClCompile: MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64 MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  Copyright (C) Microsoft Corporation.  All rights reserved. MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp" MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   CMakeCXXCompilerABI.cpp MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  CMakeCXXCompilerABI.cpp MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  CMakeCXXCompilerABI.cpp MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  CMakeCXXCompilerABI.cpp MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  CMakeCXXCompilerABI.cpp MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  CMakeCXXCompilerABI.cpp MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT Link: MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(Link: MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(Link: MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(Link: MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(Link: MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(Link: MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(124):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(125):  continue()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(102):  if(EXTRA_PARSE_COMPUTE_LINKER AND NOT linker_tool AND NOT   C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES cuda-fake-ld|-fuse-ld=|^ExecuteExternalTool  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(104):  if(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES exec: ([^()]*/(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(106):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES ^export XL_LINKER=(.*/ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?)[ 	]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(108):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES --with-ld= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(114):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES vs_link.*-- +([^"]*[/\](ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(116):  elseif(  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj MATCHES ^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(117):  set(linker_tool C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(120):  if(NOT ( EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS OR EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS OR EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS OR EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(122):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(123):  break()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(284):  if(NOT linker_tool AND linker_tool_fallback )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(287):  if(linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(288):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(289):  cmake_path(NORMAL_PATH linker_tool )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(291):  string(APPEND log   linker tool for 'CXX': C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(295):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS AND Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi';;Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n;閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434;鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆?;;鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆?;PrepareForBuild:;  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€?;  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.;  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€?;  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€?;InitializeBuildStatus:;  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?;  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?;ClCompile:;  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp";  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64;  Copyright (C) Microsoft Corporation.  All rights reserved.;  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp";  CMakeCXXCompilerABI.cpp;Link:;  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj;  cmTC_1349e.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe;FinalizeBuildStatus:;  姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濄€?;  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\cmTC_1349e.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?;宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?;;宸叉垚鍔熺敓鎴愩€?;    0 涓鍛?;    0 涓敊璇?;;宸茬敤鏃堕棿 00:00:00.41;; MATCHES ;Library search paths:((;	[^;]+)+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(300):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS AND Change Dir: 'C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi';;Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_1349e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n;閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.14.19+164abd434;鐢熸垚鍚姩鏃堕棿涓?2025/8/28 19:29:53銆?;;鑺傜偣 1 涓婄殑椤圭洰鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)銆?;PrepareForBuild:;  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\鈥濄€?;  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.;  姝ｅ湪鍒涘缓鐩綍鈥淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\鈥濄€?;  姝ｅ湪鍒涘缓鐩綍鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\鈥濄€?;InitializeBuildStatus:;  姝ｅ湪鍒涘缓鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?;  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?;ClCompile:;  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp";  Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64;  Copyright (C) Microsoft Corporation.  All rights reserved.;  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_1349e.dir\Debug\\" /Fd"cmTC_1349e.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.31\Modules\CMakeCXXCompilerABI.cpp";  CMakeCXXCompilerABI.cpp;Link:;  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:"C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe" /INCREMENTAL /ILK:"cmTC_1349e.dir\Debug\cmTC_1349e.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-wkyhqi/Debug/cmTC_1349e.lib" /MACHINE:X64  /machine:x64 cmTC_1349e.dir\Debug\CMakeCXXCompilerABI.obj;  cmTC_1349e.vcxproj -> C:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\Debug\cmTC_1349e.exe;FinalizeBuildStatus:;  姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\unsuccessfulbuild鈥濄€?;  姝ｅ湪瀵光€渃mTC_1349e.dir\Debug\cmTC_1349e.tlog\cmTC_1349e.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?;宸插畬鎴愮敓鎴愰」鐩€淐:\Users\William He\PycharmProjects\HellBots\third_party\ORB_SLAM3\build-trace\CMakeFiles\CMakeScratch\TryCompile-wkyhqi\cmTC_1349e.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?;;宸叉垚鍔熺敓鎴愩€?;    0 涓鍛?;    0 涓敊璇?;;宸茬敤鏃堕棿 00:00:00.41;; MATCHES ;Framework search paths:((;	[^;]+)+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(308):  set(implicit_libs  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(309):  foreach(lib IN LISTS implicit_libs_tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(344):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(360):  set(desc_dirs library )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(361):  set(desc_fwks framework )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(362):  foreach(t dirs fwks )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(363):  set(implicit_dirs  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(364):  foreach(d IN LISTS implicit_dirs_tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(375):  list(REMOVE_DUPLICATES implicit_dirs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(363):  set(implicit_fwks  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(364):  foreach(d IN LISTS implicit_fwks_tmp )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(375):  list(REMOVE_DUPLICATES implicit_fwks )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(379):  string(APPEND log   implicit libs: []
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(380):  string(APPEND log   implicit objs: []
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(381):  string(APPEND log   implicit dirs: []
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(382):  string(APPEND log   implicit fwks: []
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(385):  if(EXTRA_PARSE_COMPUTE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(386):  set(linker_tool C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(389):  set(log   link line regex: [^( *|.*[/\])(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$)]
  linker tool for 'CXX': C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe
  implicit libs: []
  implicit objs: []
  implicit dirs: []
  implicit fwks: []
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(391):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_LIBS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(394):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_DIRS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(397):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_FWKS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseImplicitLinkInfo.cmake(400):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(218):  message(CONFIGURE_LOG Parsed CXX implicit link information:
  link line regex: [^( *|.*[/\])(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\])?(ld[0-9]*(\.[a-z]+)?|link\.exe|lld-link(\.exe)?))("|,| |$)]
  linker tool for 'CXX': C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe
  implicit libs: []
  implicit objs: []
  implicit dirs: []
  implicit fwks: []


 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(223):  if(CXX MATCHES Fortran AND Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(244):  if(DEFINED CMAKE_OSX_ARCHITECTURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(250):  if(DEFINED ENV{CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES_EXCLUDE} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(254):  set(CMAKE_CXX_COMPILER_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(255):  cmake_determine_linker_id(CXX C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(14):  if(NOT linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(22):  set(linker_id )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(23):  set(linker_frontend )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(24):  set(linker_version )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(27):  foreach(flags IN ITEMS -v -V --version )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(32):  execute_process(COMMAND C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe -v OUTPUT_VARIABLE linker_desc ERROR_VARIABLE linker_desc OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_STRIP_TRAILING_WHITESPACE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(38):  string(JOIN " " flags_string -v )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(39):  string(REGEX REPLACE 

.*  linker_desc_head Microsoft (R) Incremental Linker Version 14.44.35215.0
Copyright (C) Microsoft Corporation.  All rights reserved.

LINK : warning LNK4044: unrecognized option '/v'; ignored
LINK : warning LNK4001: no object files specified; libraries used
LINK : warning LNK4068: /MACHINE not specified; defaulting to X64
LINK : fatal error LNK1561: entry point must be defined )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(40):  message(CONFIGURE_LOG Running the CXX compiler's linker: "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe" "-v"
 Microsoft (R) Incremental Linker Version 14.44.35215.0
Copyright (C) Microsoft Corporation.  All rights reserved.
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(45):  if(CMAKE_EFFECTIVE_SYSTEM_NAME STREQUAL Apple AND linker_desc MATCHES @\(#\)PROGRAM:ld.+PROJECT:[a-z0-9]+-([0-9.]+).+ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(50):  elseif(linker_desc MATCHES mold \(sold\) ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(55):  elseif(linker_desc MATCHES mold ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(60):  elseif(linker_desc MATCHES LLD ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(68):  elseif(linker_desc MATCHES GNU ld (\([^)]+\)|version) ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(73):  elseif(linker_desc MATCHES GNU gold \([^)]+\) ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(78):  elseif(linker_desc MATCHES Microsoft \(R\) Incremental Linker Version ([0-9.]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(79):  set(linker_id MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(80):  set(linker_frontend MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(81):  set(linker_version 14.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(82):  break()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(94):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(95):  if(linker_frontend )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(96):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(100):  if(linker_version )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake(101):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(256):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(257):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(258):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(260):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(261):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(262):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(264):  cmake_parse_library_architecture(CXX   architecture_flag )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(13):  unset(library_arch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(15):  if(CMAKE_LIBRARY_ARCHITECTURE_REGEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(34):  if(CMAKE_CXX_COMPILER_ID STREQUAL QCC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeParseLibraryArchitecture.cmake(49):  if(library_arch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake(265):  if(architecture_flag )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(27):  if(CMAKE_CXX_ABI_COMPILED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(29):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(30):  message(STATUS Check for working CXX compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe - skipped )
-- Check for working CXX compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe - skipped
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(38):  if(NOT CMAKE_CXX_COMPILER_WORKS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(82):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(5):  function(cmake_determine_compiler_support lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(83):  CMAKE_DETERMINE_COMPILER_SUPPORT(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(7):  if(xCXX STREQUAL xC AND COMMAND cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(57):  elseif(xCXX STREQUAL xCXX AND COMMAND cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(58):  message(CHECK_START Detecting CXX compile features )
-- Detecting CXX compile features
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(60):  set(CMAKE_CXX98_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(61):  set(CMAKE_CXX11_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(62):  set(CMAKE_CXX14_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(63):  set(CMAKE_CXX17_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(64):  set(CMAKE_CXX20_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(65):  set(CMAKE_CXX23_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(66):  set(CMAKE_CXX26_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(68):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(2):  macro(_record_compiler_features lang compile_flags feature_list )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(72):  macro(_record_compiler_features_c std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(82):  macro(_record_compiler_features_cxx std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(92):  macro(_record_compiler_features_cuda std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(102):  macro(_record_compiler_features_hip std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(112):  macro(_has_compiler_features lang level compile_flags feature_list )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(118):  macro(_has_compiler_features_c std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(122):  macro(_has_compiler_features_cxx std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(126):  macro(_has_compiler_features_cuda std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(130):  macro(_has_compiler_features_hip std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(70):  cmake_record_cxx_compile_features()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(107):  set(_result 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(108):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX26_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(111):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX23_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(112):  _has_compiler_features_cxx(23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 23 -std:c++latest CMAKE_CXX23_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX23_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX23_COMPILE_FEATURES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(114):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX20_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(115):  _has_compiler_features_cxx(20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 20 -std:c++20 CMAKE_CXX20_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX20_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX20_COMPILE_FEATURES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(117):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX17_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(118):  _has_compiler_features_cxx(17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 17 -std:c++17 CMAKE_CXX17_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX17_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX17_COMPILE_FEATURES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(120):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX14_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(121):  if(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(122):  _has_compiler_features_cxx(14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX14_COMPILE_FEATURES cxx_std_14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 14 -std:c++14 CMAKE_CXX14_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX14_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX14_COMPILE_FEATURES cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(126):  unset(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(128):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX11_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(129):  if(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(130):  _has_compiler_features_cxx(11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX11_COMPILE_FEATURES cxx_std_11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 11  CMAKE_CXX11_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX11_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX11_COMPILE_FEATURES cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(134):  unset(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(136):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX98_STANDARD_COMPILE_OPTION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(137):  if(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(138):  _has_compiler_features_cxx(98 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(123):  list(APPEND CMAKE_CXX98_COMPILE_FEATURES cxx_std_98 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(124):  _has_compiler_features(CXX 98  CMAKE_CXX98_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(114):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX98_KNOWN_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/FeatureTesting.cmake(115):  list(APPEND CMAKE_CXX98_COMPILE_FEATURES cxx_template_template_parameters )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(142):  unset(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(72):  if(NOT _result EQUAL 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(77):  if(CMAKE_CXX23_COMPILE_FEATURES AND CMAKE_CXX26_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(80):  if(CMAKE_CXX20_COMPILE_FEATURES AND CMAKE_CXX23_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(81):  list(REMOVE_ITEM CMAKE_CXX23_COMPILE_FEATURES cxx_std_20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(83):  if(CMAKE_CXX17_COMPILE_FEATURES AND CMAKE_CXX20_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(84):  list(REMOVE_ITEM CMAKE_CXX20_COMPILE_FEATURES cxx_std_17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(86):  if(CMAKE_CXX14_COMPILE_FEATURES AND CMAKE_CXX17_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(87):  list(REMOVE_ITEM CMAKE_CXX17_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(89):  if(CMAKE_CXX11_COMPILE_FEATURES AND CMAKE_CXX14_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(90):  list(REMOVE_ITEM CMAKE_CXX14_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(92):  if(CMAKE_CXX98_COMPILE_FEATURES AND CMAKE_CXX11_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(93):  list(REMOVE_ITEM CMAKE_CXX11_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(96):  if(NOT CMAKE_CXX_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(97):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates cxx_std_17 cxx_std_20 cxx_std_23  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(109):  set(CMAKE_CXX_IMPORT_STD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(110):  foreach(_cmake_import_std_version IN ITEMS 23 26 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(111):  if(CMAKE_CXX23_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(112):  set(_cmake_cxx_import_std  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(113):  cmake_create_cxx_import_std(23 _cmake_cxx_import_std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(206):  set(_cmake_supported_import_std_features 23 26 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(212):  list(FIND _cmake_supported_import_std_features 23 _cmake_supported_import_std_idx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(213):  if(_cmake_supported_import_std_idx EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(220):  if(TARGET __CMAKE::CXX23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(224):  if(NOT CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(225):  set(_cmake_cxx_import_std set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE "Unsupported generator: Visual Studio 17 2022")
 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(228):  return()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(114):  if(_cmake_cxx_import_std )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(115):  string(APPEND CMAKE_CXX_IMPORT_STD ### Imported target for C++23 standard library
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(116):  string(APPEND CMAKE_CXX_IMPORT_STD set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE "Unsupported generator: Visual Studio 17 2022")


 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(111):  if(CMAKE_CXX26_COMPILE_FEATURES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(121):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(122):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(123):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(124):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(125):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(126):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(127):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(128):  set(CMAKE_CXX26_COMPILE_FEATURES  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(129):  set(CMAKE_CXX_IMPORT_STD ### Imported target for C++23 standard library
set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE "Unsupported generator: Visual Studio 17 2022")


 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerSupport.cmake(131):  message(CHECK_PASS done )
-- Detecting CXX compile features - done
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(86):  configure_file(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXCompiler.cmake.in C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake @ONLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(91):  include(C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(70):  set(CMAKE_SIZEOF_VOID_P 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(98):  set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE Unsupported generator: Visual Studio 17 2022 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(93):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(94):  foreach(f  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(97):  unset(CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(100):  set(CMAKE_TRY_COMPILE_TARGET_TYPE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(101):  unset(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake(102):  unset(__CMAKE_CXX_COMPILER_OUTPUT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(11):  include(Internal/CMakeCommonLinkerInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(8):  macro(_cmake_common_linker_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(13):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(16):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(17):  include(Linker/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(21):  if(CMAKE_SYSTEM_PROCESSOR AND CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(22):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(27):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(28):  include(Platform/Linker/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(4):  include(Platform/Linker/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(8):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(9):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(12):  if(MSVC_VERSION GREATER 1900 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(14):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(15):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(16):  set(CMAKE_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(19):  macro(__windows_linker_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(6):  __windows_linker_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(20):  set(CMAKE_CXX_PLATFORM_LINKER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(21):  set(CMAKE_CXX_LINK_LIBRARIES_PROCESSING ORDER=FORWARD DEDUPLICATION=ALL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(24):  if(DEFINED CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(25):  if(CMAKE_CXX_COMPILER_LINKER_VERSION GREATER_EQUAL 14.10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(27):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(28):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(29):  set(CMAKE_CXX_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(37):  _cmake_common_linker_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(10):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(39):  set(CMAKE_CXX_LINKER_INFORMATION_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(5):  if(NOT CMAKE_BUILD_TYPE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(8):  message(STATUS Build type: Release )
-- Build type: Release
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(11):  set(CMAKE_CXX_STANDARD 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(12):  set(CMAKE_CXX_STANDARD_REQUIRED ON )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(13):  set(CMAKE_CXX_EXTENSIONS OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(14):  add_definitions(-DCOMPILEDWITHC11 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(16):  if(MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(17):  add_compile_options(/permissive- /bigobj )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(25):  find_package(OpenCV CONFIG REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name OpenCV )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN CONFIG;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_OpenCV )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER OpenCV z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_OpenCV )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(840):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(845):  list(APPEND z_vcpkg_find_package_1_backup_vars ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(846):  if(DEFINED ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(849):  set(ARGS OpenCV;CONFIG;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(850):  include(C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake(1):  set(OpenCV_DIR C:/vcpkg/installed/x64-windows/share/opencv/../opencv4/ CACHE PATH Path to OpenCVConfig.cmake FORCE )
C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake(2):  set(OpenCV_ROOT C:/vcpkg/installed/x64-windows/share/opencv/../opencv4/ )
C:/vcpkg/installed/x64-windows/share/opencv/vcpkg-cmake-wrapper.cmake(3):  _find_package(OpenCV;CONFIG;REQUIRED )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(1):  set(OpenCV_VERSION 4.11.0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(2):  set(PACKAGE_VERSION 4.11.0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(4):  set(PACKAGE_VERSION_EXACT False )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(5):  set(PACKAGE_VERSION_COMPATIBLE False )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(7):  if(PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig-version.cmake(12):  if(PACKAGE_FIND_VERSION_MAJOR EQUAL 4 AND PACKAGE_FIND_VERSION VERSION_LESS PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(48):  SET(OpenCV_VERSION 4.11.0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(49):  SET(OpenCV_VERSION_MAJOR 4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(50):  SET(OpenCV_VERSION_MINOR 11 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(51):  SET(OpenCV_VERSION_PATCH 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(52):  SET(OpenCV_VERSION_TWEAK 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(53):  SET(OpenCV_VERSION_STATUS  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(55):  include(FindPackageHandleStandardArgs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(213):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(33):  function(find_package_message pkg msg details )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(216):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(218):  cmake_policy(SET CMP0012 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(220):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(224):  macro(_FPHSA_FAILURE_MESSAGE _msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(243):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(278):  function(FIND_PACKAGE_CHECK_VERSION version result )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(378):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(614):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(57):  if(NOT CMAKE_VERSION VERSION_LESS 2.8.8 AND OpenCV_FIND_COMPONENTS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(65):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(67):  set(_OpenCV_HANDLE_COMPONENTS_MANUALLY TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(73):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(79):  get_filename_component(OpenCV_CONFIG_PATH C:/vcpkg/installed/x64-windows/share/opencv4 REALPATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(80):  get_filename_component(OpenCV_INSTALL_PATH C:/vcpkg/installed/x64-windows/share/opencv4/../../ REALPATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(84):  if(NOT COMMAND find_host_package )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(85):  macro(find_host_package )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(89):  if(NOT COMMAND find_host_program )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(90):  macro(find_host_program )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(103):  set(OpenCV_SHARED ON )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(106):  set(OpenCV_USE_MANGLED_PATHS FALSE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(108):  set(OpenCV_LIB_COMPONENTS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(109):  set(__OpenCV_INCLUDE_DIRS C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(111):  set(OpenCV_INCLUDE_DIRS  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(112):  foreach(d C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(113):  get_filename_component(__d C:/vcpkg/installed/x64-windows/include/opencv4 REALPATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(114):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(118):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(119):  list(APPEND OpenCV_INCLUDE_DIRS C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(122):  unset(__d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(125):  if(NOT TARGET opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(126):  include(C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.12 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(10):  cmake_policy(VERSION 2.8.12...3.29 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(17):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(18):  if(OFF AND NOT TARGET libprotobuf )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(34):  find_dependency(Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash Threads;;1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_Threads_37c35af0fe428d476505d3515ef07aa12769dfa607841aee9f00a63375703449_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_Threads_HASH_STACK 37c35af0fe428d476505d3515ef07aa12769dfa607841aee9f00a63375703449 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(OpenCV_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(OpenCV_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(69):  set(cmake_fd_required_arg REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_Threads_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(Threads   REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name Threads )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER Threads z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/threads/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_Threads )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/threads/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(Threads STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(threads STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(Threads REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(54):  include(CheckLibraryExists )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(44):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(46):  macro(CHECK_LIBRARY_EXISTS LIBRARY FUNCTION LOCATION VARIABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(55):  set(Threads_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(56):  set(CMAKE_REQUIRED_QUIET_SAVE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(57):  set(CMAKE_REQUIRED_QUIET  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(59):  if(CMAKE_C_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(62):  elseif(CMAKE_CXX_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(63):  include(CheckIncludeFileCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckIncludeFileCXX.cmake(42):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckIncludeFileCXX.cmake(44):  macro(CHECK_INCLUDE_FILE_CXX INCLUDE VARIABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(64):  include(CheckCXXSourceCompiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake(54):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake(55):  include(Internal/CheckSourceCompiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(6):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(7):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(8):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(10):  function(CMAKE_CHECK_SOURCE_COMPILES _lang _source _var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake(57):  macro(CHECK_CXX_SOURCE_COMPILES SOURCE VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(70):  set(PTHREAD_C_CXX_TEST_SOURCE #include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(94):  macro(_threads_check_libc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(110):  macro(_threads_check_lib LIBNAME FUNCNAME VARNAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(122):  macro(_threads_check_flag_pthread )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(163):  _threads_check_libc()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(95):  if(NOT Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(96):  if(CMAKE_C_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(98):  elseif(CMAKE_CXX_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(99):  CHECK_CXX_SOURCE_COMPILES(#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}
 CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake(58):  cmake_check_source_compiles(CXX #include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}
 CMAKE_HAVE_LIBC_PTHREAD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(11):  if(NOT DEFINED CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(12):  set(_lang_filename src )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(13):  if(_lang STREQUAL C )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(16):  elseif(_lang STREQUAL CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(17):  set(_lang_textual C++ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(18):  set(_lang_ext cxx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(49):  get_property(_supported_languages GLOBAL PROPERTY ENABLED_LANGUAGES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(50):  if(NOT _lang IN_LIST _supported_languages )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(55):  set(_FAIL_REGEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(56):  set(_SRC_EXT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(57):  set(_key )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(58):  foreach(arg  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(74):  if(NOT _SRC_EXT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(75):  set(_SRC_EXT cxx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(78):  if(CMAKE_REQUIRED_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(81):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(82):  set(CHECK__SOURCE_COMPILES_ADD_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(84):  if(CMAKE_REQUIRED_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(87):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(88):  set(CHECK__SOURCE_COMPILES_ADD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(90):  if(CMAKE_REQUIRED_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(93):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(94):  set(_CSC_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(97):  if(CMAKE_REQUIRED_INCLUDES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(100):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(101):  set(CHECK__SOURCE_COMPILES_ADD_INCLUDES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(104):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(105):  message(CHECK_START Performing Test CMAKE_HAVE_LIBC_PTHREAD )
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(107):  string(APPEND _source 
 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(108):  try_compile(CMAKE_HAVE_LIBC_PTHREAD SOURCE_FROM_VAR src.cxx _source COMPILE_DEFINITIONS -DCMAKE_HAVE_LIBC_PTHREAD    CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=   OUTPUT_VARIABLE OUTPUT )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.31.6.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(2):  cmake_policy(SET CMP0091 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(3):  cmake_policy(SET CMP0141 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(4):  cmake_policy(SET CMP0126 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(5):  cmake_policy(SET CMP0128 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(6):  project(CMAKE_TRY_COMPILE CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(6):  include(C:/vcpkg/scripts/buildsystems/vcpkg.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(61):  if(EXISTS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/vcpkg.json )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(85):  set(Z_VCPKG_CHECK_MANIFEST_MODE OFF CACHE INTERNAL Making sure VCPKG_MANIFEST_MODE doesn't change )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(220):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(221):  set(CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL MinSizeRel;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(222):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(226):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(227):  set(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO RelWithDebInfo;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(228):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(233):  if(VCPKG_TARGET_TRIPLET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(241):  set(VCPKG_TARGET_TRIPLET x64-windows CACHE STRING Vcpkg target triplet (ex. x86-windows) FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(347):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsStore OR CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(349):  elseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Linux ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(351):  elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(353):  elseif(CMAKE_SYSTEM_NAME STREQUAL iOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(355):  elseif(CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(357):  elseif(MINGW )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(359):  elseif(CMAKE_SYSTEM_NAME STREQUAL Windows OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(360):  if(XBOX_CONSOLE_TARGET STREQUAL scarlett )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(362):  elseif(XBOX_CONSOLE_TARGET STREQUAL xboxone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(364):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(365):  set(Z_VCPKG_TARGET_TRIPLET_PLAT windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(375):  if(EMSCRIPTEN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(380):  set(VCPKG_TARGET_TRIPLET -windows CACHE STRING Vcpkg target triplet (ex. x86-windows) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(381):  set(Z_VCPKG_TOOLCHAIN_DIR C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(384):  set(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(385):  while(NOT DEFINED Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(399):  unset(Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(401):  if(NOT Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(405):  if(DEFINED VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(406):  set(Z_VCPKG_INSTALLED_DIR_INITIAL_VALUE C:/vcpkg/installed )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(415):  set(VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(418):  set(_VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(422):  function(z_vcpkg_add_vcpkg_to_cmake_path list suffix )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(437):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_PREFIX_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_PREFIX_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_PREFIX_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(438):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_LIBRARY_PATH /lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows/lib/manual-link C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_LIBRARY_PATH 0 C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_LIBRARY_PATH C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(439):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_FIND_ROOT_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_FIND_ROOT_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(441):  if(NOT VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(442):  set(CMAKE_FIND_FRAMEWORK LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(443):  set(CMAKE_FIND_APPBUNDLE LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(450):  if(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_LIBRARY STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_PACKAGE STREQUAL ONLY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(456):  set(VCPKG_CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(459):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(460):  set(Z_VCPKG_EXECUTABLE C:/vcpkg/vcpkg.exe )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(461):  set(Z_VCPKG_BOOTSTRAP_SCRIPT C:/vcpkg/bootstrap-vcpkg.bat )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(467):  if(VCPKG_MANIFEST_MODE AND VCPKG_MANIFEST_INSTALL AND NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE AND NOT Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(561):  option(VCPKG_SETUP_CMAKE_PROGRAM_PATH Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(562):  set(VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(563):  if(DEFINED VCPKG_HOST_TRIPLET AND NOT VCPKG_HOST_TRIPLET STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(566):  cmake_dependent_option(VCPKG_USE_HOST_TOOLS Setup CMAKE_PROGRAM_PATH to use host tools ON VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_USE_HOST_TOOLS_ISSET MATCHES ^VCPKG_USE_HOST_TOOLS_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_USE_HOST_TOOLS_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_USE_HOST_TOOLS MATCHES ^VCPKG_USE_HOST_TOOLS$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_CAN_USE_HOST_TOOLSx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(567):  unset(VCPKG_CAN_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(569):  if(VCPKG_SETUP_CMAKE_PROGRAM_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(570):  set(tools_base_path C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(571):  if(VCPKG_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(574):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(575):  file(GLOB Z_VCPKG_TOOLS_DIRS LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(576):  file(GLOB Z_VCPKG_TOOLS_FILES LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(577):  file(GLOB Z_VCPKG_TOOLS_DIRS_BIN LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(578):  file(GLOB Z_VCPKG_TOOLS_FILES_BIN LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(579):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(580):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS_BIN   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(581):  string(REPLACE /bin  Z_VCPKG_TOOLS_DIRS_TO_REMOVE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(582):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(583):  list(APPEND Z_VCPKG_TOOLS_DIRS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(584):  foreach(Z_VCPKG_TOOLS_DIR IN LISTS Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/flatbuffers )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/pkgconf )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(587):  unset(Z_VCPKG_TOOLS_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(588):  unset(Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(589):  unset(Z_VCPKG_TOOLS_FILES )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(590):  unset(Z_VCPKG_TOOLS_DIRS_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(591):  unset(Z_VCPKG_TOOLS_FILES_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(592):  unset(Z_VCPKG_TOOLS_DIRS_TO_REMOVE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(593):  unset(tools_base_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(596):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(598):  function(add_executable )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(639):  function(add_library )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(671):  function(x_vcpkg_install_local_dependencies )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(720):  if(X_VCPKG_APPLOCAL_DEPS_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(768):  option(VCPKG_TRACE_FIND_PACKAGE Trace calls to find_package() OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(769):  if(NOT DEFINED VCPKG_OVERRIDE_FIND_PACKAGE_NAME )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(770):  set(VCPKG_OVERRIDE_FIND_PACKAGE_NAME find_package )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(775):  set(z_vcpkg_find_package_backup_id 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(776):  macro(find_package z_vcpkg_find_package_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(914):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(915):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(917):  set(VCPKG_TOOLCHAIN ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(918):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(919):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(920):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(921):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(922):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(925):  if(NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(936):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(937):  set(VCPKG_APPLOCAL_DEPS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(940):  if(Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(944):  cmake_policy(POP )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Windows-Initialize OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Initialize.cmake(1):  set(WIN32 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(70):  set(CMAKE_SIZEOF_VOID_P 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(98):  set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE Unsupported generator: Visual Studio 17 2022 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(81):  if(NOT DEFINED CMAKE_EXPORT_BUILD_DATABASE AND CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(95):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(187):  if(NOT DEFINED CMAKE_INSTALL_PREFIX AND NOT DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(189):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(192):  if(DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(195):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(198):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(201):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(202):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(102):  if(Visual Studio 17 2022 MATCHES (Win64|IA64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(104):  elseif(x64 MATCHES x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(105):  set(arch_hint x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(118):  if(NOT arch_hint )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(140):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(142):  if(C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(146):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(148):  if(C:\Program Files STREQUAL C:\Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(151):  if(NOT x64 STREQUAL x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(171):  if(NOT C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(172):  file(TO_CMAKE_PATH C:\Program Files _base )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(179):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(203):  set(CMAKE_INSTALL_PREFIX C:/Program Files/CMAKE_TRY_COMPILE CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(206):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(212):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(214):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(1):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(2):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(3):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(4):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(6):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(7):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(9):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(10):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(11):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(12):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(13):  set(CMAKE_DL_LIBS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(14):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(16):  set(CMAKE_FIND_LIBRARY_PREFIXES  lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(20):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.lib .lib .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(28):  if(CMAKE_GENERATOR MATCHES Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(35):  if(CMAKE_GENERATOR MATCHES NMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(40):  include(Platform/WindowsPaths )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31 PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/CMAKE_TRY_COMPILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files/CMAKE_TRY_COMPILE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/CMAKE_TRY_COMPILE/bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin /bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(59):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(60):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(4):  include(Compiler/MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(5):  if(__COMPILER_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(8):  set(__COMPILER_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(10):  macro(__compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(5):  __compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(11):  set(CMAKE_CXX_CLANG_TIDY_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(12):  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(13):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -WX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(16):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.05 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(17):  set(CMAKE_CXX_COMPILE_OPTIONS_JMC -JMC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(21):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30036.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(22):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -external:I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(23):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX_WARNING -external:W0  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(7):  include(Compiler/CMakeCommonCompilerMacros )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(146):  macro(cmake_record_cuda_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(186):  macro(cmake_record_hip_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(205):  function(cmake_create_cxx_import_std std variable )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(9):  if(( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0.24215.1 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 19.10 ) OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.10.25017 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(17):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(18):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(19):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(20):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(21):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(23):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.11.25505 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(24):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(25):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(26):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(27):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(33):  set(CMAKE_CXX_STANDARD_LATEST 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(35):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30129 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(36):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(37):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(38):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(39):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(40):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(47):  __compiler_check_default_language_standard(CXX 19.0 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 19.0 14  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(93):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(94):  string(CONCAT CMAKE_CXX_SCANDEP_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> <SOURCE> -nologo -TP  -showIncludes  -scanDependencies <DYNDEP_FILE>  -Fo<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(99):  set(CMAKE_CXX_SCANDEP_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(100):  set(CMAKE_CXX_MODULE_MAP_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(101):  set(CMAKE_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(102):  set(CMAKE_CXX_MODULE_BMI_ONLY_FLAG -ifcOnly;-ifcOutput;<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-cl-AMD64 OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(1):  include(Platform/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(6):  if(__WINDOWS_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(9):  set(__WINDOWS_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(11):  set(CMAKE_LIBRARY_PATH_FLAG -LIBPATH: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(12):  set(CMAKE_LINK_LIBRARY_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(13):  set(MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(19):  if(NOT DEFINED CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(23):  if(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(25):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(26):  set(CMAKE_CL_NOLOGO /nologo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(29):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(31):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(33):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(34):  set(_PLATFORM_LINK_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(37):  set(CMAKE_SUPPORT_WINDOWS_EXPORT_ALL_SYMBOLS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(38):  if(NOT CMAKE_NO_BUILD_TYPE AND CMAKE_GENERATOR MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(39):  set(CMAKE_NO_BUILD_TYPE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(42):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(43):  set(MSVC_IDE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(48):  if(NOT MSVC_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(49):  if(x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(51):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(52):  set(_compiler_version 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(66):  if(19.44.35215.0 MATCHES ^([0-9]+)\.([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(67):  math(EXPR MSVC_VERSION 19*100 + 44 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(72):  if(MSVC_VERSION GREATER_EQUAL 1930 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(74):  set(MSVC_TOOLSET_VERSION 143 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(103):  set(MSVC10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(104):  set(MSVC11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(105):  set(MSVC12 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(106):  set(MSVC14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(107):  set(MSVC60 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(108):  set(MSVC70 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(109):  set(MSVC71 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(110):  set(MSVC80 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(111):  set(MSVC90 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(112):  set(CMAKE_COMPILER_2005 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(113):  set(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(114):  if(NOT 19.44.35215.0 VERSION_LESS 20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(116):  elseif(NOT 19.44.35215.0 VERSION_LESS 19 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(117):  set(MSVC14 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(139):  if(MSVC_C_ARCHITECTURE_ID MATCHES 64 OR MSVC_CXX_ARCHITECTURE_ID MATCHES 64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(140):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(144):  if(CMAKE_FORCE_WIN64 OR CMAKE_FORCE_IA64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(145):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(148):  if(1944 GREATER 1599 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(149):  set(MSVC_INCREMENTAL_DEFAULT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(153):  set(CMAKE_BUILD_TYPE_INIT Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(156):  foreach(lang C CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_C_ARCHITECTURE_FAMILY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_CXX_ARCHITECTURE_FAMILY x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(169):  cmake_policy(GET CMP0117 __WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(170):  if(__WINDOWS_MSVC_CMP0117 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(171):  set(_GR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(175):  unset(__WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(177):  if(WINCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(215):  elseif(WINDOWS_PHONE OR WINDOWS_STORE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(228):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(240):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(241):  set(_PLATFORM_DEFINES /DWIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(242):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(245):  if(_MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM OR _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(247):  elseif(MSVC_VERSION GREATER 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(248):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(252):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(253):  set(_RTC1 /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(254):  set(_FLAGS_CXX  /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(256):  set(CMAKE_C_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(263):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(267):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(271):  if(MSVC_VERSION LESS 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(277):  unset(_GR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(279):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(282):  set(CMAKE_LINK_DEF_FILE_FLAG /DEF: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(284):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(296):  elseif(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(297):  if(MSVC_CXX_ARCHITECTURE_ID MATCHES ^ARMV.I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(299):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(301):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(303):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(305):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(306):  set(_MACHINE_ARCH_FLAG /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(314):  set(MSVC_INCREMENTAL_YES_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(315):  if(NOT WINDOWS_PHONE AND NOT WINDOWS_STORE AND NOT CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(316):  if(NOT MSVC_INCREMENTAL_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(318):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(319):  set(MSVC_INCREMENTAL_YES_FLAG /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(323):  foreach(t EXE SHARED MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(337):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(339):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(340):  string(APPEND CMAKE_STATIC_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(342):  unset(_MACHINE_ARCH_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(344):  cmake_policy(GET CMP0091 __WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(345):  if(__WINDOWS_MSVC_CMP0091 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(346):  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT MultiThreaded$<$<CONFIG:Debug>:Debug>DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(350):  unset(__WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(352):  cmake_policy(GET CMP0141 __WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(353):  if(__WINDOWS_MSVC_CMP0141 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(356):  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(358):  unset(__WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(361):  macro(__windows_compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(520):  macro(__windows_compiler_msvc_enable_rc flags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(2):  set(_COMPILE_CXX  /TP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(3):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(4):  set(_FS_CXX  /FS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(6):  __windows_compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(362):  if(NOT MSVC_VERSION LESS 1400 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(364):  set(_CMAKE_VS_LINK_DLL <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(365):  set(_CMAKE_VS_LINK_EXE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(367):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(369):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(370):  set(_DLL_DRIVER /dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(372):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(374):  unset(_DLL_DRIVER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(376):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(377):  set(CMAKE_CXX_CREATE_STATIC_LIBRARY <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(379):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /Fo<OBJECT> /Fd<TARGET_COMPILE_PDB> /FS -c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(381):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> > <PREPROCESSED_SOURCE>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(383):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /FoNUL /FAs /Fa<ASSEMBLY_SOURCE> /c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(386):  set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(387):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(390):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(393):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(394):  set(CMAKE_CXX_CREATE_WIN32_EXE /subsystem:windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(395):  set(CMAKE_CXX_CREATE_CONSOLE_EXE /subsystem:console )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(398):  set(CMAKE_PCH_EXTENSION .pch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(399):  set(CMAKE_LINK_PCH ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(400):  if(CMAKE_CXX_COMPILER_ID STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(410):  elseif(MSVC_VERSION GREATER_EQUAL 1913 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(412):  set(CMAKE_PCH_PROLOGUE #pragma system_header )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(414):  if(NOT MSVC STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(415):  set(CMAKE_PCH_COPY_COMPILE_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(417):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH /Yu<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(418):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH /Yc<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(420):  if(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(421):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(422):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(424):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO /GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(425):  set(CMAKE_CXX_LINK_OPTIONS_IPO /INCREMENTAL:NO /LTCG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(426):  string(REPLACE <LINK_FLAGS>  /LTCG <LINK_FLAGS>  CMAKE_CXX_CREATE_STATIC_LIBRARY_IPO <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(448):  if(xCXX STREQUAL xC OR xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(450):  if(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(451):  set(_MDd  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(452):  set(_MD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(458):  cmake_policy(GET CMP0092 _cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(459):  if(_cmp0092 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(460):  set(_W3  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(461):  set(_Wall  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(466):  unset(_cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(468):  if(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(470):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(471):  set(_Zi  /Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(474):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(482):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(483):  string(APPEND CMAKE_CXX_FLAGS_INIT  /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(484):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(485):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  /O2 /Ob2 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(486):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  /Zi /O2 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(487):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  /O1 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(489):  unset(_Wall )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(490):  unset(_W3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(491):  unset(_MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(492):  unset(_MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(493):  unset(_Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(495):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreaded -MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(496):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDLL -MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(497):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebug -MTd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(498):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebugDLL -MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(499):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded -Z7 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(500):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_ProgramDatabase -Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(501):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_EditAndContinue -ZI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(503):  set(CMAKE_CXX_LINKER_SUPPORTS_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(505):  __windows_compiler_msvc_enable_rc(/DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(521):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(522):  set(CMAKE_RC_COMPILER_INIT rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(524):  if(NOT CMAKE_RC_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(526):  string(REPLACE  /D  -D fixed_flags  /DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(527):  string(APPEND CMAKE_RC_FLAGS_INIT   -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(529):  if(NOT CMAKE_RC_FLAGS_DEBUG_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(530):  string(APPEND CMAKE_RC_FLAGS_DEBUG_INIT  -D_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(533):  enable_language(RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(13):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(14):  get_filename_component(CMAKE_BASE_NAME C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-rc.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-rc OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT    -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    -DWIN32  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS -DWIN32 CACHE STRING Flags for Windows Resource Compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -D_DEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG -D_DEBUG CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(45):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> /fo <OBJECT> <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(49):  set(CMAKE_RC_USE_LINKER_INFORMATION FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(52):  set(CMAKE_RC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(534):  if(NOT DEFINED CMAKE_NINJA_CMCLDEPS_RC AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(535):  set(CMAKE_NINJA_CMCLDEPS_RC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(508):  if(MSVC_VERSION GREATER 1300 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(509):  set(CMAKE_DEPFILE_FLAGS_CXX /showIncludes )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(510):  set(CMAKE_CXX_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(514):  set(CMAKE_CXX_USING_LINKER_SYSTEM C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(515):  set(CMAKE_CXX_USING_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(516):  set(CMAKE_CXX_USING_LINKER_MSVC C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(517):  set(CMAKE_CXX_USING_LINKER_MODE TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(8):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(69):  foreach(f IN LISTS CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(72):  unset(CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_CXX_FLAGS_INIT   /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(100):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   /DWIN32 /D_WINDOWS /EHsc _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc CACHE STRING Flags used by the CXX compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /Ob0 /Od /RTC1 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O2 /Ob2 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE /O2 /Ob2 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O1 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL /O1 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /O2 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO /Zi /O2 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(102):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(103):  set(CMAKE_CXX_STANDARD_LIBRARIES kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib CACHE STRING Libraries linked by default with all C++ applications. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(105):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(113):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(118):  include(CMakeCommonLanguageInclude )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of modules during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(27):  macro(_cmake_common_language_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(119):  _cmake_common_language_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(28):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(29):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(32):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(36):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(39):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(40):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(42):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(43):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(46):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(47):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(50):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(51):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(54):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(58):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(62):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(63):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(66):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(67):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(70):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(71):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(74):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(75):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(78):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(79):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(82):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(86):  if(NOT DEFINED CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(87):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(90):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(91):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(94):  if(NOT DEFINED CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(95):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(101):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(102):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(103):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(106):  if(NOT DEFINED CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(109):  if(NOT DEFINED CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(110):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(113):  foreach(type IN ITEMS SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(148):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(154):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(161):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(162):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(164):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(165):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(167):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(172):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(177):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(182):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(186):  set(CMAKE_CXX_USE_LINKER_INFORMATION TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(188):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(11):  include(Internal/CMakeCommonLinkerInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(8):  macro(_cmake_common_linker_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(13):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(16):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(17):  include(Linker/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(21):  if(CMAKE_SYSTEM_PROCESSOR AND CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(22):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(27):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(28):  include(Platform/Linker/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(4):  include(Platform/Linker/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(8):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(9):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(12):  if(MSVC_VERSION GREATER 1900 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(14):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(15):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(16):  set(CMAKE_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(19):  macro(__windows_linker_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(6):  __windows_linker_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(20):  set(CMAKE_CXX_PLATFORM_LINKER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(21):  set(CMAKE_CXX_LINK_LIBRARIES_PROCESSING ORDER=FORWARD DEDUPLICATION=ALL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(24):  if(DEFINED CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(25):  if(CMAKE_CXX_COMPILER_LINKER_VERSION GREATER_EQUAL 14.10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(27):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(28):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(29):  set(CMAKE_CXX_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(37):  _cmake_common_linker_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(10):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(39):  set(CMAKE_CXX_LINKER_INFORMATION_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(7):  set(CMAKE_VERBOSE_MAKEFILE 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(8):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(9):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(10):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(11):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(12):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(13):  include_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(14):  set(CMAKE_SUPPRESS_REGENERATION 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(15):  link_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(16):  add_definitions(-DCMAKE_HAVE_LIBC_PTHREAD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(17):  cmake_policy(SET CMP0065 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(18):  cmake_policy(SET CMP0083 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(19):  cmake_policy(SET CMP0155 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(20):  cmake_policy(SET CMP0157 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(21):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(8):  if(NOT APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(9):  return()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(22):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(23):  add_executable(cmTC_d6998 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(599):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG cmTC_d6998 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;cmTC_d6998 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;cmTC_d6998 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(600):  _add_executable(cmTC_d6998 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(601):  set(target_name cmTC_d6998 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(603):  list(FIND ARGV IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(604):  list(FIND ARGV ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(605):  list(FIND ARGV MACOSX_BUNDLE MACOSX_BUNDLE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(606):  if(IMPORTED_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(607):  if(VCPKG_APPLOCAL_DEPS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(634):  set_target_properties(cmTC_d6998 PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(635):  set_target_properties(cmTC_d6998 PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(24):  target_sources(cmTC_d6998 PRIVATE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/src.cxx )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(27):  file(GENERATE OUTPUT C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/cmTC_d6998_$<UPPER_CASE:$<CONFIG>>_loc CONTENT $<TARGET_FILE:cmTC_d6998> )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(29):  set_property(TARGET cmTC_d6998 PROPERTY CXX_EXTENSIONS OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(30):  set_property(TARGET cmTC_d6998 PROPERTY CXX_STANDARD 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(31):  set_property(TARGET cmTC_d6998 PROPERTY CXX_STANDARD_REQUIRED ON )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-57fbkr/CMakeLists.txt(32):  target_link_libraries(cmTC_d6998  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(117):  unset(_CSC_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(119):  foreach(_regex  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(125):  if(_OUTPUT_VARIABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(129):  if(CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(134):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(135):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(136):  message(CHECK_FAIL Failed )
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake(138):  set(CMAKE_HAVE_LIBC_PTHREAD  CACHE INTERNAL Test CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(101):  if(CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(168):  if(THREADS_PREFER_PTHREAD_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(172):  if(CMAKE_SYSTEM MATCHES GHS-MULTI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(175):  _threads_check_lib(pthreads pthread_create CMAKE_HAVE_PTHREADS_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(111):  if(NOT Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(112):  CHECK_LIBRARY_EXISTS(pthreads pthread_create  CMAKE_HAVE_PTHREADS_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(47):  if(NOT DEFINED CMAKE_HAVE_PTHREADS_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(48):  set(MACRO_CHECK_LIBRARY_EXISTS_DEFINITION -DCHECK_FUNCTION_EXISTS=pthread_create  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(50):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(51):  message(CHECK_START Looking for pthread_create in pthreads )
-- Looking for pthread_create in pthreads
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(53):  set(CHECK_LIBRARY_EXISTS_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(54):  if(CMAKE_REQUIRED_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(58):  set(CHECK_LIBRARY_EXISTS_LIBRARIES pthreads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(59):  if(CMAKE_REQUIRED_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(63):  if(CMAKE_REQUIRED_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(66):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(67):  set(_CLE_LINK_DIRECTORIES -DLINK_DIRECTORIES:STRING= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(70):  if(CMAKE_C_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(72):  elseif(CMAKE_CXX_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(73):  set(_cle_source CheckFunctionExists.cxx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(78):  try_compile(CMAKE_HAVE_PTHREADS_CREATE SOURCE_FROM_FILE CheckFunctionExists.cxx C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckFunctionExists.c COMPILE_DEFINITIONS   LINK_LIBRARIES pthreads CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=-DCHECK_FUNCTION_EXISTS=pthread_create  -DLINK_DIRECTORIES:STRING= )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.31.6.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(2):  cmake_policy(SET CMP0091 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(3):  cmake_policy(SET CMP0141 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(4):  cmake_policy(SET CMP0126 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(5):  cmake_policy(SET CMP0128 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(6):  project(CMAKE_TRY_COMPILE CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(6):  include(C:/vcpkg/scripts/buildsystems/vcpkg.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(61):  if(EXISTS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/vcpkg.json )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(85):  set(Z_VCPKG_CHECK_MANIFEST_MODE OFF CACHE INTERNAL Making sure VCPKG_MANIFEST_MODE doesn't change )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(220):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(221):  set(CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL MinSizeRel;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(222):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(226):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(227):  set(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO RelWithDebInfo;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(228):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(233):  if(VCPKG_TARGET_TRIPLET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(241):  set(VCPKG_TARGET_TRIPLET x64-windows CACHE STRING Vcpkg target triplet (ex. x86-windows) FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(347):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsStore OR CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(349):  elseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Linux ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(351):  elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(353):  elseif(CMAKE_SYSTEM_NAME STREQUAL iOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(355):  elseif(CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(357):  elseif(MINGW )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(359):  elseif(CMAKE_SYSTEM_NAME STREQUAL Windows OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(360):  if(XBOX_CONSOLE_TARGET STREQUAL scarlett )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(362):  elseif(XBOX_CONSOLE_TARGET STREQUAL xboxone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(364):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(365):  set(Z_VCPKG_TARGET_TRIPLET_PLAT windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(375):  if(EMSCRIPTEN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(380):  set(VCPKG_TARGET_TRIPLET -windows CACHE STRING Vcpkg target triplet (ex. x86-windows) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(381):  set(Z_VCPKG_TOOLCHAIN_DIR C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(384):  set(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(385):  while(NOT DEFINED Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(399):  unset(Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(401):  if(NOT Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(405):  if(DEFINED VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(406):  set(Z_VCPKG_INSTALLED_DIR_INITIAL_VALUE C:/vcpkg/installed )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(415):  set(VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(418):  set(_VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(422):  function(z_vcpkg_add_vcpkg_to_cmake_path list suffix )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(437):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_PREFIX_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_PREFIX_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_PREFIX_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(438):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_LIBRARY_PATH /lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows/lib/manual-link C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_LIBRARY_PATH 0 C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_LIBRARY_PATH C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(439):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_FIND_ROOT_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_FIND_ROOT_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(441):  if(NOT VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(442):  set(CMAKE_FIND_FRAMEWORK LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(443):  set(CMAKE_FIND_APPBUNDLE LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(450):  if(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_LIBRARY STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_PACKAGE STREQUAL ONLY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(456):  set(VCPKG_CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(459):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(460):  set(Z_VCPKG_EXECUTABLE C:/vcpkg/vcpkg.exe )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(461):  set(Z_VCPKG_BOOTSTRAP_SCRIPT C:/vcpkg/bootstrap-vcpkg.bat )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(467):  if(VCPKG_MANIFEST_MODE AND VCPKG_MANIFEST_INSTALL AND NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE AND NOT Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(561):  option(VCPKG_SETUP_CMAKE_PROGRAM_PATH Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(562):  set(VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(563):  if(DEFINED VCPKG_HOST_TRIPLET AND NOT VCPKG_HOST_TRIPLET STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(566):  cmake_dependent_option(VCPKG_USE_HOST_TOOLS Setup CMAKE_PROGRAM_PATH to use host tools ON VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_USE_HOST_TOOLS_ISSET MATCHES ^VCPKG_USE_HOST_TOOLS_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_USE_HOST_TOOLS_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_USE_HOST_TOOLS MATCHES ^VCPKG_USE_HOST_TOOLS$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_CAN_USE_HOST_TOOLSx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(567):  unset(VCPKG_CAN_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(569):  if(VCPKG_SETUP_CMAKE_PROGRAM_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(570):  set(tools_base_path C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(571):  if(VCPKG_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(574):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(575):  file(GLOB Z_VCPKG_TOOLS_DIRS LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(576):  file(GLOB Z_VCPKG_TOOLS_FILES LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(577):  file(GLOB Z_VCPKG_TOOLS_DIRS_BIN LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(578):  file(GLOB Z_VCPKG_TOOLS_FILES_BIN LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(579):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(580):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS_BIN   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(581):  string(REPLACE /bin  Z_VCPKG_TOOLS_DIRS_TO_REMOVE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(582):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(583):  list(APPEND Z_VCPKG_TOOLS_DIRS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(584):  foreach(Z_VCPKG_TOOLS_DIR IN LISTS Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/flatbuffers )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/pkgconf )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(587):  unset(Z_VCPKG_TOOLS_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(588):  unset(Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(589):  unset(Z_VCPKG_TOOLS_FILES )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(590):  unset(Z_VCPKG_TOOLS_DIRS_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(591):  unset(Z_VCPKG_TOOLS_FILES_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(592):  unset(Z_VCPKG_TOOLS_DIRS_TO_REMOVE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(593):  unset(tools_base_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(596):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(598):  function(add_executable )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(639):  function(add_library )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(671):  function(x_vcpkg_install_local_dependencies )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(720):  if(X_VCPKG_APPLOCAL_DEPS_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(768):  option(VCPKG_TRACE_FIND_PACKAGE Trace calls to find_package() OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(769):  if(NOT DEFINED VCPKG_OVERRIDE_FIND_PACKAGE_NAME )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(770):  set(VCPKG_OVERRIDE_FIND_PACKAGE_NAME find_package )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(775):  set(z_vcpkg_find_package_backup_id 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(776):  macro(find_package z_vcpkg_find_package_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(914):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(915):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(917):  set(VCPKG_TOOLCHAIN ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(918):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(919):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(920):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(921):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(922):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(925):  if(NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(936):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(937):  set(VCPKG_APPLOCAL_DEPS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(940):  if(Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(944):  cmake_policy(POP )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Windows-Initialize OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Initialize.cmake(1):  set(WIN32 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(70):  set(CMAKE_SIZEOF_VOID_P 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(98):  set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE Unsupported generator: Visual Studio 17 2022 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(81):  if(NOT DEFINED CMAKE_EXPORT_BUILD_DATABASE AND CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(95):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(187):  if(NOT DEFINED CMAKE_INSTALL_PREFIX AND NOT DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(189):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(192):  if(DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(195):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(198):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(201):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(202):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(102):  if(Visual Studio 17 2022 MATCHES (Win64|IA64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(104):  elseif(x64 MATCHES x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(105):  set(arch_hint x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(118):  if(NOT arch_hint )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(140):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(142):  if(C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(146):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(148):  if(C:\Program Files STREQUAL C:\Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(151):  if(NOT x64 STREQUAL x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(171):  if(NOT C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(172):  file(TO_CMAKE_PATH C:\Program Files _base )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(179):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(203):  set(CMAKE_INSTALL_PREFIX C:/Program Files/CMAKE_TRY_COMPILE CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(206):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(212):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(214):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(1):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(2):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(3):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(4):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(6):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(7):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(9):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(10):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(11):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(12):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(13):  set(CMAKE_DL_LIBS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(14):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(16):  set(CMAKE_FIND_LIBRARY_PREFIXES  lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(20):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.lib .lib .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(28):  if(CMAKE_GENERATOR MATCHES Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(35):  if(CMAKE_GENERATOR MATCHES NMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(40):  include(Platform/WindowsPaths )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31 PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/CMAKE_TRY_COMPILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files/CMAKE_TRY_COMPILE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/CMAKE_TRY_COMPILE/bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin /bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(59):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(60):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(4):  include(Compiler/MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(5):  if(__COMPILER_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(8):  set(__COMPILER_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(10):  macro(__compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(5):  __compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(11):  set(CMAKE_CXX_CLANG_TIDY_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(12):  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(13):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -WX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(16):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.05 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(17):  set(CMAKE_CXX_COMPILE_OPTIONS_JMC -JMC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(21):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30036.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(22):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -external:I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(23):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX_WARNING -external:W0  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(7):  include(Compiler/CMakeCommonCompilerMacros )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(146):  macro(cmake_record_cuda_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(186):  macro(cmake_record_hip_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(205):  function(cmake_create_cxx_import_std std variable )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(9):  if(( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0.24215.1 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 19.10 ) OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.10.25017 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(17):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(18):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(19):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(20):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(21):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(23):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.11.25505 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(24):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(25):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(26):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(27):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(33):  set(CMAKE_CXX_STANDARD_LATEST 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(35):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30129 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(36):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(37):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(38):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(39):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(40):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(47):  __compiler_check_default_language_standard(CXX 19.0 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 19.0 14  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(93):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(94):  string(CONCAT CMAKE_CXX_SCANDEP_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> <SOURCE> -nologo -TP  -showIncludes  -scanDependencies <DYNDEP_FILE>  -Fo<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(99):  set(CMAKE_CXX_SCANDEP_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(100):  set(CMAKE_CXX_MODULE_MAP_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(101):  set(CMAKE_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(102):  set(CMAKE_CXX_MODULE_BMI_ONLY_FLAG -ifcOnly;-ifcOutput;<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-cl-AMD64 OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(1):  include(Platform/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(6):  if(__WINDOWS_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(9):  set(__WINDOWS_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(11):  set(CMAKE_LIBRARY_PATH_FLAG -LIBPATH: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(12):  set(CMAKE_LINK_LIBRARY_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(13):  set(MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(19):  if(NOT DEFINED CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(23):  if(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(25):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(26):  set(CMAKE_CL_NOLOGO /nologo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(29):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(31):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(33):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(34):  set(_PLATFORM_LINK_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(37):  set(CMAKE_SUPPORT_WINDOWS_EXPORT_ALL_SYMBOLS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(38):  if(NOT CMAKE_NO_BUILD_TYPE AND CMAKE_GENERATOR MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(39):  set(CMAKE_NO_BUILD_TYPE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(42):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(43):  set(MSVC_IDE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(48):  if(NOT MSVC_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(49):  if(x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(51):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(52):  set(_compiler_version 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(66):  if(19.44.35215.0 MATCHES ^([0-9]+)\.([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(67):  math(EXPR MSVC_VERSION 19*100 + 44 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(72):  if(MSVC_VERSION GREATER_EQUAL 1930 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(74):  set(MSVC_TOOLSET_VERSION 143 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(103):  set(MSVC10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(104):  set(MSVC11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(105):  set(MSVC12 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(106):  set(MSVC14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(107):  set(MSVC60 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(108):  set(MSVC70 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(109):  set(MSVC71 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(110):  set(MSVC80 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(111):  set(MSVC90 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(112):  set(CMAKE_COMPILER_2005 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(113):  set(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(114):  if(NOT 19.44.35215.0 VERSION_LESS 20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(116):  elseif(NOT 19.44.35215.0 VERSION_LESS 19 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(117):  set(MSVC14 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(139):  if(MSVC_C_ARCHITECTURE_ID MATCHES 64 OR MSVC_CXX_ARCHITECTURE_ID MATCHES 64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(140):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(144):  if(CMAKE_FORCE_WIN64 OR CMAKE_FORCE_IA64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(145):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(148):  if(1944 GREATER 1599 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(149):  set(MSVC_INCREMENTAL_DEFAULT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(153):  set(CMAKE_BUILD_TYPE_INIT Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(156):  foreach(lang C CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_C_ARCHITECTURE_FAMILY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_CXX_ARCHITECTURE_FAMILY x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(169):  cmake_policy(GET CMP0117 __WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(170):  if(__WINDOWS_MSVC_CMP0117 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(171):  set(_GR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(175):  unset(__WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(177):  if(WINCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(215):  elseif(WINDOWS_PHONE OR WINDOWS_STORE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(228):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(240):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(241):  set(_PLATFORM_DEFINES /DWIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(242):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(245):  if(_MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM OR _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(247):  elseif(MSVC_VERSION GREATER 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(248):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(252):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(253):  set(_RTC1 /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(254):  set(_FLAGS_CXX  /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(256):  set(CMAKE_C_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(263):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(267):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(271):  if(MSVC_VERSION LESS 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(277):  unset(_GR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(279):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(282):  set(CMAKE_LINK_DEF_FILE_FLAG /DEF: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(284):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(296):  elseif(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(297):  if(MSVC_CXX_ARCHITECTURE_ID MATCHES ^ARMV.I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(299):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(301):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(303):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(305):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(306):  set(_MACHINE_ARCH_FLAG /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(314):  set(MSVC_INCREMENTAL_YES_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(315):  if(NOT WINDOWS_PHONE AND NOT WINDOWS_STORE AND NOT CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(316):  if(NOT MSVC_INCREMENTAL_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(318):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(319):  set(MSVC_INCREMENTAL_YES_FLAG /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(323):  foreach(t EXE SHARED MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(337):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(339):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(340):  string(APPEND CMAKE_STATIC_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(342):  unset(_MACHINE_ARCH_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(344):  cmake_policy(GET CMP0091 __WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(345):  if(__WINDOWS_MSVC_CMP0091 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(346):  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT MultiThreaded$<$<CONFIG:Debug>:Debug>DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(350):  unset(__WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(352):  cmake_policy(GET CMP0141 __WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(353):  if(__WINDOWS_MSVC_CMP0141 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(356):  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(358):  unset(__WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(361):  macro(__windows_compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(520):  macro(__windows_compiler_msvc_enable_rc flags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(2):  set(_COMPILE_CXX  /TP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(3):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(4):  set(_FS_CXX  /FS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(6):  __windows_compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(362):  if(NOT MSVC_VERSION LESS 1400 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(364):  set(_CMAKE_VS_LINK_DLL <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(365):  set(_CMAKE_VS_LINK_EXE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(367):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(369):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(370):  set(_DLL_DRIVER /dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(372):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(374):  unset(_DLL_DRIVER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(376):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(377):  set(CMAKE_CXX_CREATE_STATIC_LIBRARY <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(379):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /Fo<OBJECT> /Fd<TARGET_COMPILE_PDB> /FS -c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(381):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> > <PREPROCESSED_SOURCE>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(383):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /FoNUL /FAs /Fa<ASSEMBLY_SOURCE> /c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(386):  set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(387):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(390):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(393):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(394):  set(CMAKE_CXX_CREATE_WIN32_EXE /subsystem:windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(395):  set(CMAKE_CXX_CREATE_CONSOLE_EXE /subsystem:console )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(398):  set(CMAKE_PCH_EXTENSION .pch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(399):  set(CMAKE_LINK_PCH ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(400):  if(CMAKE_CXX_COMPILER_ID STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(410):  elseif(MSVC_VERSION GREATER_EQUAL 1913 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(412):  set(CMAKE_PCH_PROLOGUE #pragma system_header )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(414):  if(NOT MSVC STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(415):  set(CMAKE_PCH_COPY_COMPILE_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(417):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH /Yu<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(418):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH /Yc<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(420):  if(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(421):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(422):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(424):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO /GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(425):  set(CMAKE_CXX_LINK_OPTIONS_IPO /INCREMENTAL:NO /LTCG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(426):  string(REPLACE <LINK_FLAGS>  /LTCG <LINK_FLAGS>  CMAKE_CXX_CREATE_STATIC_LIBRARY_IPO <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(448):  if(xCXX STREQUAL xC OR xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(450):  if(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(451):  set(_MDd  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(452):  set(_MD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(458):  cmake_policy(GET CMP0092 _cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(459):  if(_cmp0092 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(460):  set(_W3  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(461):  set(_Wall  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(466):  unset(_cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(468):  if(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(470):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(471):  set(_Zi  /Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(474):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(482):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(483):  string(APPEND CMAKE_CXX_FLAGS_INIT  /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(484):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(485):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  /O2 /Ob2 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(486):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  /Zi /O2 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(487):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  /O1 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(489):  unset(_Wall )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(490):  unset(_W3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(491):  unset(_MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(492):  unset(_MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(493):  unset(_Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(495):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreaded -MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(496):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDLL -MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(497):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebug -MTd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(498):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebugDLL -MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(499):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded -Z7 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(500):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_ProgramDatabase -Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(501):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_EditAndContinue -ZI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(503):  set(CMAKE_CXX_LINKER_SUPPORTS_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(505):  __windows_compiler_msvc_enable_rc(/DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(521):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(522):  set(CMAKE_RC_COMPILER_INIT rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(524):  if(NOT CMAKE_RC_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(526):  string(REPLACE  /D  -D fixed_flags  /DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(527):  string(APPEND CMAKE_RC_FLAGS_INIT   -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(529):  if(NOT CMAKE_RC_FLAGS_DEBUG_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(530):  string(APPEND CMAKE_RC_FLAGS_DEBUG_INIT  -D_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(533):  enable_language(RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(13):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(14):  get_filename_component(CMAKE_BASE_NAME C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-rc.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-rc OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT    -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    -DWIN32  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS -DWIN32 CACHE STRING Flags for Windows Resource Compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -D_DEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG -D_DEBUG CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(45):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> /fo <OBJECT> <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(49):  set(CMAKE_RC_USE_LINKER_INFORMATION FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(52):  set(CMAKE_RC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(534):  if(NOT DEFINED CMAKE_NINJA_CMCLDEPS_RC AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(535):  set(CMAKE_NINJA_CMCLDEPS_RC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(508):  if(MSVC_VERSION GREATER 1300 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(509):  set(CMAKE_DEPFILE_FLAGS_CXX /showIncludes )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(510):  set(CMAKE_CXX_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(514):  set(CMAKE_CXX_USING_LINKER_SYSTEM C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(515):  set(CMAKE_CXX_USING_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(516):  set(CMAKE_CXX_USING_LINKER_MSVC C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(517):  set(CMAKE_CXX_USING_LINKER_MODE TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(8):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(69):  foreach(f IN LISTS CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(72):  unset(CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_CXX_FLAGS_INIT   /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(100):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   /DWIN32 /D_WINDOWS /EHsc _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc CACHE STRING Flags used by the CXX compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /Ob0 /Od /RTC1 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O2 /Ob2 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE /O2 /Ob2 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O1 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL /O1 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /O2 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO /Zi /O2 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(102):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(103):  set(CMAKE_CXX_STANDARD_LIBRARIES kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib CACHE STRING Libraries linked by default with all C++ applications. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(105):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(113):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(118):  include(CMakeCommonLanguageInclude )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of modules during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(27):  macro(_cmake_common_language_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(119):  _cmake_common_language_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(28):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(29):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(32):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(36):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(39):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(40):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(42):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(43):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(46):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(47):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(50):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(51):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(54):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(58):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(62):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(63):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(66):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(67):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(70):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(71):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(74):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(75):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(78):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(79):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(82):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(86):  if(NOT DEFINED CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(87):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(90):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(91):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(94):  if(NOT DEFINED CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(95):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(101):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(102):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(103):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(106):  if(NOT DEFINED CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(109):  if(NOT DEFINED CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(110):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(113):  foreach(type IN ITEMS SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(148):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(154):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(161):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(162):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(164):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(165):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(167):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(172):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(177):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(182):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(186):  set(CMAKE_CXX_USE_LINKER_INFORMATION TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(188):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(11):  include(Internal/CMakeCommonLinkerInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(8):  macro(_cmake_common_linker_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(13):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(16):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(17):  include(Linker/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(21):  if(CMAKE_SYSTEM_PROCESSOR AND CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(22):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(27):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(28):  include(Platform/Linker/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(4):  include(Platform/Linker/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(8):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(9):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(12):  if(MSVC_VERSION GREATER 1900 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(14):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(15):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(16):  set(CMAKE_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(19):  macro(__windows_linker_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(6):  __windows_linker_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(20):  set(CMAKE_CXX_PLATFORM_LINKER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(21):  set(CMAKE_CXX_LINK_LIBRARIES_PROCESSING ORDER=FORWARD DEDUPLICATION=ALL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(24):  if(DEFINED CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(25):  if(CMAKE_CXX_COMPILER_LINKER_VERSION GREATER_EQUAL 14.10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(27):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(28):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(29):  set(CMAKE_CXX_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(37):  _cmake_common_linker_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(10):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(39):  set(CMAKE_CXX_LINKER_INFORMATION_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(7):  set(CMAKE_VERBOSE_MAKEFILE 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(8):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(9):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc -DCHECK_FUNCTION_EXISTS=pthread_create )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(10):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(11):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(12):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(13):  include_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(14):  set(CMAKE_SUPPRESS_REGENERATION 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(15):  link_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(16):  cmake_policy(SET CMP0065 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(17):  cmake_policy(SET CMP0083 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(18):  cmake_policy(SET CMP0155 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(19):  cmake_policy(SET CMP0157 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(20):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(8):  if(NOT APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(9):  return()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(21):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(22):  add_executable(cmTC_4d3f6 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(599):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG cmTC_4d3f6 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;cmTC_4d3f6 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;cmTC_4d3f6 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(600):  _add_executable(cmTC_4d3f6 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(601):  set(target_name cmTC_4d3f6 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(603):  list(FIND ARGV IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(604):  list(FIND ARGV ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(605):  list(FIND ARGV MACOSX_BUNDLE MACOSX_BUNDLE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(606):  if(IMPORTED_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(607):  if(VCPKG_APPLOCAL_DEPS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(634):  set_target_properties(cmTC_4d3f6 PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(635):  set_target_properties(cmTC_4d3f6 PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(23):  target_sources(cmTC_4d3f6 PRIVATE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CheckFunctionExists.cxx )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(26):  file(GENERATE OUTPUT C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/cmTC_4d3f6_$<UPPER_CASE:$<CONFIG>>_loc CONTENT $<TARGET_FILE:cmTC_4d3f6> )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(28):  set_property(TARGET cmTC_4d3f6 PROPERTY CXX_EXTENSIONS OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(29):  set_property(TARGET cmTC_4d3f6 PROPERTY CXX_STANDARD 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(30):  set_property(TARGET cmTC_4d3f6 PROPERTY CXX_STANDARD_REQUIRED ON )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-7l6wsd/CMakeLists.txt(31):  target_link_libraries(cmTC_4d3f6 pthreads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(87):  unset(_cle_source )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(88):  unset(_CLE_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(90):  if(CMAKE_HAVE_PTHREADS_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(95):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(96):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(97):  message(CHECK_FAIL not found )
-- Looking for pthread_create in pthreads - not found
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(99):  set(CMAKE_HAVE_PTHREADS_CREATE  CACHE INTERNAL Have library pthreads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(113):  if(CMAKE_HAVE_PTHREADS_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(176):  _threads_check_lib(pthread pthread_create CMAKE_HAVE_PTHREAD_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(111):  if(NOT Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(112):  CHECK_LIBRARY_EXISTS(pthread pthread_create  CMAKE_HAVE_PTHREAD_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(47):  if(NOT DEFINED CMAKE_HAVE_PTHREAD_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(48):  set(MACRO_CHECK_LIBRARY_EXISTS_DEFINITION -DCHECK_FUNCTION_EXISTS=pthread_create  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(50):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(51):  message(CHECK_START Looking for pthread_create in pthread )
-- Looking for pthread_create in pthread
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(53):  set(CHECK_LIBRARY_EXISTS_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(54):  if(CMAKE_REQUIRED_LINK_OPTIONS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(58):  set(CHECK_LIBRARY_EXISTS_LIBRARIES pthread )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(59):  if(CMAKE_REQUIRED_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(63):  if(CMAKE_REQUIRED_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(66):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(67):  set(_CLE_LINK_DIRECTORIES -DLINK_DIRECTORIES:STRING= )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(70):  if(CMAKE_C_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(72):  elseif(CMAKE_CXX_COMPILER_LOADED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(73):  set(_cle_source CheckFunctionExists.cxx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(78):  try_compile(CMAKE_HAVE_PTHREAD_CREATE SOURCE_FROM_FILE CheckFunctionExists.cxx C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckFunctionExists.c COMPILE_DEFINITIONS   LINK_LIBRARIES pthread CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=-DCHECK_FUNCTION_EXISTS=pthread_create  -DLINK_DIRECTORIES:STRING= )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.31.6.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(2):  cmake_policy(SET CMP0091 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(3):  cmake_policy(SET CMP0141 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(4):  cmake_policy(SET CMP0126 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(5):  cmake_policy(SET CMP0128 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(6):  project(CMAKE_TRY_COMPILE CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(6):  include(C:/vcpkg/scripts/buildsystems/vcpkg.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(2):  mark_as_advanced(CMAKE_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(24):  set(Z_VCPKG_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(25):  set(Z_VCPKG_HAS_FATAL_ERROR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(26):  function(z_vcpkg_add_fatal_error ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(35):  set(Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION 3.7.2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(36):  if(CMAKE_VERSION VERSION_LESS Z_VCPKG_CMAKE_REQUIRED_MINIMUM_VERSION )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(39):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(40):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(42):  include(CMakeDependentOption )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(50):  macro(CMAKE_DEPENDENT_OPTION option doc default depends force )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(45):  option(VCPKG_VERBOSE Enables messages from the VCPKG toolchain for debugging purposes. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(46):  mark_as_advanced(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(48):  option(VCPKG_APPLOCAL_DEPS Automatically copy dependencies into the output directory for executables. ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(49):  option(X_VCPKG_APPLOCAL_DEPS_SERIALIZED (experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force serialization. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(52):  option(X_VCPKG_APPLOCAL_DEPS_INSTALL (experimental) Automatically copy dependencies into the install target directory for executables. Requires CMake 3.14. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(53):  option(VCPKG_PREFER_SYSTEM_LIBS Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are found after toolchain/system libraries/packages. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(54):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(59):  set(Z_VCPKG_MANIFEST_DIR_INITIAL_VALUE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(60):  if(NOT DEFINED VCPKG_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(61):  if(EXISTS C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/vcpkg.json )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(65):  set(VCPKG_MANIFEST_DIR  CACHE PATH The path to the vcpkg manifest directory. FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(68):  if(DEFINED VCPKG_MANIFEST_DIR AND NOT VCPKG_MANIFEST_DIR STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(70):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(71):  set(Z_VCPKG_HAS_MANIFEST_DIR OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(74):  option(VCPKG_MANIFEST_MODE Use manifest mode, as opposed to classic mode. OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(76):  if(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_HAS_MANIFEST_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(84):  if(NOT DEFINED CACHE{Z_VCPKG_CHECK_MANIFEST_MODE} )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(85):  set(Z_VCPKG_CHECK_MANIFEST_MODE OFF CACHE INTERNAL Making sure VCPKG_MANIFEST_MODE doesn't change )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(89):  if(NOT VCPKG_MANIFEST_MODE AND Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(94):  elseif(VCPKG_MANIFEST_MODE AND NOT Z_VCPKG_CHECK_MANIFEST_MODE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(101):  CMAKE_DEPENDENT_OPTION(VCPKG_MANIFEST_INSTALL Install the dependencies listed in your manifest:
    If this is off, you will have to manually install your dependencies.
    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md for more info.
 ON VCPKG_MANIFEST_MODE OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_MANIFEST_INSTALL_ISSET MATCHES ^VCPKG_MANIFEST_INSTALL_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_MANIFEST_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_MANIFEST_INSTALL_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_MANIFEST_INSTALL_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_MANIFEST_INSTALL MATCHES ^VCPKG_MANIFEST_INSTALL$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_MANIFEST_INSTALL OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_MANIFEST_MODEx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(110):  if(VCPKG_MANIFEST_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(151):  macro(z_vcpkg_function_arguments OUT_VAR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(185):  function(z_vcpkg_set_powershell_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(206):  get_property(Z_VCPKG_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(208):  if(VCPKG_CHAINLOAD_TOOLCHAIN_FILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(212):  if(VCPKG_TOOLCHAIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(220):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(221):  set(CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL MinSizeRel;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(222):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(226):  if(NOT DEFINED CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(227):  set(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO RelWithDebInfo;Release;None; )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(228):  if(VCPKG_VERBOSE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(233):  if(VCPKG_TARGET_TRIPLET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(241):  set(VCPKG_TARGET_TRIPLET x64-windows CACHE STRING Vcpkg target triplet (ex. x86-windows) FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(347):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsStore OR CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(349):  elseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Linux ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(351):  elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(353):  elseif(CMAKE_SYSTEM_NAME STREQUAL iOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(355):  elseif(CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(357):  elseif(MINGW )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(359):  elseif(CMAKE_SYSTEM_NAME STREQUAL Windows OR ( NOT CMAKE_SYSTEM_NAME AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(360):  if(XBOX_CONSOLE_TARGET STREQUAL scarlett )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(362):  elseif(XBOX_CONSOLE_TARGET STREQUAL xboxone )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(364):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(365):  set(Z_VCPKG_TARGET_TRIPLET_PLAT windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(375):  if(EMSCRIPTEN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(380):  set(VCPKG_TARGET_TRIPLET -windows CACHE STRING Vcpkg target triplet (ex. x86-windows) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(381):  set(Z_VCPKG_TOOLCHAIN_DIR C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(384):  set(Z_VCPKG_ROOT_DIR_CANDIDATE C:/vcpkg/scripts/buildsystems )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(385):  while(NOT DEFINED Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(399):  unset(Z_VCPKG_ROOT_DIR_CANDIDATE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(401):  if(NOT Z_VCPKG_ROOT_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(405):  if(DEFINED VCPKG_INSTALLED_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(406):  set(Z_VCPKG_INSTALLED_DIR_INITIAL_VALUE C:/vcpkg/installed )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(415):  set(VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(418):  set(_VCPKG_INSTALLED_DIR C:/vcpkg/installed CACHE PATH The directory which contains the installed libraries for each triplet FORCE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(422):  function(z_vcpkg_add_vcpkg_to_cmake_path list suffix )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(437):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_PREFIX_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_PREFIX_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_PREFIX_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(438):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_LIBRARY_PATH /lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows/lib/manual-link C:/vcpkg/installed/x64-windows/debug/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_LIBRARY_PATH 0 C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_LIBRARY_PATH C:/vcpkg/installed/x64-windows/debug/lib/manual-link;C:/vcpkg/installed/x64-windows/lib/manual-link PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(439):  z_vcpkg_add_vcpkg_to_cmake_path(CMAKE_FIND_ROOT_PATH  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(423):  set(vcpkg_paths C:/vcpkg/installed/x64-windows C:/vcpkg/installed/x64-windows/debug )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(427):  if(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE MATCHES ^[Dd][Ee][Bb][Uu][Gg]$ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(428):  list(REVERSE vcpkg_paths )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(430):  if(VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(432):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(433):  list(INSERT CMAKE_FIND_ROOT_PATH 0 C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(435):  set(CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(441):  if(NOT VCPKG_PREFER_SYSTEM_LIBS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(442):  set(CMAKE_FIND_FRAMEWORK LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(443):  set(CMAKE_FIND_APPBUNDLE LAST )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(450):  if(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_LIBRARY STREQUAL ONLY OR CMAKE_FIND_ROOT_PATH_MODE_PACKAGE STREQUAL ONLY )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(456):  set(VCPKG_CMAKE_FIND_ROOT_PATH C:/vcpkg/installed/x64-windows/debug;C:/vcpkg/installed/x64-windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(459):  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(460):  set(Z_VCPKG_EXECUTABLE C:/vcpkg/vcpkg.exe )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(461):  set(Z_VCPKG_BOOTSTRAP_SCRIPT C:/vcpkg/bootstrap-vcpkg.bat )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(467):  if(VCPKG_MANIFEST_MODE AND VCPKG_MANIFEST_INSTALL AND NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE AND NOT Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(561):  option(VCPKG_SETUP_CMAKE_PROGRAM_PATH Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(562):  set(VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(563):  if(DEFINED VCPKG_HOST_TRIPLET AND NOT VCPKG_HOST_TRIPLET STREQUAL  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(566):  cmake_dependent_option(VCPKG_USE_HOST_TOOLS Setup CMAKE_PROGRAM_PATH to use host tools ON VCPKG_CAN_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(51):  cmake_policy(GET CMP0127 _CDO_CMP0127 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(54):  if(VCPKG_USE_HOST_TOOLS_ISSET MATCHES ^VCPKG_USE_HOST_TOOLS_ISSET$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(55):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(56):  if(xx STREQUAL xNEWx )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(65):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(66):  foreach(d VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(67):  string(REGEX REPLACE  + ; CMAKE_DEPENDENT_OPTION_DEP VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(68):  if(VCPKG_CAN_USE_HOST_TOOLS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(69):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(70):  set(VCPKG_USE_HOST_TOOLS_AVAILABLE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(74):  if(VCPKG_USE_HOST_TOOLS_AVAILABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(77):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(78):  if(VCPKG_USE_HOST_TOOLS MATCHES ^VCPKG_USE_HOST_TOOLS$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(82):  set(VCPKG_USE_HOST_TOOLS OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(87):  if(xx STREQUAL xx AND xVCPKG_CAN_USE_HOST_TOOLSx MATCHES [^A-Za-z0-9_.; ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDependentOption.cmake(91):  unset(_CDO_CMP0127 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(567):  unset(VCPKG_CAN_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(569):  if(VCPKG_SETUP_CMAKE_PROGRAM_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(570):  set(tools_base_path C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(571):  if(VCPKG_USE_HOST_TOOLS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(574):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(575):  file(GLOB Z_VCPKG_TOOLS_DIRS LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(576):  file(GLOB Z_VCPKG_TOOLS_FILES LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/* )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(577):  file(GLOB Z_VCPKG_TOOLS_DIRS_BIN LIST_DIRECTORIES true C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(578):  file(GLOB Z_VCPKG_TOOLS_FILES_BIN LIST_DIRECTORIES false C:/vcpkg/installed/x64-windows/tools/*/bin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(579):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(580):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS_BIN   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(581):  string(REPLACE /bin  Z_VCPKG_TOOLS_DIRS_TO_REMOVE  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(582):  list(REMOVE_ITEM Z_VCPKG_TOOLS_DIRS   )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(583):  list(APPEND Z_VCPKG_TOOLS_DIRS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(584):  foreach(Z_VCPKG_TOOLS_DIR IN LISTS Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/flatbuffers )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(585):  list(APPEND CMAKE_PROGRAM_PATH C:/vcpkg/installed/x64-windows/tools/pkgconf )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(587):  unset(Z_VCPKG_TOOLS_DIR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(588):  unset(Z_VCPKG_TOOLS_DIRS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(589):  unset(Z_VCPKG_TOOLS_FILES )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(590):  unset(Z_VCPKG_TOOLS_DIRS_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(591):  unset(Z_VCPKG_TOOLS_FILES_BIN )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(592):  unset(Z_VCPKG_TOOLS_DIRS_TO_REMOVE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(593):  unset(tools_base_path )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(596):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(598):  function(add_executable )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(639):  function(add_library )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(671):  function(x_vcpkg_install_local_dependencies )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(720):  if(X_VCPKG_APPLOCAL_DEPS_INSTALL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(768):  option(VCPKG_TRACE_FIND_PACKAGE Trace calls to find_package() OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(769):  if(NOT DEFINED VCPKG_OVERRIDE_FIND_PACKAGE_NAME )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(770):  set(VCPKG_OVERRIDE_FIND_PACKAGE_NAME find_package )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(775):  set(z_vcpkg_find_package_backup_id 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(776):  macro(find_package z_vcpkg_find_package_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(914):  cmake_policy(PUSH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(915):  cmake_policy(VERSION 3.16 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(917):  set(VCPKG_TOOLCHAIN ON )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(918):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(919):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(920):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(921):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(922):  set(Z_VCPKG_UNUSED  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(925):  if(NOT Z_VCPKG_CMAKE_IN_TRY_COMPILE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(936):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(937):  set(VCPKG_APPLOCAL_DEPS OFF )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(940):  if(Z_VCPKG_HAS_FATAL_ERROR )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(944):  cmake_policy(POP )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Windows-Initialize OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-Initialize.cmake(1):  set(WIN32 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 19.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX26_COMPILE_FEATURES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_PLATFORM_ID Windows )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_ID  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(25):  set(MSVC_CXX_ARCHITECTURE_ID x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(27):  set(CMAKE_AR C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/lib.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_AR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(29):  set(CMAKE_RANLIB : )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(31):  set(CMAKE_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(32):  set(CMAKE_LINKER_LINK C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(33):  set(CMAKE_LINKER_LLD lld-link )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_LINKER C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/HostX64/x64/link.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_LINKER_ID MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.44.35215.0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(38):  set(CMAKE_MT C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(39):  set(CMAKE_TAPI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(40):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_ABI_COMPILED TRUE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(47):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(48):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(49):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(51):  foreach(lang IN ITEMS C OBJC OBJCXX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_C_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJC_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(52):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(64):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(65):  set(CMAKE_CXX_COMPILER_ABI  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(70):  set(CMAKE_SIZEOF_VOID_P 8 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(73):  if(CMAKE_CXX_COMPILER_ABI )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(82):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(90):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(91):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(92):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(93):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(94):  set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(96):  set(CMAKE_CXX_COMPILER_IMPORT_STD  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeCXXCompiler.cmake(98):  set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE Unsupported generator: Visual Studio 17 2022 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(81):  if(NOT DEFINED CMAKE_EXPORT_BUILD_DATABASE AND CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(95):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(187):  if(NOT DEFINED CMAKE_INSTALL_PREFIX AND NOT DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(189):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(192):  if(DEFINED ENV{CMAKE_INSTALL_PREFIX} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(195):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(198):  if(CMAKE_HOST_UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(201):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(202):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(102):  if(Visual Studio 17 2022 MATCHES (Win64|IA64) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(104):  elseif(x64 MATCHES x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(105):  set(arch_hint x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(118):  if(NOT arch_hint )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(140):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(142):  if(C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(146):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(148):  if(C:\Program Files STREQUAL C:\Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(151):  if(NOT x64 STREQUAL x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(171):  if(NOT C:\Program Files STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(172):  file(TO_CMAKE_PATH C:\Program Files _base )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(179):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(203):  set(CMAKE_INSTALL_PREFIX C:/Program Files/CMAKE_TRY_COMPILE CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(206):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(212):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeGenericSystem.cmake(214):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(1):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(2):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(3):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(4):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(6):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(7):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(9):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(10):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(11):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(12):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(13):  set(CMAKE_DL_LIBS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(14):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(16):  set(CMAKE_FIND_LIBRARY_PREFIXES  lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(20):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.lib .lib .a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(28):  if(CMAKE_GENERATOR MATCHES Borland )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(35):  if(CMAKE_GENERATOR MATCHES NMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows.cmake(40):  include(Platform/WindowsPaths )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31 PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files/CMAKE_TRY_COMPILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files/CMAKE_TRY_COMPILE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/CMAKE_TRY_COMPILE/bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin /bin )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(59):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(60):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(4):  include(Compiler/MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(5):  if(__COMPILER_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(8):  set(__COMPILER_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(10):  macro(__compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(5):  __compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(11):  set(CMAKE_CXX_CLANG_TIDY_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(12):  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE_DRIVER_MODE cl )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(13):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -WX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(16):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.05 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(17):  set(CMAKE_CXX_COMPILE_OPTIONS_JMC -JMC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(21):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30036.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(22):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -external:I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC.cmake(23):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX_WARNING -external:W0  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(7):  include(Compiler/CMakeCommonCompilerMacros )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(146):  macro(cmake_record_cuda_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(186):  macro(cmake_record_hip_compile_features )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(205):  function(cmake_create_cxx_import_std std variable )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(9):  if(( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0.24215.1 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 19.10 ) OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.10.25017 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(17):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(18):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(19):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(20):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(21):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std:c++14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(23):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.11.25505 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(24):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(25):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(26):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(27):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std:c++17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(33):  set(CMAKE_CXX_STANDARD_LATEST 17 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(35):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.29.30129 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(36):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(37):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std:c++20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(38):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(39):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std:c++latest )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(40):  set(CMAKE_CXX_STANDARD_LATEST 23 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(47):  __compiler_check_default_language_standard(CXX 19.0 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 19.0;14; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 19.0 14  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT OFF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(93):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(94):  string(CONCAT CMAKE_CXX_SCANDEP_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> <SOURCE> -nologo -TP  -showIncludes  -scanDependencies <DYNDEP_FILE>  -Fo<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(99):  set(CMAKE_CXX_SCANDEP_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(100):  set(CMAKE_CXX_MODULE_MAP_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(101):  set(CMAKE_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Compiler/MSVC-CXX.cmake(102):  set(CMAKE_CXX_MODULE_BMI_ONLY_FLAG -ifcOnly;-ifcOutput;<OBJECT> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-cl-AMD64 OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(1):  include(Platform/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(6):  if(__WINDOWS_MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(9):  set(__WINDOWS_MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(11):  set(CMAKE_LIBRARY_PATH_FLAG -LIBPATH: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(12):  set(CMAKE_LINK_LIBRARY_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(13):  set(MSVC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(19):  if(NOT DEFINED CMAKE_LINKER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(23):  if(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(25):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(26):  set(CMAKE_CL_NOLOGO /nologo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(29):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(31):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(33):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(34):  set(_PLATFORM_LINK_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(37):  set(CMAKE_SUPPORT_WINDOWS_EXPORT_ALL_SYMBOLS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(38):  if(NOT CMAKE_NO_BUILD_TYPE AND CMAKE_GENERATOR MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(39):  set(CMAKE_NO_BUILD_TYPE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(42):  if(Visual Studio 17 2022 MATCHES Visual Studio )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(43):  set(MSVC_IDE 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(48):  if(NOT MSVC_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(49):  if(x STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(51):  elseif(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(52):  set(_compiler_version 19.44.35215.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(66):  if(19.44.35215.0 MATCHES ^([0-9]+)\.([0-9]+) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(67):  math(EXPR MSVC_VERSION 19*100 + 44 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(72):  if(MSVC_VERSION GREATER_EQUAL 1930 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(74):  set(MSVC_TOOLSET_VERSION 143 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(103):  set(MSVC10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(104):  set(MSVC11 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(105):  set(MSVC12 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(106):  set(MSVC14 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(107):  set(MSVC60 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(108):  set(MSVC70 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(109):  set(MSVC71 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(110):  set(MSVC80 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(111):  set(MSVC90 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(112):  set(CMAKE_COMPILER_2005 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(113):  set(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(114):  if(NOT 19.44.35215.0 VERSION_LESS 20 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(116):  elseif(NOT 19.44.35215.0 VERSION_LESS 19 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(117):  set(MSVC14 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(139):  if(MSVC_C_ARCHITECTURE_ID MATCHES 64 OR MSVC_CXX_ARCHITECTURE_ID MATCHES 64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(140):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(144):  if(CMAKE_FORCE_WIN64 OR CMAKE_FORCE_IA64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(145):  set(CMAKE_CL_64 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(148):  if(1944 GREATER 1599 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(149):  set(MSVC_INCREMENTAL_DEFAULT ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(153):  set(CMAKE_BUILD_TYPE_INIT Debug )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(156):  foreach(lang C CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_C_ARCHITECTURE_FAMILY  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_C_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(157):  set(_MSVC_CXX_ARCHITECTURE_FAMILY x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(158):  if(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(160):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(162):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(164):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY MATCHES ^SH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(169):  cmake_policy(GET CMP0117 __WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(170):  if(__WINDOWS_MSVC_CMP0117 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(171):  set(_GR  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(175):  unset(__WINDOWS_MSVC_CMP0117 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(177):  if(WINCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(215):  elseif(WINDOWS_PHONE OR WINDOWS_STORE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(228):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(240):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(241):  set(_PLATFORM_DEFINES /DWIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(242):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(245):  if(_MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM OR _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(247):  elseif(MSVC_VERSION GREATER 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(248):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(252):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(253):  set(_RTC1 /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(254):  set(_FLAGS_CXX  /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(256):  set(CMAKE_C_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(263):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(267):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(271):  if(MSVC_VERSION LESS 1310 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(277):  unset(_GR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(279):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(282):  set(CMAKE_LINK_DEF_FILE_FLAG /DEF: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(284):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(296):  elseif(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(297):  if(MSVC_CXX_ARCHITECTURE_ID MATCHES ^ARMV.I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(299):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(301):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(303):  elseif(_MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(305):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(306):  set(_MACHINE_ARCH_FLAG /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(314):  set(MSVC_INCREMENTAL_YES_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(315):  if(NOT WINDOWS_PHONE AND NOT WINDOWS_STORE AND NOT CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(316):  if(NOT MSVC_INCREMENTAL_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(318):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(319):  set(MSVC_INCREMENTAL_YES_FLAG /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(323):  foreach(t EXE SHARED MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(324):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(325):  if(CMAKE_COMPILER_SUPPORTS_PDBTYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(328):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(329):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(330):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT  /debug /INCREMENTAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(333):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(334):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT  /INCREMENTAL:NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(337):  if(( _MSVC_C_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) OR ( _MSVC_CXX_ARCHITECTURE_FAMILY STREQUAL ARM64EC ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(339):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(340):  string(APPEND CMAKE_STATIC_LINKER_FLAGS_INIT  /machine:x64 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(342):  unset(_MACHINE_ARCH_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(344):  cmake_policy(GET CMP0091 __WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(345):  if(__WINDOWS_MSVC_CMP0091 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(346):  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT MultiThreaded$<$<CONFIG:Debug>:Debug>DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(350):  unset(__WINDOWS_MSVC_CMP0091 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(352):  cmake_policy(GET CMP0141 __WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(353):  if(__WINDOWS_MSVC_CMP0141 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(355):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(356):  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(358):  unset(__WINDOWS_MSVC_CMP0141 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(361):  macro(__windows_compiler_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(520):  macro(__windows_compiler_msvc_enable_rc flags )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(2):  set(_COMPILE_CXX  /TP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(3):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(4):  set(_FS_CXX  /FS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(6):  __windows_compiler_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(362):  if(NOT MSVC_VERSION LESS 1400 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(364):  set(_CMAKE_VS_LINK_DLL <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(365):  set(_CMAKE_VS_LINK_EXE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> --  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(367):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsKernelModeDriver )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(369):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(370):  set(_DLL_DRIVER /dll )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(372):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(374):  unset(_DLL_DRIVER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(376):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E vs_link_dll --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /dll /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <LINK_FLAGS> <LINK_LIBRARIES>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(377):  set(CMAKE_CXX_CREATE_STATIC_LIBRARY <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(379):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /Fo<OBJECT> /Fd<TARGET_COMPILE_PDB> /FS -c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(381):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> > <PREPROCESSED_SOURCE>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(383):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER>  /nologo /TP <DEFINES> <INCLUDES> <FLAGS> /FoNUL /FAs /Fa<ASSEMBLY_SOURCE> /c <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(386):  set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(387):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E vs_link_exe --msvc-ver=1944 --intdir=<OBJECT_DIR> --rc=<CMAKE_RC_COMPILER> --mt=<CMAKE_MT> --manifests <MANIFESTS> -- <CMAKE_LINKER> /nologo <OBJECTS>  /out:<TARGET> /implib:<TARGET_IMPLIB> /pdb:<TARGET_PDB> /version:<TARGET_VERSION_MAJOR>.<TARGET_VERSION_MINOR> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(390):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(393):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(394):  set(CMAKE_CXX_CREATE_WIN32_EXE /subsystem:windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(395):  set(CMAKE_CXX_CREATE_CONSOLE_EXE /subsystem:console )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(398):  set(CMAKE_PCH_EXTENSION .pch )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(399):  set(CMAKE_LINK_PCH ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(400):  if(CMAKE_CXX_COMPILER_ID STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(410):  elseif(MSVC_VERSION GREATER_EQUAL 1913 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(412):  set(CMAKE_PCH_PROLOGUE #pragma system_header )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(414):  if(NOT MSVC STREQUAL Clang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(415):  set(CMAKE_PCH_COPY_COMPILE_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(417):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH /Yu<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(418):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH /Yc<PCH_HEADER> /Fp<PCH_FILE> /FI<PCH_HEADER> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(420):  if(xMSVC STREQUAL xMSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(421):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(422):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(424):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO /GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(425):  set(CMAKE_CXX_LINK_OPTIONS_IPO /INCREMENTAL:NO /LTCG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(426):  string(REPLACE <LINK_FLAGS>  /LTCG <LINK_FLAGS>  CMAKE_CXX_CREATE_STATIC_LIBRARY_IPO <CMAKE_AR> /nologo <LINK_FLAGS> /out:<TARGET> <OBJECTS>  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(448):  if(xCXX STREQUAL xC OR xCXX STREQUAL xCXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(450):  if(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(451):  set(_MDd  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(452):  set(_MD  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(458):  cmake_policy(GET CMP0092 _cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(459):  if(_cmp0092 STREQUAL NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(460):  set(_W3  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(461):  set(_Wall  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(466):  unset(_cmp0092 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(468):  if(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT_DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(470):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(471):  set(_Zi  /Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(474):  if(CMAKE_VS_PLATFORM_TOOLSET MATCHES v[0-9]+_clang_.* )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(482):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(483):  string(APPEND CMAKE_CXX_FLAGS_INIT  /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(484):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  /Zi /Ob0 /Od /RTC1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(485):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  /O2 /Ob2 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(486):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  /Zi /O2 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(487):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  /O1 /Ob1 /DNDEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(489):  unset(_Wall )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(490):  unset(_W3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(491):  unset(_MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(492):  unset(_MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(493):  unset(_Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(495):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreaded -MT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(496):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDLL -MD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(497):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebug -MTd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(498):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_RUNTIME_LIBRARY_MultiThreadedDebugDLL -MDd )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(499):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded -Z7 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(500):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_ProgramDatabase -Zi )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(501):  set(CMAKE_CXX_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_EditAndContinue -ZI )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(503):  set(CMAKE_CXX_LINKER_SUPPORTS_PDB ON )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(505):  __windows_compiler_msvc_enable_rc(/DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(521):  if(NOT CMAKE_RC_COMPILER_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(522):  set(CMAKE_RC_COMPILER_INIT rc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(524):  if(NOT CMAKE_RC_FLAGS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(526):  string(REPLACE  /D  -D fixed_flags  /DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(527):  string(APPEND CMAKE_RC_FLAGS_INIT   -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(529):  if(NOT CMAKE_RC_FLAGS_DEBUG_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(530):  string(APPEND CMAKE_RC_FLAGS_DEBUG_INIT  -D_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(533):  enable_language(RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .res )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/3.31.6-msvc6/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(13):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(14):  get_filename_component(CMAKE_BASE_NAME C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe NAME_WE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-rc.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-rc OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT    -DWIN32  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    -DWIN32  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS -DWIN32 CACHE STRING Flags for Windows Resource Compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -D_DEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG -D_DEBUG CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(45):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> /fo <OBJECT> <SOURCE> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(49):  set(CMAKE_RC_USE_LINKER_INFORMATION FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeRCInformation.cmake(52):  set(CMAKE_RC_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(534):  if(NOT DEFINED CMAKE_NINJA_CMCLDEPS_RC AND CMAKE_HOST_SYSTEM_NAME STREQUAL Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(535):  set(CMAKE_NINJA_CMCLDEPS_RC 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(508):  if(MSVC_VERSION GREATER 1300 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(509):  set(CMAKE_DEPFILE_FLAGS_CXX /showIncludes )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(510):  set(CMAKE_CXX_DEPFILE_FORMAT msvc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(514):  set(CMAKE_CXX_USING_LINKER_SYSTEM C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(515):  set(CMAKE_CXX_USING_LINKER_LLD lld-link )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(516):  set(CMAKE_CXX_USING_LINKER_MSVC C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/link.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC.cmake(517):  set(CMAKE_CXX_USING_LINKER_MODE TOOL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Windows-MSVC-CXX.cmake(8):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(69):  foreach(f IN LISTS CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(72):  unset(CMAKE_CXX_ABI_FILES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_CXX_FLAGS_INIT   /DWIN32 /D_WINDOWS /EHsc )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(100):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   /DWIN32 /D_WINDOWS /EHsc _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc CACHE STRING Flags used by the CXX compiler during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /Ob0 /Od /RTC1 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O2 /Ob2 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE /O2 /Ob2 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /O1 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL /O1 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /Zi /O2 /Ob1 /DNDEBUG _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO /Zi /O2 /Ob1 /DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(102):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(103):  set(CMAKE_CXX_STANDARD_LIBRARIES kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib CACHE STRING Libraries linked by default with all C++ applications. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(105):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(113):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(118):  include(CMakeCommonLanguageInclude )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of modules during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /INCREMENTAL:NO _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL /INCREMENTAL:NO CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  /debug /INCREMENTAL _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO /debug /INCREMENTAL CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  /machine:x64 _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS /machine:x64 CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(19):  list(APPEND _CONFIGS Debug;Release;MinSizeRel;RelWithDebInfo )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(27):  macro(_cmake_common_language_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(119):  _cmake_common_language_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(28):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(29):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(32):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(36):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(39):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(40):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(42):  if(NOT DEFINED CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(43):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(46):  if(NOT DEFINED CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(47):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(50):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(51):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(54):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(58):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(62):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(63):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(66):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(67):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(70):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(71):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(74):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(75):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(78):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(79):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(82):  if(NOT DEFINED CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(86):  if(NOT DEFINED CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(87):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(90):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(91):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(94):  if(NOT DEFINED CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(95):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(101):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(102):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(103):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(106):  if(NOT DEFINED CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(109):  if(NOT DEFINED CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(110):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(113):  foreach(type IN ITEMS SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(114):  if(NOT DEFINED CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(115):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(118):  if(NOT DEFINED CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCommonLanguageInclude.cmake(119):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(148):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(154):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(161):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(162):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(164):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(165):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(167):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(172):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(177):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(182):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(186):  set(CMAKE_CXX_USE_LINKER_INFORMATION TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeCXXInformation.cmake(188):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(11):  include(Internal/CMakeCommonLinkerInformation )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(8):  macro(_cmake_common_linker_platform_flags lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(13):  set(_INCLUDED_FILE 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(16):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(17):  include(Linker/MSVC-CXX OPTIONAL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(21):  if(CMAKE_SYSTEM_PROCESSOR AND CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(22):  include(Platform/Windows-MSVC-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(27):  if(CMAKE_CXX_COMPILER_LINKER_ID )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(28):  include(Platform/Linker/Windows-MSVC-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(4):  include(Platform/Linker/Windows-MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(6):  include_guard()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(8):  block(SCOPE_FOR POLICIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(9):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(12):  if(MSVC_VERSION GREATER 1900 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(14):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(15):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(16):  set(CMAKE_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(19):  macro(__windows_linker_msvc lang )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC-CXX.cmake(6):  __windows_linker_msvc(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(20):  set(CMAKE_CXX_PLATFORM_LINKER_ID MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(21):  set(CMAKE_CXX_LINK_LIBRARIES_PROCESSING ORDER=FORWARD DEDUPLICATION=ALL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(24):  if(DEFINED CMAKE_CXX_COMPILER_LINKER_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(25):  if(CMAKE_CXX_COMPILER_LINKER_VERSION GREATER_EQUAL 14.10 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(27):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:/WHOLEARCHIVE:<LIBRARY> )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(28):  set(CMAKE_CXX_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Platform/Linker/Windows-MSVC.cmake(29):  set(CMAKE_CXX_LINK_LIBRARY_WHOLE_ARCHIVE_ATTRIBUTES LIBRARY_TYPE=STATIC DEDUPLICATION=YES OVERRIDE=DEFAULT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(37):  _cmake_common_linker_platform_flags(CXX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCommonLinkerInformation.cmake(10):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeCXXLinkerInformation.cmake(39):  set(CMAKE_CXX_LINKER_INFORMATION_LOADED 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(7):  set(CMAKE_VERBOSE_MAKEFILE 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(8):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(9):  set(CMAKE_CXX_FLAGS /DWIN32 /D_WINDOWS /EHsc -DCHECK_FUNCTION_EXISTS=pthread_create )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(10):  set(CMAKE_CXX_FLAGS_DEBUG /Zi /Ob0 /Od /RTC1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(11):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(12):  set(CMAKE_EXE_LINKER_FLAGS /machine:x64  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(13):  include_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(14):  set(CMAKE_SUPPRESS_REGENERATION 1 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(15):  link_directories( )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(16):  cmake_policy(SET CMP0065 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(17):  cmake_policy(SET CMP0083 NEW )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(18):  cmake_policy(SET CMP0155 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(19):  cmake_policy(SET CMP0157 OLD )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(20):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(8):  if(NOT APPLE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/HeaderpadWorkaround.cmake(9):  return()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(21):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(22):  add_executable(cmTC_57696 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(599):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG cmTC_57696 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;cmTC_57696 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;cmTC_57696 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(600):  _add_executable(cmTC_57696 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(601):  set(target_name cmTC_57696 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(603):  list(FIND ARGV IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(604):  list(FIND ARGV ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(605):  list(FIND ARGV MACOSX_BUNDLE MACOSX_BUNDLE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(606):  if(IMPORTED_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(607):  if(VCPKG_APPLOCAL_DEPS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(634):  set_target_properties(cmTC_57696 PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(635):  set_target_properties(cmTC_57696 PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(23):  target_sources(cmTC_57696 PRIVATE C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CheckFunctionExists.cxx )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(26):  file(GENERATE OUTPUT C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/cmTC_57696_$<UPPER_CASE:$<CONFIG>>_loc CONTENT $<TARGET_FILE:cmTC_57696> )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(28):  set_property(TARGET cmTC_57696 PROPERTY CXX_EXTENSIONS OFF )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(29):  set_property(TARGET cmTC_57696 PROPERTY CXX_STANDARD 14 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(30):  set_property(TARGET cmTC_57696 PROPERTY CXX_STANDARD_REQUIRED ON )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/build-trace/CMakeFiles/CMakeScratch/TryCompile-9fhwxf/CMakeLists.txt(31):  target_link_libraries(cmTC_57696 pthread )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(87):  unset(_cle_source )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(88):  unset(_CLE_LINK_DIRECTORIES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(90):  if(CMAKE_HAVE_PTHREAD_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(95):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(96):  if(NOT CMAKE_REQUIRED_QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(97):  message(CHECK_FAIL not found )
-- Looking for pthread_create in pthread - not found
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake(99):  set(CMAKE_HAVE_PTHREAD_CREATE  CACHE INTERNAL Have library pthread )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(113):  if(CMAKE_HAVE_PTHREAD_CREATE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(178):  if(NOT THREADS_PREFER_PTHREAD_FLAG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(179):  _threads_check_flag_pthread()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(123):  if(NOT Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(126):  if(MSVC )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(128):  set(THREADS_HAVE_PTHREAD_ARG FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(152):  if(THREADS_HAVE_PTHREAD_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(182):  if(CMAKE_THREAD_LIBS_INIT OR CMAKE_HAVE_LIBC_PTHREAD )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(187):  if(CMAKE_SYSTEM_NAME MATCHES Windows )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(188):  set(CMAKE_USE_WIN32_THREADS_INIT 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(189):  set(Threads_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(192):  if(CMAKE_USE_PTHREADS_INIT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(224):  set(CMAKE_REQUIRED_QUIET  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(225):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(213):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(33):  function(find_package_message pkg msg details )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(216):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(218):  cmake_policy(SET CMP0012 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(220):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(224):  macro(_FPHSA_FAILURE_MESSAGE _msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(243):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(278):  function(FIND_PACKAGE_CHECK_VERSION version result )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(378):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(614):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(226):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(Threads DEFAULT_MSG Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(381):  set(options CONFIG_MODE HANDLE_COMPONENTS NAME_MISMATCHED HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(382):  set(oneValueArgs FAIL_MESSAGE REASON_FAILURE_MESSAGE VERSION_VAR FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(383):  set(multiValueArgs REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(386):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(387):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(389):  unset(FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(390):  if(DEFINED FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(406):  if(-1 EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(407):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(408):  set(FPHSA_REQUIRED_VARS Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(409):  set(FPHSA_VERSION_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(434):  if(DEFINED FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(438):  if(DEFINED CMAKE_FIND_PACKAGE_NAME AND NOT FPHSA_NAME_MISMATCHED AND NOT _NAME STREQUAL CMAKE_FIND_PACKAGE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(449):  if(Threads_FIND_VERSION_RANGE AND NOT FPHSA_HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(457):  set(_CMAKE_FPHSA_PACKAGE_NAME Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(461):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(462):  set(FPHSA_FAIL_MESSAGE Could NOT find Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(465):  if(FPHSA_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(466):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(469):  string(TOUPPER Threads _NAME_UPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(470):  string(TOLOWER Threads _NAME_LOWER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(472):  if(FPHSA_FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(480):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(481):  set(_FOUND_VAR THREADS_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(486):  set(MISSING_VARS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(487):  set(DETAILS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(489):  set(FPHSA_FOUND_Threads TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(490):  foreach(_CURRENT_VAR Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(491):  if(NOT Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(494):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(495):  string(APPEND DETAILS [TRUE] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(498):  if(FPHSA_FOUND_Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(499):  set(Threads_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(500):  set(THREADS_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(507):  unset(FOUND_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(508):  unset(MISSING_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(510):  if(FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(538):  set(VERSION_MSG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(539):  set(VERSION_OK TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(543):  if(DEFINED Threads_FIND_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(568):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(570):  if(DEFINED  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(575):  if(VERSION_OK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(576):  string(APPEND DETAILS [v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(583):  if(Threads_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(584):  FIND_PACKAGE_MESSAGE(Threads Found Threads: TRUE   [TRUE][v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(35):  if(NOT Threads_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(36):  string(REPLACE 
  details [TRUE][v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(37):  set(DETAILS_VAR FIND_PACKAGE_MESSAGE_DETAILS_Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(38):  if(NOT [TRUE][v()] STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(40):  string(STRIP Found Threads: TRUE   msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(41):  message(STATUS Found Threads: TRUE )
-- Found Threads: TRUE
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(45):  set(FIND_PACKAGE_MESSAGE_DETAILS_Threads [TRUE][v()] CACHE INTERNAL Details about finding Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(609):  set(Threads_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(610):  set(THREADS_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(228):  if(THREADS_FOUND AND NOT TARGET Threads::Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(229):  add_library(Threads::Threads INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG Threads::Threads )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Threads::Threads )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Threads::Threads;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Threads::Threads;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;Threads::Threads;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(Threads::Threads;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name Threads::Threads )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(231):  if(THREADS_HAVE_PTHREAD_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindThreads.cmake(237):  if(CMAKE_THREAD_LIBS_INIT )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_Threads_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_Threads_37c35af0fe428d476505d3515ef07aa12769dfa607841aee9f00a63375703449_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_Threads_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT Threads_FOUND )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(37):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(38):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(39):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(40):  foreach(_cmake_expected_target IN ITEMS opencv_core opencv_flann opencv_imgproc opencv_ml opencv_photo opencv_video opencv_features2d opencv_imgcodecs opencv_videoio opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(41):  list(APPEND _cmake_expected_targets opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(42):  if(TARGET opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(45):  list(APPEND _cmake_targets_not_defined opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(48):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(49):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(57):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(62):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(63):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(64):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(68):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake PATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(69):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/opencv4 PATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(70):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(71):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(76):  add_library(opencv_core SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_core;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_core;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_core;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_core;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(79):  add_library(opencv_flann SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_flann )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_flann )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_flann;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_flann;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_flann;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_flann;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_flann )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(81):  set_target_properties(opencv_flann PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(86):  add_library(opencv_imgproc SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_imgproc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgproc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgproc;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgproc;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_imgproc;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_imgproc;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_imgproc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(88):  set_target_properties(opencv_imgproc PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(93):  add_library(opencv_ml SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_ml )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_ml )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_ml;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_ml;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_ml;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_ml;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_ml )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(95):  set_target_properties(opencv_ml PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(100):  add_library(opencv_photo SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_photo )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_photo )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_photo;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_photo;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_photo;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_photo;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_photo )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(102):  set_target_properties(opencv_photo PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_imgproc;opencv_core;opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(107):  add_library(opencv_video SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_video;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_video;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_video;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_video;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(109):  set_target_properties(opencv_video PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_imgproc;opencv_core;opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(114):  add_library(opencv_features2d SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_features2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_features2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_features2d;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_features2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_features2d;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_features2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_features2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(116):  set_target_properties(opencv_features2d PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_flann;opencv_imgproc;opencv_core;opencv_flann;opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(121):  add_library(opencv_imgcodecs SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_imgcodecs )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgcodecs )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgcodecs;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_imgcodecs;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_imgcodecs;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_imgcodecs;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_imgcodecs )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(123):  set_target_properties(opencv_imgcodecs PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_imgproc;opencv_core;opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(128):  add_library(opencv_videoio SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_videoio )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_videoio )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_videoio;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_videoio;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_videoio;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_videoio;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_videoio )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(130):  set_target_properties(opencv_videoio PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_imgproc;opencv_imgcodecs;opencv_core;opencv_imgproc;opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(135):  add_library(opencv_highgui SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG opencv_highgui )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_highgui )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_highgui;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;opencv_highgui;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;opencv_highgui;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(opencv_highgui;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name opencv_highgui )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(137):  set_target_properties(opencv_highgui PROPERTIES INTERFACE_LINK_LIBRARIES opencv_core;opencv_imgproc;opencv_imgcodecs;opencv_videoio;opencv_core;opencv_imgproc;opencv_imgcodecs;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(142):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-*.cmake )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(143):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(144):  include(C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(9):  set_property(TARGET opencv_core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(10):  set_target_properties(opencv_core PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_core4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_core4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(15):  list(APPEND _cmake_import_check_targets opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(16):  list(APPEND _cmake_import_check_files_for_opencv_core C:/vcpkg/installed/x64-windows/debug/lib/opencv_core4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_core4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(19):  set_property(TARGET opencv_flann APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(20):  set_target_properties(opencv_flann PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_flann4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_flann4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(25):  list(APPEND _cmake_import_check_targets opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(26):  list(APPEND _cmake_import_check_files_for_opencv_flann C:/vcpkg/installed/x64-windows/debug/lib/opencv_flann4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_flann4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(29):  set_property(TARGET opencv_imgproc APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(30):  set_target_properties(opencv_imgproc PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgproc4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgproc4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(35):  list(APPEND _cmake_import_check_targets opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(36):  list(APPEND _cmake_import_check_files_for_opencv_imgproc C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgproc4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgproc4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(39):  set_property(TARGET opencv_ml APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(40):  set_target_properties(opencv_ml PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_ml4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_ml4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(45):  list(APPEND _cmake_import_check_targets opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(46):  list(APPEND _cmake_import_check_files_for_opencv_ml C:/vcpkg/installed/x64-windows/debug/lib/opencv_ml4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_ml4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(49):  set_property(TARGET opencv_photo APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(50):  set_target_properties(opencv_photo PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_photo4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_photo4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(55):  list(APPEND _cmake_import_check_targets opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(56):  list(APPEND _cmake_import_check_files_for_opencv_photo C:/vcpkg/installed/x64-windows/debug/lib/opencv_photo4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_photo4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(59):  set_property(TARGET opencv_video APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(60):  set_target_properties(opencv_video PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_video4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_video4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(65):  list(APPEND _cmake_import_check_targets opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(66):  list(APPEND _cmake_import_check_files_for_opencv_video C:/vcpkg/installed/x64-windows/debug/lib/opencv_video4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_video4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(69):  set_property(TARGET opencv_features2d APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(70):  set_target_properties(opencv_features2d PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_features2d4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_features2d4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(75):  list(APPEND _cmake_import_check_targets opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(76):  list(APPEND _cmake_import_check_files_for_opencv_features2d C:/vcpkg/installed/x64-windows/debug/lib/opencv_features2d4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_features2d4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(79):  set_property(TARGET opencv_imgcodecs APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(80):  set_target_properties(opencv_imgcodecs PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgcodecs4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgcodecs4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(85):  list(APPEND _cmake_import_check_targets opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(86):  list(APPEND _cmake_import_check_files_for_opencv_imgcodecs C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgcodecs4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgcodecs4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(89):  set_property(TARGET opencv_videoio APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(90):  set_target_properties(opencv_videoio PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_videoio4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_videoio4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(95):  list(APPEND _cmake_import_check_targets opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(96):  list(APPEND _cmake_import_check_files_for_opencv_videoio C:/vcpkg/installed/x64-windows/debug/lib/opencv_videoio4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_videoio4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(99):  set_property(TARGET opencv_highgui APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(100):  set_target_properties(opencv_highgui PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/opencv_highgui4d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/opencv_highgui4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(105):  list(APPEND _cmake_import_check_targets opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(106):  list(APPEND _cmake_import_check_files_for_opencv_highgui C:/vcpkg/installed/x64-windows/debug/lib/opencv_highgui4d.lib C:/vcpkg/installed/x64-windows/debug/bin/opencv_highgui4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-debug.cmake(109):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(144):  include(C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(9):  set_property(TARGET opencv_core APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(10):  set_target_properties(opencv_core PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_core4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_core4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(15):  list(APPEND _cmake_import_check_targets opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(16):  list(APPEND _cmake_import_check_files_for_opencv_core C:/vcpkg/installed/x64-windows/lib/opencv_core4.lib C:/vcpkg/installed/x64-windows/bin/opencv_core4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(19):  set_property(TARGET opencv_flann APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(20):  set_target_properties(opencv_flann PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_flann4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_flann4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(25):  list(APPEND _cmake_import_check_targets opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(26):  list(APPEND _cmake_import_check_files_for_opencv_flann C:/vcpkg/installed/x64-windows/lib/opencv_flann4.lib C:/vcpkg/installed/x64-windows/bin/opencv_flann4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(29):  set_property(TARGET opencv_imgproc APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(30):  set_target_properties(opencv_imgproc PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_imgproc4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_imgproc4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(35):  list(APPEND _cmake_import_check_targets opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(36):  list(APPEND _cmake_import_check_files_for_opencv_imgproc C:/vcpkg/installed/x64-windows/lib/opencv_imgproc4.lib C:/vcpkg/installed/x64-windows/bin/opencv_imgproc4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(39):  set_property(TARGET opencv_ml APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(40):  set_target_properties(opencv_ml PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_ml4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_ml4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(45):  list(APPEND _cmake_import_check_targets opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(46):  list(APPEND _cmake_import_check_files_for_opencv_ml C:/vcpkg/installed/x64-windows/lib/opencv_ml4.lib C:/vcpkg/installed/x64-windows/bin/opencv_ml4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(49):  set_property(TARGET opencv_photo APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(50):  set_target_properties(opencv_photo PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_photo4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_photo4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(55):  list(APPEND _cmake_import_check_targets opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(56):  list(APPEND _cmake_import_check_files_for_opencv_photo C:/vcpkg/installed/x64-windows/lib/opencv_photo4.lib C:/vcpkg/installed/x64-windows/bin/opencv_photo4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(59):  set_property(TARGET opencv_video APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(60):  set_target_properties(opencv_video PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_video4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_video4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(65):  list(APPEND _cmake_import_check_targets opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(66):  list(APPEND _cmake_import_check_files_for_opencv_video C:/vcpkg/installed/x64-windows/lib/opencv_video4.lib C:/vcpkg/installed/x64-windows/bin/opencv_video4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(69):  set_property(TARGET opencv_features2d APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(70):  set_target_properties(opencv_features2d PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_features2d4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_features2d4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(75):  list(APPEND _cmake_import_check_targets opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(76):  list(APPEND _cmake_import_check_files_for_opencv_features2d C:/vcpkg/installed/x64-windows/lib/opencv_features2d4.lib C:/vcpkg/installed/x64-windows/bin/opencv_features2d4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(79):  set_property(TARGET opencv_imgcodecs APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(80):  set_target_properties(opencv_imgcodecs PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_imgcodecs4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_imgcodecs4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(85):  list(APPEND _cmake_import_check_targets opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(86):  list(APPEND _cmake_import_check_files_for_opencv_imgcodecs C:/vcpkg/installed/x64-windows/lib/opencv_imgcodecs4.lib C:/vcpkg/installed/x64-windows/bin/opencv_imgcodecs4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(89):  set_property(TARGET opencv_videoio APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(90):  set_target_properties(opencv_videoio PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_videoio4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_videoio4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(95):  list(APPEND _cmake_import_check_targets opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(96):  list(APPEND _cmake_import_check_files_for_opencv_videoio C:/vcpkg/installed/x64-windows/lib/opencv_videoio4.lib C:/vcpkg/installed/x64-windows/bin/opencv_videoio4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(99):  set_property(TARGET opencv_highgui APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(100):  set_target_properties(opencv_highgui PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/opencv_highgui4.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/opencv_highgui4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(105):  list(APPEND _cmake_import_check_targets opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(106):  list(APPEND _cmake_import_check_files_for_opencv_highgui C:/vcpkg/installed/x64-windows/lib/opencv_highgui4.lib C:/vcpkg/installed/x64-windows/bin/opencv_highgui4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules-release.cmake(109):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(146):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(147):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(150):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(153):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_core4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_core4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_core4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_core4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_flann OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_flann4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_flann4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_flann4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_flann4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_imgproc OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgproc4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgproc4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_imgproc4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_imgproc4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_ml OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_ml4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_ml4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_ml4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_ml4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_photo OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_photo4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_photo4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_photo4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_photo4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_video OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_video4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_video4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_video4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_video4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_features2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_features2d4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_features2d4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_features2d4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_features2d4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_imgcodecs OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_imgcodecs4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_imgcodecs4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_imgcodecs4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_imgcodecs4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_videoio OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_videoio4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_videoio4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_videoio4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_videoio4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_highgui OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/opencv_highgui4d.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/opencv_highgui4d.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/opencv_highgui4.lib )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(158):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/opencv_highgui4.dll )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_flann OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_imgproc OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_ml OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_photo OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_video OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_features2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_imgcodecs OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_videoio OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(154):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_opencv_highgui OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(157):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(171):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(172):  unset(_cmake_import_check_files_for_opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(174):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(175):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(181):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVModules.cmake(182):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(129):  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(132):  foreach(__component opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_core PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_features2d PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_flann PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_highgui PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_imgcodecs PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_imgproc PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_ml PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_photo PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_video PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(133):  if(TARGET opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(134):  set_target_properties(opencv_videoio PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(144):  if(NOT DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(145):  if(CMAKE_GENERATOR MATCHES Visual Studio OR MSVC )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(151):  set(OPENCV_MAP_IMPORTED_CONFIG RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(154):  set(__remap_warnings  )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(155):  macro(ocv_map_imported_config target )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(190):  if(NOT OpenCV_FIND_COMPONENTS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(191):  set(OpenCV_FIND_COMPONENTS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(192):  list(REMOVE_ITEM OpenCV_FIND_COMPONENTS opencv_java )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(193):  if(GTest_FOUND OR GTEST_FOUND )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(198):  set(OpenCV_WORLD_COMPONENTS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(201):  foreach(__cvcomponent opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_core __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS  opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_core __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_CORE_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_core_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_core; AND NOT TARGET opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_core IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_core PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_core PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_features2d __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_features2d __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_FEATURES2D_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_features2d_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_features2d; AND NOT TARGET opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_features2d )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_features2d IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_features2d PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_features2d PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_flann __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_flann __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_FLANN_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_flann_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_flann; AND NOT TARGET opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_flann )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_flann IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_flann PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_flann PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_highgui __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_highgui __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_HIGHGUI_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_highgui_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_highgui; AND NOT TARGET opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_highgui )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_highgui IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_highgui PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_highgui PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_imgcodecs __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_imgcodecs __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_IMGCODECS_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_imgcodecs_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_imgcodecs; AND NOT TARGET opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_imgcodecs )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_imgcodecs IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_imgcodecs PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_imgcodecs PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_imgproc __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_imgproc __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_IMGPROC_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_imgproc_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_imgproc; AND NOT TARGET opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_imgproc )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_imgproc IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_imgproc PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_imgproc PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_ml __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_ml __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_ML_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_ml_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_ml; AND NOT TARGET opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_ml )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_ml IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_ml PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_ml PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_photo __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_photo __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_PHOTO_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_photo_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_photo; AND NOT TARGET opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_photo )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_photo IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_photo PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_photo PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_video __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_video __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_VIDEO_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_video_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_video; AND NOT TARGET opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_video )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_video IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_video PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_video PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(204):  set(__original_cvcomponent opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(205):  if(NOT __cvcomponent MATCHES ^opencv_ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(208):  list(FIND OpenCV_LIB_COMPONENTS opencv_videoio __cvcomponentIdx )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(209):  if(__cvcomponentIdx LESS 0 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(227):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(231):  set(OpenCV_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(233):  string(TOUPPER opencv_videoio __cvcomponentUP )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(234):  set(OPENCV_VIDEOIO_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(235):  set(OpenCV_opencv_videoio_FOUND TRUE )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(237):  if(OpenCV_SHARED AND ;; MATCHES ;opencv_videoio; AND NOT TARGET opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(262):  if(TARGET opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(263):  ocv_map_imported_config(opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(156):  if(DEFINED OPENCV_MAP_IMPORTED_CONFIG )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(157):  get_target_property(__available_configurations opencv_videoio IMPORTED_CONFIGURATIONS )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(158):  foreach(remap RELWITHDEBINFO=!Release;MINSIZEREL=!Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config RELWITHDEBINFO )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER RELWITHDEBINFO __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;RELWITHDEBINFO; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_videoio PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(159):  if(remap MATCHES ^(.+)=(!?)([^!]+)$ )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(160):  set(__remap_config MINSIZEREL )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(161):  set(__final_config Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(162):  set(__force_flag ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(163):  string(TOUPPER Release __final_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(164):  string(TOUPPER MINSIZEREL __remap_config_upper )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(165):  if(;DEBUG;RELEASE; MATCHES ;MINSIZEREL; AND NOT ! STREQUAL ! )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(170):  if(__available_configurations AND NOT ;DEBUG;RELEASE; MATCHES ;RELEASE; )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(176):  set_target_properties(opencv_videoio PROPERTIES MAP_IMPORTED_CONFIG_MINSIZEREL Release )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(267):  if(__remap_warnings AND NOT OpenCV_FIND_QUIETLY )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(274):  set(OpenCV_LIBRARIES opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(277):  if(CMAKE_VERSION VERSION_LESS 3.1 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(281):  else()
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(282):  set(__target opencv_core )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(283):  if(TARGET opencv_world )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(286):  set(__compile_features cxx_std_11 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(287):  if(DEFINED OPENCV_COMPILE_FEATURES )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(289):  elseif(CMAKE_VERSION VERSION_LESS 3.8 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(292):  if(__compile_features )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(294):  set_target_properties(opencv_core PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_11 )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(298):  unset(__target )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(299):  unset(__compile_features )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(305):  macro(ocv_check_dependencies )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(317):  function(ocv_include_directories )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(331):  macro(ocv_include_modules )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(335):  macro(ocv_include_modules_recurse )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(339):  macro(ocv_target_link_libraries )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(344):  macro(ocv_list_filterout lst regex )
C:/vcpkg/installed/x64-windows/share/opencv4/OpenCVConfig.cmake(354):  find_package_handle_standard_args(OpenCV REQUIRED_VARS OpenCV_INSTALL_PATH VERSION_VAR OpenCV_VERSION  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(381):  set(options CONFIG_MODE HANDLE_COMPONENTS NAME_MISMATCHED HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(382):  set(oneValueArgs FAIL_MESSAGE REASON_FAILURE_MESSAGE VERSION_VAR FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(383):  set(multiValueArgs REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(386):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(387):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE REQUIRED_VARS INDEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(389):  unset(FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(390):  if(DEFINED FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(406):  if(8 EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(410):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(411):  cmake_parse_arguments(FPHSA CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS REQUIRED_VARS OpenCV_INSTALL_PATH;VERSION_VAR;OpenCV_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(413):  if(FPHSA_UNPARSED_ARGUMENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(417):  if(NOT FPHSA_FAIL_MESSAGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(418):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(423):  if(FPHSA_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(429):  if(NOT FPHSA_REQUIRED_VARS AND NOT FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(434):  if(DEFINED FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(438):  if(DEFINED CMAKE_FIND_PACKAGE_NAME AND NOT FPHSA_NAME_MISMATCHED AND NOT _NAME STREQUAL CMAKE_FIND_PACKAGE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(449):  if(OpenCV_FIND_VERSION_RANGE AND NOT FPHSA_HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(457):  set(_CMAKE_FPHSA_PACKAGE_NAME OpenCV )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(461):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(462):  set(FPHSA_FAIL_MESSAGE Could NOT find OpenCV )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(465):  if(FPHSA_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(466):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(469):  string(TOUPPER OpenCV _NAME_UPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(470):  string(TOLOWER OpenCV _NAME_LOWER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(472):  if(FPHSA_FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(480):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(481):  set(_FOUND_VAR OPENCV_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(486):  set(MISSING_VARS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(487):  set(DETAILS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(489):  set(FPHSA_FOUND_OpenCV TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(490):  foreach(_CURRENT_VAR OpenCV_INSTALL_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(491):  if(NOT OpenCV_INSTALL_PATH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(494):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(495):  string(APPEND DETAILS [C:/vcpkg/installed/x64-windows] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(498):  if(FPHSA_FOUND_OpenCV )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(499):  set(OpenCV_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(500):  set(OPENCV_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(507):  unset(FOUND_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(508):  unset(MISSING_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(510):  if(FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(538):  set(VERSION_MSG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(539):  set(VERSION_OK TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(543):  if(DEFINED OpenCV_FIND_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(568):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(570):  if(DEFINED OpenCV_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(571):  set(VERSION_MSG (found version "4.11.0") )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(575):  if(VERSION_OK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(576):  string(APPEND DETAILS [v4.11.0()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(583):  if(OpenCV_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(584):  FIND_PACKAGE_MESSAGE(OpenCV Found OpenCV: C:/vcpkg/installed/x64-windows (found version "4.11.0")  [C:/vcpkg/installed/x64-windows][v4.11.0()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(35):  if(NOT OpenCV_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(36):  string(REPLACE 
  details [C:/vcpkg/installed/x64-windows][v4.11.0()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(37):  set(DETAILS_VAR FIND_PACKAGE_MESSAGE_DETAILS_OpenCV )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(38):  if(NOT [C:/vcpkg/installed/x64-windows][v4.11.0()] STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(40):  string(STRIP Found OpenCV: C:/vcpkg/installed/x64-windows (found version "4.11.0")  msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(41):  message(STATUS Found OpenCV: C:/vcpkg/installed/x64-windows (found version "4.11.0") )
-- Found OpenCV: C:/vcpkg/installed/x64-windows (found version "4.11.0")
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(45):  set(FIND_PACKAGE_MESSAGE_DETAILS_OpenCV [C:/vcpkg/installed/x64-windows][v4.11.0()] CACHE INTERNAL Details about finding OpenCV )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(609):  set(OpenCV_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(610):  set(OPENCV_FOUND TRUE PARENT_SCOPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(901):  if(DEFINED z_vcpkg_find_package_1_backup_ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(903):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(904):  unset(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(906):  unset(z_vcpkg_find_package_1_backup_ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(26):  message(STATUS OpenCV version: 4.11.0 )
-- OpenCV version: 4.11.0
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(27):  find_package(Eigen3 CONFIG REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN CONFIG;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER Eigen3 z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(Eigen3 STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(eigen3 STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(Eigen3 CONFIG;REQUIRED )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(18):  if(3.4.0 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(56):  if(8 STREQUAL  OR  STREQUAL  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(57):  return()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(9):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/eigen3/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(11):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(20):  if(NOT TARGET Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(21):  include(C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 3.0.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(10):  cmake_policy(VERSION 3.0.0...3.29 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(22):  foreach(_cmake_expected_target IN ITEMS Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(23):  list(APPEND _cmake_expected_targets Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(24):  if(TARGET Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(27):  list(APPEND _cmake_targets_not_defined Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/eigen3 PATH )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(58):  add_library(Eigen3::Eigen INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG Eigen3::Eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Eigen3::Eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Eigen3::Eigen;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Eigen3::Eigen;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;Eigen3::Eigen;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(Eigen3::Eigen;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name Eigen3::Eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(60):  set_target_properties(Eigen3::Eigen PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(65):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets-*.cmake )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(66):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(69):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(70):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(73):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(76):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(97):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(98):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(104):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Targets.cmake(105):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(26):  set(EIGEN3_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(27):  set(EIGEN3_USE_FILE C:/vcpkg/installed/x64-windows/share/eigen3/UseEigen3.cmake )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(29):  set(EIGEN3_DEFINITIONS  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(30):  set(EIGEN3_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(31):  set(EIGEN3_INCLUDE_DIRS C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(32):  set(EIGEN3_ROOT_DIR C:/vcpkg/installed/x64-windows )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(34):  set(EIGEN3_VERSION_STRING 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(35):  set(EIGEN3_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(36):  set(EIGEN3_VERSION_MINOR 4 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(37):  set(EIGEN3_VERSION_PATCH 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(28):  find_package(Pangolin CONFIG REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name Pangolin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN CONFIG;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_Pangolin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER Pangolin z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/pangolin/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_Pangolin )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/pangolin/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(Pangolin STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(pangolin STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(Pangolin CONFIG;REQUIRED )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(1):  set(PACKAGE_VERSION 0.9.3 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(4):  if(System:Windows,Win64:1,Android:,iOS: STREQUAL System:Windows,Win64:1,Android:,iOS: )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(7):  if(0.9.3 VERSION_LESS  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(9):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(10):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfigVersion.cmake(11):  if(0.9.3 VERSION_EQUAL  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(2):  get_filename_component(PROJECT_CMAKE_DIR C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake PATH )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(5):  if(NOT Pangolin_BINARY_DIR )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(6):  include(C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(1):  get_filename_component(VCPKG_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/pangolin/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(4):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(7):  if(CMAKE_VERSION VERSION_LESS 2.8.12 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(10):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(11):  cmake_policy(VERSION 2.8.12...3.29 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(17):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(20):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(21):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(22):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(23):  foreach(_cmake_expected_target IN ITEMS pango_core pango_display pango_geometry pango_glgeometry pango_image pango_opengl pango_packetstream pango_plot pango_python pango_scene pango_tools pango_vars pango_video pango_windowing tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(24):  list(APPEND _cmake_expected_targets tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(25):  if(TARGET tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(27):  else()
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(28):  list(APPEND _cmake_targets_not_defined tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(31):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(32):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(40):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(45):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(46):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(47):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/pangolin PATH )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(53):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(54):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(59):  add_library(pango_core STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_core;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_core;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_core;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_core;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(61):  set_target_properties(pango_core PROPERTIES INTERFACE_COMPILE_DEFINITIONS _WIN_ INTERFACE_COMPILE_FEATURES cxx_decltype_auto INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES $<LINK_ONLY:shlwapi.lib>;Pal::Sigslot;Threads::Threads )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(69):  add_library(pango_display STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_display )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_display )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_display;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_display;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_display;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_display;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_display )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(71):  set_target_properties(pango_display PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core;pango_opengl;pango_windowing;pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(77):  add_library(pango_geometry STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_geometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_geometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_geometry;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_geometry;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_geometry;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_geometry;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_geometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(79):  set_target_properties(pango_geometry PROPERTIES INTERFACE_COMPILE_DEFINITIONS HAVE_EIGEN INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core;pango_image;tinyobj;Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(86):  add_library(pango_glgeometry STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_glgeometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_glgeometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_glgeometry;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_glgeometry;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_glgeometry;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_glgeometry;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_glgeometry )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(88):  set_target_properties(pango_glgeometry PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_geometry;pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(94):  add_library(pango_image STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_image )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_image )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_image;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_image;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_image;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_image;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_image )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(96):  set_target_properties(pango_image PROPERTIES INTERFACE_COMPILE_DEFINITIONS HAVE_EIGEN INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES $<$<NOT:$<CONFIG:DEBUG>>:C:/vcpkg/installed/x64-windows/lib/libpng16.lib>;$<$<CONFIG:DEBUG>:C:/vcpkg/installed/x64-windows/debug/lib/libpng16d.lib>;$<$<NOT:$<CONFIG:DEBUG>>:C:/vcpkg/installed/x64-windows/lib/zlib.lib>;$<$<CONFIG:DEBUG>:C:/vcpkg/installed/x64-windows/debug/lib/zlibd.lib>;$<$<NOT:$<CONFIG:DEBUG>>:C:/vcpkg/installed/x64-windows/lib/jpeg.lib>;$<$<CONFIG:DEBUG>:C:/vcpkg/installed/x64-windows/debug/lib/jpeg.lib>;pango_core;Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(103):  add_library(pango_opengl STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_opengl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_opengl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_opengl;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_opengl;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_opengl;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_opengl;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_opengl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(105):  set_target_properties(pango_opengl PROPERTIES INTERFACE_COMPILE_DEFINITIONS HAVE_EIGEN;HAVE_GLEW INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core;pango_image;Eigen3::Eigen;$<$<NOT:$<CONFIG:DEBUG>>:C:/vcpkg/installed/x64-windows/lib/glew32.lib>;$<$<CONFIG:DEBUG>:C:/vcpkg/installed/x64-windows/debug/lib/glew32d.lib>;opengl32;glu32 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(112):  add_library(pango_packetstream STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_packetstream )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_packetstream )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_packetstream;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_packetstream;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_packetstream;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_packetstream;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_packetstream )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(114):  set_target_properties(pango_packetstream PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(120):  add_library(pango_plot STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_plot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_plot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_plot;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_plot;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_plot;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_plot;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_plot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(122):  set_target_properties(pango_plot PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(128):  add_library(pango_python STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_python )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_python )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_python;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_python;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_python;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_python;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_python )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(130):  set_target_properties(pango_python PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(135):  add_library(pango_scene STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_scene )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_scene )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_scene;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_scene;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_scene;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_scene;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_scene )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(137):  set_target_properties(pango_scene PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(143):  add_library(pango_tools STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_tools;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_tools;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_tools;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_tools;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_tools )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(145):  set_target_properties(pango_tools PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_display;pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(151):  add_library(pango_vars STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_vars;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_vars;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_vars;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_vars;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(153):  set_target_properties(pango_vars PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(159):  add_library(pango_video STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_video;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_video;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_video;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_video;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_video )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(161):  set_target_properties(pango_video PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core;pango_image;pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(167):  add_library(pango_windowing STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG pango_windowing )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_windowing )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_windowing;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;pango_windowing;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;pango_windowing;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(pango_windowing;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name pango_windowing )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(169):  set_target_properties(pango_windowing PROPERTIES INTERFACE_COMPILE_DEFINITIONS PANGO_DEFAULT_WIN_URI="winapi" INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES pango_core;pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(176):  add_library(tinyobj STATIC IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG tinyobj )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;tinyobj )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;tinyobj;STATIC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;tinyobj;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;tinyobj;STATIC;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(tinyobj;STATIC;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name tinyobj )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(178):  set_target_properties(tinyobj PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include;C:/vcpkg/installed/x64-windows/include )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(183):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(184):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(185):  include(C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(9):  set_property(TARGET pango_core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(10):  set_target_properties(pango_core PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(15):  list(APPEND _cmake_import_check_targets pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(16):  list(APPEND _cmake_import_check_files_for_pango_core C:/vcpkg/installed/x64-windows/debug/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(19):  set_property(TARGET pango_display APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(20):  set_target_properties(pango_display PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(25):  list(APPEND _cmake_import_check_targets pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(26):  list(APPEND _cmake_import_check_files_for_pango_display C:/vcpkg/installed/x64-windows/debug/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(29):  set_property(TARGET pango_geometry APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(30):  set_target_properties(pango_geometry PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(35):  list(APPEND _cmake_import_check_targets pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(36):  list(APPEND _cmake_import_check_files_for_pango_geometry C:/vcpkg/installed/x64-windows/debug/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(39):  set_property(TARGET pango_glgeometry APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(40):  set_target_properties(pango_glgeometry PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(45):  list(APPEND _cmake_import_check_targets pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(46):  list(APPEND _cmake_import_check_files_for_pango_glgeometry C:/vcpkg/installed/x64-windows/debug/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(49):  set_property(TARGET pango_image APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(50):  set_target_properties(pango_image PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(55):  list(APPEND _cmake_import_check_targets pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(56):  list(APPEND _cmake_import_check_files_for_pango_image C:/vcpkg/installed/x64-windows/debug/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(59):  set_property(TARGET pango_opengl APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(60):  set_target_properties(pango_opengl PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(65):  list(APPEND _cmake_import_check_targets pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(66):  list(APPEND _cmake_import_check_files_for_pango_opengl C:/vcpkg/installed/x64-windows/debug/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(69):  set_property(TARGET pango_packetstream APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(70):  set_target_properties(pango_packetstream PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(75):  list(APPEND _cmake_import_check_targets pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(76):  list(APPEND _cmake_import_check_files_for_pango_packetstream C:/vcpkg/installed/x64-windows/debug/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(79):  set_property(TARGET pango_plot APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(80):  set_target_properties(pango_plot PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(85):  list(APPEND _cmake_import_check_targets pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(86):  list(APPEND _cmake_import_check_files_for_pango_plot C:/vcpkg/installed/x64-windows/debug/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(89):  set_property(TARGET pango_python APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(90):  set_target_properties(pango_python PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(95):  list(APPEND _cmake_import_check_targets pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(96):  list(APPEND _cmake_import_check_files_for_pango_python C:/vcpkg/installed/x64-windows/debug/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(99):  set_property(TARGET pango_scene APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(100):  set_target_properties(pango_scene PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(105):  list(APPEND _cmake_import_check_targets pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(106):  list(APPEND _cmake_import_check_files_for_pango_scene C:/vcpkg/installed/x64-windows/debug/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(109):  set_property(TARGET pango_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(110):  set_target_properties(pango_tools PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(115):  list(APPEND _cmake_import_check_targets pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(116):  list(APPEND _cmake_import_check_files_for_pango_tools C:/vcpkg/installed/x64-windows/debug/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(119):  set_property(TARGET pango_vars APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(120):  set_target_properties(pango_vars PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(125):  list(APPEND _cmake_import_check_targets pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(126):  list(APPEND _cmake_import_check_files_for_pango_vars C:/vcpkg/installed/x64-windows/debug/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(129):  set_property(TARGET pango_video APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(130):  set_target_properties(pango_video PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(135):  list(APPEND _cmake_import_check_targets pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(136):  list(APPEND _cmake_import_check_files_for_pango_video C:/vcpkg/installed/x64-windows/debug/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(139):  set_property(TARGET pango_windowing APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(140):  set_target_properties(pango_windowing PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(145):  list(APPEND _cmake_import_check_targets pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(146):  list(APPEND _cmake_import_check_files_for_pango_windowing C:/vcpkg/installed/x64-windows/debug/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(149):  set_property(TARGET tinyobj APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(150):  set_target_properties(tinyobj PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG CXX IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(155):  list(APPEND _cmake_import_check_targets tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(156):  list(APPEND _cmake_import_check_files_for_tinyobj C:/vcpkg/installed/x64-windows/debug/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-debug.cmake(159):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(185):  include(C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(9):  set_property(TARGET pango_core APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(10):  set_target_properties(pango_core PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(15):  list(APPEND _cmake_import_check_targets pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(16):  list(APPEND _cmake_import_check_files_for_pango_core C:/vcpkg/installed/x64-windows/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(19):  set_property(TARGET pango_display APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(20):  set_target_properties(pango_display PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(25):  list(APPEND _cmake_import_check_targets pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(26):  list(APPEND _cmake_import_check_files_for_pango_display C:/vcpkg/installed/x64-windows/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(29):  set_property(TARGET pango_geometry APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(30):  set_target_properties(pango_geometry PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(35):  list(APPEND _cmake_import_check_targets pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(36):  list(APPEND _cmake_import_check_files_for_pango_geometry C:/vcpkg/installed/x64-windows/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(39):  set_property(TARGET pango_glgeometry APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(40):  set_target_properties(pango_glgeometry PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(45):  list(APPEND _cmake_import_check_targets pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(46):  list(APPEND _cmake_import_check_files_for_pango_glgeometry C:/vcpkg/installed/x64-windows/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(49):  set_property(TARGET pango_image APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(50):  set_target_properties(pango_image PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(55):  list(APPEND _cmake_import_check_targets pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(56):  list(APPEND _cmake_import_check_files_for_pango_image C:/vcpkg/installed/x64-windows/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(59):  set_property(TARGET pango_opengl APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(60):  set_target_properties(pango_opengl PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(65):  list(APPEND _cmake_import_check_targets pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(66):  list(APPEND _cmake_import_check_files_for_pango_opengl C:/vcpkg/installed/x64-windows/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(69):  set_property(TARGET pango_packetstream APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(70):  set_target_properties(pango_packetstream PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(75):  list(APPEND _cmake_import_check_targets pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(76):  list(APPEND _cmake_import_check_files_for_pango_packetstream C:/vcpkg/installed/x64-windows/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(79):  set_property(TARGET pango_plot APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(80):  set_target_properties(pango_plot PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(85):  list(APPEND _cmake_import_check_targets pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(86):  list(APPEND _cmake_import_check_files_for_pango_plot C:/vcpkg/installed/x64-windows/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(89):  set_property(TARGET pango_python APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(90):  set_target_properties(pango_python PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(95):  list(APPEND _cmake_import_check_targets pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(96):  list(APPEND _cmake_import_check_files_for_pango_python C:/vcpkg/installed/x64-windows/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(99):  set_property(TARGET pango_scene APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(100):  set_target_properties(pango_scene PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(105):  list(APPEND _cmake_import_check_targets pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(106):  list(APPEND _cmake_import_check_files_for_pango_scene C:/vcpkg/installed/x64-windows/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(109):  set_property(TARGET pango_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(110):  set_target_properties(pango_tools PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(115):  list(APPEND _cmake_import_check_targets pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(116):  list(APPEND _cmake_import_check_files_for_pango_tools C:/vcpkg/installed/x64-windows/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(119):  set_property(TARGET pango_vars APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(120):  set_target_properties(pango_vars PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(125):  list(APPEND _cmake_import_check_targets pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(126):  list(APPEND _cmake_import_check_files_for_pango_vars C:/vcpkg/installed/x64-windows/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(129):  set_property(TARGET pango_video APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(130):  set_target_properties(pango_video PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(135):  list(APPEND _cmake_import_check_targets pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(136):  list(APPEND _cmake_import_check_files_for_pango_video C:/vcpkg/installed/x64-windows/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(139):  set_property(TARGET pango_windowing APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(140):  set_target_properties(pango_windowing PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(145):  list(APPEND _cmake_import_check_targets pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(146):  list(APPEND _cmake_import_check_files_for_pango_windowing C:/vcpkg/installed/x64-windows/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(149):  set_property(TARGET tinyobj APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(150):  set_target_properties(tinyobj PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE CXX IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(155):  list(APPEND _cmake_import_check_targets tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(156):  list(APPEND _cmake_import_check_files_for_tinyobj C:/vcpkg/installed/x64-windows/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets-release.cmake(159):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(187):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(188):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(191):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(194):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_core.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_display OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_display.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_geometry OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_geometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_glgeometry OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_glgeometry.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_image OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_image.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_opengl OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_opengl.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_packetstream OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_packetstream.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_plot OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_plot.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_python OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_python.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_scene OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_scene.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_tools OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_tools.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_vars OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_vars.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_video OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_video.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_windowing OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/pango_windowing.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_tinyobj OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(199):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/tinyobj.lib )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_core )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_display OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_display )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_geometry OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_geometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_glgeometry OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_glgeometry )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_image OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_image )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_opengl OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_opengl )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_packetstream OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_packetstream )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_plot OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_plot )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_python OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_python )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_scene OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_scene )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_tools OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_tools )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_vars OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_vars )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_video OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_video )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_pango_windowing OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_pango_windowing )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(195):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_tinyobj OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(198):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(212):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(213):  unset(_cmake_import_check_files_for_tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(215):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(216):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(222):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinTargets.cmake(223):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(9):  SET(Pangolin_CMAKEMODULES C:/vcpkg/installed/x64-windows/share/pangolin/cmake )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(10):  SET(Pangolin_LIBRARIES pango_core;pango_display;pango_geometry;pango_glgeometry;pango_image;pango_opengl;pango_packetstream;pango_plot;pango_python;pango_scene;pango_tools;pango_vars;pango_video;pango_windowing;tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(11):  SET(Pangolin_LIBRARY pango_core;pango_display;pango_geometry;pango_glgeometry;pango_image;pango_opengl;pango_packetstream;pango_plot;pango_python;pango_scene;pango_tools;pango_vars;pango_video;pango_windowing;tinyobj )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(13):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(14):  find_dependency(Eigen3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash Eigen3;;1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_Eigen3_02bfcfd0c703c57e2dd86d7bc1365e3af6c9961f7e97c5c81506c6d69cc9f4a1_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_Eigen3_HASH_STACK 02bfcfd0c703c57e2dd86d7bc1365e3af6c9961f7e97c5c81506c6d69cc9f4a1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(Pangolin_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(Pangolin_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(69):  set(cmake_fd_required_arg REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_Eigen3_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(Eigen3   REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER Eigen3 z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(Eigen3 STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(eigen3 STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(Eigen3 REQUIRED )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(18):  if(3.4.0 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(56):  if(8 STREQUAL  OR  STREQUAL  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(57):  return()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(9):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/eigen3/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(11):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(20):  if(NOT TARGET Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(26):  set(EIGEN3_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(27):  set(EIGEN3_USE_FILE C:/vcpkg/installed/x64-windows/share/eigen3/UseEigen3.cmake )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(29):  set(EIGEN3_DEFINITIONS  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(30):  set(EIGEN3_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(31):  set(EIGEN3_INCLUDE_DIRS C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(32):  set(EIGEN3_ROOT_DIR C:/vcpkg/installed/x64-windows )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(34):  set(EIGEN3_VERSION_STRING 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(35):  set(EIGEN3_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(36):  set(EIGEN3_VERSION_MINOR 4 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(37):  set(EIGEN3_VERSION_PATCH 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_Eigen3_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_Eigen3_02bfcfd0c703c57e2dd86d7bc1365e3af6c9961f7e97c5c81506c6d69cc9f4a1_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT Eigen3_FOUND )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(15):  find_dependency(PalSigslot CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash PalSigslot;CONFIG;1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_PalSigslot_d1402bc4b17a264996db68bbf70ad6343ec7dfddd7e09ed168fb64c91a956e8a_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_PalSigslot_HASH_STACK d1402bc4b17a264996db68bbf70ad6343ec7dfddd7e09ed168fb64c91a956e8a )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(Pangolin_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(Pangolin_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(69):  set(cmake_fd_required_arg REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_PalSigslot_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(PalSigslot CONFIG  REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name PalSigslot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN CONFIG;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER PalSigslot z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/palsigslot/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_PalSigslot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/palsigslot/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(PalSigslot STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(palsigslot STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(PalSigslot CONFIG;REQUIRED )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(12):  set(PACKAGE_VERSION 1.2.3 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(18):  if(1.2.3 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 1 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 1 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(6):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/PalSigslot/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(8):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(15):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(27):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(28):  find_dependency(Threads )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash Threads;;1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_Threads_37c35af0fe428d476505d3515ef07aa12769dfa607841aee9f00a63375703449_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(60):  unset(cmake_fd_call_hash )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotConfig.cmake(30):  include(C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 3.0.0 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(10):  cmake_policy(VERSION 3.0.0...3.29 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS Pal::Sigslot )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(23):  list(APPEND _cmake_expected_targets Pal::Sigslot )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(24):  if(TARGET Pal::Sigslot )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(27):  list(APPEND _cmake_targets_not_defined Pal::Sigslot )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/PalSigslot PATH )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(58):  add_library(Pal::Sigslot INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG Pal::Sigslot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Pal::Sigslot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Pal::Sigslot;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;Pal::Sigslot;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;Pal::Sigslot;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(Pal::Sigslot;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name Pal::Sigslot )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(60):  set_target_properties(Pal::Sigslot PROPERTIES INTERFACE_COMPILE_DEFINITIONS $<$<BOOL:OFF>:SIGSLOT_REDUCE_COMPILE_TIME> INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES Threads::Threads INTERFACE_LINK_OPTIONS $<$<CXX_COMPILER_ID:MSVC>:/OPT:NOICF>;$<$<BOOL:>:/OPT:NOICF> )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(68):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(69):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(72):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(73):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(76):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(79):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(100):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(101):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(107):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/PalSigslot/PalSigslotTargets.cmake(108):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_PalSigslot_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_PalSigslot_d1402bc4b17a264996db68bbf70ad6343ec7dfddd7e09ed168fb64c91a956e8a_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_PalSigslot_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT PalSigslot_FOUND )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(17):  if(UNIX )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(21):  if(NOT EMSCRIPTEN )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(22):  find_dependency(OpenGL REQUIRED COMPONENTS OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash OpenGL;REQUIRED;COMPONENTS;OpenGL;1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_OpenGL_f411368e353fcaaa2ae075c761ef559c969ab9bbb4136dc7dfa8935f4d811f2c_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_OpenGL_HASH_STACK f411368e353fcaaa2ae075c761ef559c969ab9bbb4136dc7dfa8935f4d811f2c )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(Pangolin_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(Pangolin_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(69):  set(cmake_fd_required_arg REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_OpenGL_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(OpenGL REQUIRED;COMPONENTS;OpenGL  REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name OpenGL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN REQUIRED;COMPONENTS;OpenGL;REQUIRED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER OpenGL z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/opengl/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_OpenGL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/opengl/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(OpenGL STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(opengl STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(OpenGL REQUIRED;COMPONENTS;OpenGL;REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(210):  set(_OpenGL_REQUIRED_VARS OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(213):  foreach(component OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(214):  string(TOUPPER OpenGL _COMPONENT )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(215):  set(OPENGL_USE_OPENGL 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(218):  set(_OpenGL_CACHE_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(220):  if(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(222):  if(BORLAND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(225):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(226):  set(OPENGL_gl_LIBRARY opengl32 CACHE STRING OpenGL library for win32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(227):  set(OPENGL_glu_LIBRARY glu32 CACHE STRING GLU library for win32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(230):  list(APPEND _OpenGL_CACHE_VARS OPENGL_gl_LIBRARY OPENGL_glu_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(522):  if(OPENGL_xmesa_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(524):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(525):  set(OPENGL_XMESA_FOUND NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(528):  if(OPENGL_glu_LIBRARY AND ( WIN32 OR OPENGL_GLU_INCLUDE_DIR ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(529):  set(OPENGL_GLU_FOUND YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(537):  if(NOT OPENGL_opengl_LIBRARY AND NOT OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(539):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(540):  set(OpenGL_OpenGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(543):  if(OPENGL_glx_LIBRARY AND OPENGL_GLX_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(545):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(546):  set(OpenGL_GLX_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(549):  if(OPENGL_egl_LIBRARY AND OPENGL_EGL_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(551):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(552):  set(OpenGL_EGL_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(555):  if(OPENGL_gles2_LIBRARY AND OPENGL_GLES2_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(557):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(558):  set(OpenGL_GLES2_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(561):  if(OPENGL_gles3_LIBRARY AND OPENGL_GLES3_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(563):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(564):  set(OpenGL_GLES3_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(568):  if(OPENGL_EGL_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(572):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(213):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(33):  function(find_package_message pkg msg details )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(216):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(218):  cmake_policy(SET CMP0012 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(220):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(224):  macro(_FPHSA_FAILURE_MESSAGE _msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(243):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(278):  function(FIND_PACKAGE_CHECK_VERSION version result )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(378):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(614):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(573):  if(CMAKE_FIND_PACKAGE_NAME STREQUAL GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(579):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenGL REQUIRED_VARS OPENGL_gl_LIBRARY HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(381):  set(options CONFIG_MODE HANDLE_COMPONENTS NAME_MISMATCHED HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(382):  set(oneValueArgs FAIL_MESSAGE REASON_FAILURE_MESSAGE VERSION_VAR FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(383):  set(multiValueArgs REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(386):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(387):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE REQUIRED_VARS INDEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(389):  unset(FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(390):  if(DEFINED FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(406):  if(8 EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(410):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(411):  cmake_parse_arguments(FPHSA CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS REQUIRED_VARS OPENGL_gl_LIBRARY;HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(413):  if(FPHSA_UNPARSED_ARGUMENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(417):  if(NOT FPHSA_FAIL_MESSAGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(418):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(423):  if(FPHSA_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(429):  if(NOT FPHSA_REQUIRED_VARS AND NOT FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(434):  if(DEFINED FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(438):  if(DEFINED CMAKE_FIND_PACKAGE_NAME AND NOT FPHSA_NAME_MISMATCHED AND NOT _NAME STREQUAL CMAKE_FIND_PACKAGE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(449):  if(OpenGL_FIND_VERSION_RANGE AND NOT FPHSA_HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(457):  set(_CMAKE_FPHSA_PACKAGE_NAME OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(461):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(462):  set(FPHSA_FAIL_MESSAGE Could NOT find OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(465):  if(FPHSA_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(466):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(469):  string(TOUPPER OpenGL _NAME_UPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(470):  string(TOLOWER OpenGL _NAME_LOWER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(472):  if(FPHSA_FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(480):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(481):  set(_FOUND_VAR OPENGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(486):  set(MISSING_VARS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(487):  set(DETAILS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(489):  set(FPHSA_FOUND_OpenGL TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(490):  foreach(_CURRENT_VAR OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(491):  if(NOT OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(494):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(495):  string(APPEND DETAILS [opengl32] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(498):  if(FPHSA_FOUND_OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(499):  set(OpenGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(500):  set(OPENGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(507):  unset(FOUND_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(508):  unset(MISSING_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(510):  if(FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(511):  foreach(comp OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(512):  if(OpenGL_OpenGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(514):  if(NOT DEFINED FOUND_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(515):  set(FOUND_COMPONENTS_MSG found components: )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(517):  string(APPEND FOUND_COMPONENTS_MSG  OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(533):  set(COMPONENT_MSG found components: OpenGL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(534):  string(APPEND DETAILS [cfound components: OpenGL ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(538):  set(VERSION_MSG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(539):  set(VERSION_OK TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(543):  if(DEFINED OpenGL_FIND_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(568):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(570):  if(DEFINED  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(575):  if(VERSION_OK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(576):  string(APPEND DETAILS [v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(583):  if(OpenGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(584):  FIND_PACKAGE_MESSAGE(OpenGL Found OpenGL: opengl32  found components: OpenGL  [opengl32][cfound components: OpenGL ][v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(35):  if(NOT OpenGL_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(36):  string(REPLACE 
  details [opengl32][cfound components: OpenGL ][v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(37):  set(DETAILS_VAR FIND_PACKAGE_MESSAGE_DETAILS_OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(38):  if(NOT [opengl32][cfound components: OpenGL ][v()] STREQUAL  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(40):  string(STRIP Found OpenGL: opengl32  found components: OpenGL  msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(41):  message(STATUS Found OpenGL: opengl32  found components: OpenGL )
-- Found OpenGL: opengl32  found components: OpenGL
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(45):  set(FIND_PACKAGE_MESSAGE_DETAILS_OpenGL [opengl32][cfound components: OpenGL ][v()] CACHE INTERNAL Details about finding OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(609):  set(OpenGL_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(610):  set(OPENGL_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(581):  unset(FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(582):  unset(_OpenGL_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(585):  if(OPENGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(586):  set(OPENGL_INCLUDE_DIRS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(590):  if(OPENGL_opengl_LIBRARY AND NOT TARGET OpenGL::OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(607):  if(OpenGL_GLX_FOUND AND NOT TARGET OpenGL::GLX AND TARGET OpenGL::OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(626):  if(OpenGL_GLES2_FOUND AND NOT TARGET OpenGL::GLES2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(661):  if(OpenGL_GLES3_FOUND AND NOT TARGET OpenGL::GLES3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(693):  if(OPENGL_gl_LIBRARY AND NOT TARGET OpenGL::GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(695):  if(IS_ABSOLUTE opengl32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(699):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(700):  add_library(OpenGL::GL INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG OpenGL::GL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GL;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GL;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;OpenGL::GL;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(OpenGL::GL;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name OpenGL::GL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(701):  set_target_properties(OpenGL::GL PROPERTIES IMPORTED_LIBNAME opengl32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(704):  set_target_properties(OpenGL::GL PROPERTIES INTERFACE_INCLUDE_DIRECTORIES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(722):  if(_OpenGL_EGL_IMPL AND OpenGL_EGL_FOUND AND NOT TARGET OpenGL::EGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(740):  if(OPENGL_GLU_FOUND AND NOT TARGET OpenGL::GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(741):  if(IS_ABSOLUTE glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(745):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(746):  add_library(OpenGL::GLU INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG OpenGL::GLU )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GLU )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GLU;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;OpenGL::GLU;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;OpenGL::GLU;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(OpenGL::GLU;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name OpenGL::GLU )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(747):  set_target_properties(OpenGL::GLU PROPERTIES IMPORTED_LIBNAME glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(750):  set_target_properties(OpenGL::GLU PROPERTIES INTERFACE_LINK_LIBRARIES OpenGL::GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(753):  set_target_properties(OpenGL::GLU PROPERTIES INTERFACE_INCLUDE_DIRECTORIES  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(755):  list(APPEND OPENGL_INCLUDE_DIRS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(759):  if(OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(760):  set(OPENGL_LIBRARIES opengl32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(767):  if(TARGET OpenGL::GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(768):  list(APPEND OPENGL_LIBRARIES glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(772):  list(REMOVE_DUPLICATES OPENGL_INCLUDE_DIRS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(775):  set(OPENGL_LIBRARY opengl32;glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(777):  set(OPENGL_INCLUDE_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(779):  mark_as_advanced(OPENGL_gl_LIBRARY;OPENGL_glu_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(780):  unset(_OpenGL_CACHE_VARS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_OpenGL_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_OpenGL_f411368e353fcaaa2ae075c761ef559c969ab9bbb4136dc7dfa8935f4d811f2c_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_OpenGL_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT OpenGL_FOUND )
C:/vcpkg/installed/x64-windows/share/pangolin/PangolinConfig.cmake(25):  if(_LINUX_ )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(29):  find_package(realsense2 QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name realsense2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_realsense2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER realsense2 z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/realsense2/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_realsense2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/realsense2/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(realsense2 STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(realsense2 STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(realsense2 QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(32):  find_package(DBoW2 CONFIG QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name DBoW2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN CONFIG;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_DBoW2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER DBoW2 z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/dbow2/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_DBoW2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/dbow2/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(DBoW2 STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(dbow2 STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(DBoW2 CONFIG;QUIET )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(1):  get_filename_component(VCPKG_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/dbow2/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(2):  FIND_LIBRARY(DBoW2_LIBRARY DBoW2 PATHS C:/vcpkg/installed/x64-windows/lib )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(5):  FIND_PATH(DBoW2_INCLUDE_DIR DBoW2Config.cmake PATHS C:/vcpkg/installed/x64-windows/include/DBoW2 )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(8):  SET(DBoW2_LIBRARIES C:/vcpkg/installed/x64-windows/lib/DBoW2.lib )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(9):  SET(DBoW2_LIBS C:/vcpkg/installed/x64-windows/lib/DBoW2.lib )
C:/vcpkg/installed/x64-windows/share/dbow2/DBoW2Config.cmake(10):  SET(DBoW2_INCLUDE_DIRS DBoW2_INCLUDE_DIR-NOTFOUND )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(33):  find_package(g2o CONFIG QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 0 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name g2o )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_1_ARGN CONFIG;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_1_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(792):  if( )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(804):  elseif(DEFINED VCPKG_LOCK_FIND_PACKAGE_g2o )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(816):  elseif(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER g2o z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/g2o/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_g2o )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/g2o/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(g2o STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(g2o STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(g2o CONFIG;QUIET )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(12):  set(PACKAGE_VERSION 1.0.0 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(18):  if(1.0.0 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(1):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(2):  find_dependency(CHOLMOD CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash CHOLMOD;CONFIG; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_CHOLMOD_e65588087650a2fdd162df55e2c6bd893beb5428f5fafe55687ca6f4f4dc6cb2_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_CHOLMOD_HASH_STACK e65588087650a2fdd162df55e2c6bd893beb5428f5fafe55687ca6f4f4dc6cb2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(g2o_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(g2o_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_CHOLMOD_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(CHOLMOD CONFIG QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name CHOLMOD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN CONFIG;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER CHOLMOD z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/cholmod/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_CHOLMOD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/cholmod/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(CHOLMOD STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(cholmod STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(CHOLMOD CONFIG;QUIET )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(12):  set(PACKAGE_VERSION 5.3.0 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(18):  if(5.3.0 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 5 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 5 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(34):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/CHOLMOD/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(36):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(43):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(55):  set(CHOLMOD_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(56):  set(CHOLMOD_VERSION_MAJOR 5 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(57):  set(CHOLMOD_VERSION_MINOR 3 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(58):  set(CHOLMOD_VERSION_PATCH 0 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(59):  set(CHOLMOD_VERSION 5.3.0 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(62):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(63):  set(_dependencies_found ON )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(66):  if(OFF AND NOT CUDAToolkit_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(73):  if(NOT _dependencies_found )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(79):  if(OFF AND NOT OpenMP_C_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(86):  if(NOT _dependencies_found )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(92):  if(off )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(123):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(124):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(125):  find_dependency(SuiteSparse_config 7.8 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash SuiteSparse_config;7.8; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_SuiteSparse_config_471f23f2da9c527ee661b72e776dff77479e618c032e6f9639e5286a583cf754_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_SuiteSparse_config_HASH_STACK 471f23f2da9c527ee661b72e776dff77479e618c032e6f9639e5286a583cf754 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(CHOLMOD_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(CHOLMOD_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_SuiteSparse_config_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(SuiteSparse_config 7.8 QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 2 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name SuiteSparse_config )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_3_ARGN 7.8;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_3_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER SuiteSparse_config z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/suitesparse_config/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_SuiteSparse_config )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/suitesparse_config/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(SuiteSparse_config STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(suitesparse_config STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(SuiteSparse_config 7.8;QUIET )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(12):  set(PACKAGE_VERSION 7.8.3 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(18):  if(7.8.3 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 7 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 7 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(43):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(56):  set(SUITESPARSE_DATE Oct 10, 2024 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(57):  set(SUITESPARSE_CONFIG_VERSION_MAJOR 7 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(58):  set(SUITESPARSE_CONFIG_VERSION_MINOR 8 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(59):  set(SUITESPARSE_CONFIG_VERSION_PATCH 3 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(60):  set(SUITESPARSE_CONFIG_VERSION 7.8.3 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(64):  set(_dependencies_found ON )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(67):  if(OFF AND NOT OpenMP_C_FOUND )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(74):  if(NOT _dependencies_found )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(81):  include(C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(24):  if(TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/SuiteSparse_config PATH )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(58):  add_library(SuiteSparse::SuiteSparseConfig SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::SuiteSparseConfig )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::SuiteSparseConfig )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::SuiteSparseConfig;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::SuiteSparseConfig;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::SuiteSparseConfig;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::SuiteSparseConfig;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::SuiteSparseConfig )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(59):  set_property(TARGET SuiteSparse::SuiteSparseConfig PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(61):  set_target_properties(SuiteSparse::SuiteSparseConfig PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::SuiteSparseConfig APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(10):  set_target_properties(SuiteSparse::SuiteSparseConfig PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(15):  list(APPEND _cmake_import_check_targets SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(16):  list(APPEND _cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib C:/vcpkg/installed/x64-windows/debug/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-debug.cmake(19):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(9):  set_property(TARGET SuiteSparse::SuiteSparseConfig APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(10):  set_target_properties(SuiteSparse::SuiteSparseConfig PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/suitesparseconfig.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(15):  list(APPEND _cmake_import_check_targets SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(16):  list(APPEND _cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig C:/vcpkg/installed/x64-windows/lib/suitesparseconfig.lib C:/vcpkg/installed/x64-windows/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets-release.cmake(19):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::SuiteSparseConfig OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/suitesparseconfig.dll )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::SuiteSparseConfig OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(83):  if(OFF )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(111):  set(_target_shared SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(112):  set(_target_static SuiteSparse::SuiteSparseConfig_static )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(113):  set(_var_prefix SUITESPARSE_CONFIG )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(115):  if(NOT ON AND NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(120):  get_target_property(SUITESPARSE_CONFIG_INCLUDE_DIR SuiteSparse::SuiteSparseConfig INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(121):  if(SUITESPARSE_CONFIG_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(123):  list(GET SUITESPARSE_CONFIG_INCLUDE_DIR 0 SUITESPARSE_CONFIG_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(125):  get_target_property(SUITESPARSE_CONFIG_LIBRARY SuiteSparse::SuiteSparseConfig IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(126):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(127):  get_target_property(_library_chk SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(128):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(132):  if(TARGET SuiteSparse::SuiteSparseConfig_static )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(137):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(139):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(140):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(143):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(149):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(151):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(152):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(153):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(154):  get_target_property(_library_chk SuiteSparse::SuiteSparseConfig IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(156):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(157):  set(SUITESPARSE_CONFIG_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(160):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(167):  if(TARGET SuiteSparse::SuiteSparseConfig_static AND NOT SUITESPARSE_CONFIG_STATIC )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(152):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(153):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(160):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(167):  if(TARGET SuiteSparse::SuiteSparseConfig_static AND NOT SUITESPARSE_CONFIG_STATIC )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(152):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(153):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(160):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(167):  if(TARGET SuiteSparse::SuiteSparseConfig_static AND NOT SUITESPARSE_CONFIG_STATIC )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(152):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(153):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(160):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(167):  if(TARGET SuiteSparse::SuiteSparseConfig_static AND NOT SUITESPARSE_CONFIG_STATIC )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(152):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(153):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(160):  if(NOT SUITESPARSE_CONFIG_LIBRARY )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(167):  if(TARGET SuiteSparse::SuiteSparseConfig_static AND NOT SUITESPARSE_CONFIG_STATIC )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(176):  set(SUITESPARSE_CONFIG_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(178):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(189):  suitesparse_check_exist(SUITESPARSE_CONFIG_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(180):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(182):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(183):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(190):  suitesparse_check_exist(SUITESPARSE_CONFIG_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(180):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib _files2 )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(182):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(183):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(192):  message(STATUS SuiteSparse_config version: 7.8.3 )
-- SuiteSparse_config version: 7.8.3
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(193):  message(STATUS SuiteSparse_config include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- SuiteSparse_config include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(194):  message(STATUS SuiteSparse_config library: C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib )
-- SuiteSparse_config library: C:/vcpkg/installed/x64-windows/debug/lib/suitesparseconfig.lib
C:/vcpkg/installed/x64-windows/share/SuiteSparse_config/SuiteSparse_configConfig.cmake(195):  message(STATUS SuiteSparse_config static:   )
-- SuiteSparse_config static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_3_backup_var IN LISTS z_vcpkg_find_package_3_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_SuiteSparse_config_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_SuiteSparse_config_471f23f2da9c527ee661b72e776dff77479e618c032e6f9639e5286a583cf754_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_SuiteSparse_config_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(127):  if(NOT TARGET SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(128):  find_dependency(AMD 3.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash AMD;3.3; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_AMD_eebcd25e68bcee26544ee8d89aa491bfd8066816753919e1f1ef86722713fc7f_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_AMD_HASH_STACK eebcd25e68bcee26544ee8d89aa491bfd8066816753919e1f1ef86722713fc7f )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(CHOLMOD_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(CHOLMOD_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_AMD_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(AMD 3.3 QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 2 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name AMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_3_ARGN 3.3;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_3_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER AMD z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/amd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_AMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/amd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(AMD STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(amd STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(AMD 3.3;QUIET )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.3.3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(18):  if(3.3.3 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(43):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/AMD/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(56):  set(AMD_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(57):  set(AMD_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(58):  set(AMD_VERSION_MINOR 3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(59):  set(AMD_VERSION_PATCH 3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(60):  set(AMD_VERSION 3.3.3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(66):  if(OFF )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(76):  else()
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(77):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(81):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(88):  include(C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(24):  if(TARGET SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/AMD PATH )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(58):  add_library(SuiteSparse::AMD SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::AMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::AMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::AMD;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::AMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::AMD;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::AMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::AMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(59):  set_property(TARGET SuiteSparse::AMD PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(61):  set_target_properties(SuiteSparse::AMD PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::AMD APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(10):  set_target_properties(SuiteSparse::AMD PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/amd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::AMD C:/vcpkg/installed/x64-windows/debug/lib/amd.lib C:/vcpkg/installed/x64-windows/debug/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(9):  set_property(TARGET SuiteSparse::AMD APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(10):  set_target_properties(SuiteSparse::AMD PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/amd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::AMD C:/vcpkg/installed/x64-windows/lib/amd.lib C:/vcpkg/installed/x64-windows/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::AMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/amd.dll )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::AMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(92):  set(_target_shared SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(93):  set(_target_static SuiteSparse::AMD_static )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(94):  set(_var_prefix AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(96):  if(NOT ON AND NOT TARGET SuiteSparse::AMD )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(101):  get_target_property(AMD_INCLUDE_DIR SuiteSparse::AMD INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(102):  if(AMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(104):  list(GET AMD_INCLUDE_DIR 0 AMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(106):  get_target_property(AMD_LIBRARY SuiteSparse::AMD IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(107):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(108):  get_target_property(_library_chk SuiteSparse::AMD IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(109):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(113):  if(TARGET SuiteSparse::AMD_static )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(118):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(120):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(121):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(124):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(130):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(132):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(133):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(134):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(135):  get_target_property(_library_chk SuiteSparse::AMD IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(137):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(138):  set(AMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(141):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(148):  if(TARGET SuiteSparse::AMD_static AND NOT AMD_STATIC )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(133):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(134):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(141):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(148):  if(TARGET SuiteSparse::AMD_static AND NOT AMD_STATIC )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(133):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(134):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(141):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(148):  if(TARGET SuiteSparse::AMD_static AND NOT AMD_STATIC )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(133):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(134):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(141):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(148):  if(TARGET SuiteSparse::AMD_static AND NOT AMD_STATIC )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(133):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(134):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(141):  if(NOT AMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(148):  if(TARGET SuiteSparse::AMD_static AND NOT AMD_STATIC )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(157):  set(AMD_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(159):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(170):  suitesparse_check_exist(AMD_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(171):  suitesparse_check_exist(AMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/amd.lib _files2 )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(173):  message(STATUS AMD version: 3.3.3 )
-- AMD version: 3.3.3
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(174):  message(STATUS AMD include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- AMD include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(175):  message(STATUS AMD library: C:/vcpkg/installed/x64-windows/debug/lib/amd.lib )
-- AMD library: C:/vcpkg/installed/x64-windows/debug/lib/amd.lib
C:/vcpkg/installed/x64-windows/share/AMD/AMDConfig.cmake(176):  message(STATUS AMD static:   )
-- AMD static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_3_backup_var IN LISTS z_vcpkg_find_package_3_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_AMD_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_AMD_eebcd25e68bcee26544ee8d89aa491bfd8066816753919e1f1ef86722713fc7f_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_AMD_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT AMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(130):  if(NOT TARGET SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(131):  find_dependency(COLAMD 3.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash COLAMD;3.3; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_COLAMD_1396ca7408173623e07708d575aa995be4965dca615a62d233749c2fc7cb9b43_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_COLAMD_HASH_STACK 1396ca7408173623e07708d575aa995be4965dca615a62d233749c2fc7cb9b43 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(CHOLMOD_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(CHOLMOD_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_COLAMD_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(COLAMD 3.3 QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 2 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name COLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_3_ARGN 3.3;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_3_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER COLAMD z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/colamd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_COLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/colamd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(COLAMD STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(colamd STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(COLAMD 3.3;QUIET )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.3.4 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(18):  if(3.3.4 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(43):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/COLAMD/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(56):  set(COLAMD_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(57):  set(COLAMD_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(58):  set(COLAMD_VERSION_MINOR 3 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(59):  set(COLAMD_VERSION_PATCH 4 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(60):  set(COLAMD_VERSION 3.3.4 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(66):  if(OFF )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(76):  else()
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(77):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(81):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(88):  include(C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(24):  if(TARGET SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/COLAMD PATH )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(58):  add_library(SuiteSparse::COLAMD SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::COLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::COLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::COLAMD;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::COLAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::COLAMD;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::COLAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::COLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(59):  set_property(TARGET SuiteSparse::COLAMD PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(61):  set_target_properties(SuiteSparse::COLAMD PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::COLAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(10):  set_target_properties(SuiteSparse::COLAMD PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::COLAMD C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib C:/vcpkg/installed/x64-windows/debug/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(9):  set_property(TARGET SuiteSparse::COLAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(10):  set_target_properties(SuiteSparse::COLAMD PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/colamd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::COLAMD C:/vcpkg/installed/x64-windows/lib/colamd.lib C:/vcpkg/installed/x64-windows/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::COLAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/colamd.dll )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::COLAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(92):  set(_target_shared SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(93):  set(_target_static SuiteSparse::COLAMD_static )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(94):  set(_var_prefix COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(96):  if(NOT ON AND NOT TARGET SuiteSparse::COLAMD )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(101):  get_target_property(COLAMD_INCLUDE_DIR SuiteSparse::COLAMD INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(102):  if(COLAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(104):  list(GET COLAMD_INCLUDE_DIR 0 COLAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(106):  get_target_property(COLAMD_LIBRARY SuiteSparse::COLAMD IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(107):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(108):  get_target_property(_library_chk SuiteSparse::COLAMD IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(109):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(113):  if(TARGET SuiteSparse::COLAMD_static )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(118):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(120):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(121):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(124):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(130):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(132):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(133):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(134):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(135):  get_target_property(_library_chk SuiteSparse::COLAMD IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(137):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(138):  set(COLAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(141):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(148):  if(TARGET SuiteSparse::COLAMD_static AND NOT COLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(133):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(134):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(141):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(148):  if(TARGET SuiteSparse::COLAMD_static AND NOT COLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(133):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(134):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(141):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(148):  if(TARGET SuiteSparse::COLAMD_static AND NOT COLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(133):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(134):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(141):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(148):  if(TARGET SuiteSparse::COLAMD_static AND NOT COLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(133):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(134):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(141):  if(NOT COLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(148):  if(TARGET SuiteSparse::COLAMD_static AND NOT COLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(157):  set(COLAMD_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(159):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(170):  suitesparse_check_exist(COLAMD_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(171):  suitesparse_check_exist(COLAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib _files2 )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(173):  message(STATUS COLAMD version: 3.3.4 )
-- COLAMD version: 3.3.4
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(174):  message(STATUS COLAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- COLAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(175):  message(STATUS COLAMD library: C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib )
-- COLAMD library: C:/vcpkg/installed/x64-windows/debug/lib/colamd.lib
C:/vcpkg/installed/x64-windows/share/COLAMD/COLAMDConfig.cmake(176):  message(STATUS COLAMD static:   )
-- COLAMD static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_3_backup_var IN LISTS z_vcpkg_find_package_3_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_COLAMD_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_COLAMD_1396ca7408173623e07708d575aa995be4965dca615a62d233749c2fc7cb9b43_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_COLAMD_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT COLAMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(134):  if(NOT SuiteSparse_config_FOUND OR NOT AMD_FOUND OR NOT COLAMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(138):  if(ON )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(141):  if(off )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(161):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(162):  if(NOT TARGET SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(163):  find_dependency(CAMD 3.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash CAMD;3.3; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_CAMD_bb211e79a5b04f6a40de32d979933348b17ef08d55cdf0c3c0cdfa5c4a9d2763_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_CAMD_HASH_STACK bb211e79a5b04f6a40de32d979933348b17ef08d55cdf0c3c0cdfa5c4a9d2763 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(CHOLMOD_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(CHOLMOD_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_CAMD_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(CAMD 3.3 QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 2 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name CAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_3_ARGN 3.3;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_3_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER CAMD z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/camd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_CAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/camd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(CAMD STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(camd STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(CAMD 3.3;QUIET )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.3.3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(18):  if(3.3.3 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(43):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/CAMD/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(56):  set(CAMD_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(57):  set(CAMD_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(58):  set(CAMD_VERSION_MINOR 3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(59):  set(CAMD_VERSION_PATCH 3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(60):  set(CAMD_VERSION 3.3.3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(66):  if(OFF )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(76):  else()
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(77):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(81):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(88):  include(C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(24):  if(TARGET SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CAMD PATH )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(58):  add_library(SuiteSparse::CAMD SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::CAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CAMD;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::CAMD;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::CAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::CAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(59):  set_property(TARGET SuiteSparse::CAMD PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(61):  set_target_properties(SuiteSparse::CAMD PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::CAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(10):  set_target_properties(SuiteSparse::CAMD PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/camd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CAMD C:/vcpkg/installed/x64-windows/debug/lib/camd.lib C:/vcpkg/installed/x64-windows/debug/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(9):  set_property(TARGET SuiteSparse::CAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(10):  set_target_properties(SuiteSparse::CAMD PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/camd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CAMD C:/vcpkg/installed/x64-windows/lib/camd.lib C:/vcpkg/installed/x64-windows/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/camd.dll )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(92):  set(_target_shared SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(93):  set(_target_static SuiteSparse::CAMD_static )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(94):  set(_var_prefix CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(96):  if(NOT ON AND NOT TARGET SuiteSparse::CAMD )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(101):  get_target_property(CAMD_INCLUDE_DIR SuiteSparse::CAMD INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(102):  if(CAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(104):  list(GET CAMD_INCLUDE_DIR 0 CAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(106):  get_target_property(CAMD_LIBRARY SuiteSparse::CAMD IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(107):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(108):  get_target_property(_library_chk SuiteSparse::CAMD IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(109):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(113):  if(TARGET SuiteSparse::CAMD_static )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(118):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(120):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(121):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(124):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(130):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(132):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(133):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(134):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(135):  get_target_property(_library_chk SuiteSparse::CAMD IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(137):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(138):  set(CAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(141):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(148):  if(TARGET SuiteSparse::CAMD_static AND NOT CAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(133):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(134):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(141):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(148):  if(TARGET SuiteSparse::CAMD_static AND NOT CAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(133):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(134):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(141):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(148):  if(TARGET SuiteSparse::CAMD_static AND NOT CAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(133):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(134):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(141):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(148):  if(TARGET SuiteSparse::CAMD_static AND NOT CAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(133):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(134):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(141):  if(NOT CAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(148):  if(TARGET SuiteSparse::CAMD_static AND NOT CAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(157):  set(AMD_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(159):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(170):  suitesparse_check_exist(CAMD_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(171):  suitesparse_check_exist(CAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/camd.lib _files2 )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(173):  message(STATUS CAMD version: 3.3.3 )
-- CAMD version: 3.3.3
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(174):  message(STATUS CAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- CAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(175):  message(STATUS CAMD library: C:/vcpkg/installed/x64-windows/debug/lib/camd.lib )
-- CAMD library: C:/vcpkg/installed/x64-windows/debug/lib/camd.lib
C:/vcpkg/installed/x64-windows/share/CAMD/CAMDConfig.cmake(176):  message(STATUS CAMD static:   )
-- CAMD static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_3_backup_var IN LISTS z_vcpkg_find_package_3_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_CAMD_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_CAMD_bb211e79a5b04f6a40de32d979933348b17ef08d55cdf0c3c0cdfa5c4a9d2763_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_CAMD_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT CAMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(165):  if(NOT TARGET SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(166):  find_dependency(CCOLAMD 3.3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash CCOLAMD;3.3; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_CCOLAMD_0a9b09ce12a5a1f5c7aa59b786684291903f217b39b7723e2dbb1374fecf7616_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_CCOLAMD_HASH_STACK 0a9b09ce12a5a1f5c7aa59b786684291903f217b39b7723e2dbb1374fecf7616 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(CHOLMOD_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(CHOLMOD_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_CCOLAMD_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(CCOLAMD 3.3 QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 2 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name CCOLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_3_ARGN 3.3;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_3_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER CCOLAMD z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/ccolamd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_CCOLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/ccolamd/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(CCOLAMD STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(ccolamd STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(CCOLAMD 3.3;QUIET )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.3.4 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(18):  if(3.3.4 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(43):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/CCOLAMD/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(56):  set(CCOLAMD_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(57):  set(CCOLAMD_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(58):  set(CCOLAMD_VERSION_MINOR 3 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(59):  set(CCOLAMD_VERSION_PATCH 4 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(60):  set(CCOLAMD_VERSION 3.3.4 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(66):  if(OFF )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(76):  else()
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(77):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(81):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(88):  include(C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(24):  if(TARGET SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CCOLAMD PATH )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(58):  add_library(SuiteSparse::CCOLAMD SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::CCOLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CCOLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CCOLAMD;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CCOLAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::CCOLAMD;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::CCOLAMD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::CCOLAMD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(59):  set_property(TARGET SuiteSparse::CCOLAMD PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(61):  set_target_properties(SuiteSparse::CCOLAMD PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::CCOLAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(10):  set_target_properties(SuiteSparse::CCOLAMD PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CCOLAMD C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib C:/vcpkg/installed/x64-windows/debug/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(9):  set_property(TARGET SuiteSparse::CCOLAMD APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(10):  set_target_properties(SuiteSparse::CCOLAMD PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/ccolamd.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CCOLAMD C:/vcpkg/installed/x64-windows/lib/ccolamd.lib C:/vcpkg/installed/x64-windows/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CCOLAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/ccolamd.dll )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CCOLAMD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(92):  set(_target_shared SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(93):  set(_target_static SuiteSparse::CCOLAMD_static )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(94):  set(_var_prefix CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(96):  if(NOT ON AND NOT TARGET SuiteSparse::CCOLAMD )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(101):  get_target_property(CCOLAMD_INCLUDE_DIR SuiteSparse::CCOLAMD INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(102):  if(CCOLAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(104):  list(GET CCOLAMD_INCLUDE_DIR 0 CCOLAMD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(106):  get_target_property(CCOLAMD_LIBRARY SuiteSparse::CCOLAMD IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(107):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(108):  get_target_property(_library_chk SuiteSparse::CCOLAMD IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(109):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(113):  if(TARGET SuiteSparse::CCOLAMD_static )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(118):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(120):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(121):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(124):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(130):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(132):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(133):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(134):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(135):  get_target_property(_library_chk SuiteSparse::CCOLAMD IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(137):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(138):  set(CCOLAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(141):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(148):  if(TARGET SuiteSparse::CCOLAMD_static AND NOT CCOLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(133):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(134):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(141):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(148):  if(TARGET SuiteSparse::CCOLAMD_static AND NOT CCOLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(133):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(134):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(141):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(148):  if(TARGET SuiteSparse::CCOLAMD_static AND NOT CCOLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(133):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(134):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(141):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(148):  if(TARGET SuiteSparse::CCOLAMD_static AND NOT CCOLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(133):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(134):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(141):  if(NOT CCOLAMD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(148):  if(TARGET SuiteSparse::CCOLAMD_static AND NOT CCOLAMD_STATIC )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(157):  set(CCOLAMD_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(159):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(170):  suitesparse_check_exist(CCOLAMD_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(171):  suitesparse_check_exist(CCOLAMD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib _files2 )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(173):  message(STATUS CCOLAMD version: 3.3.4 )
-- CCOLAMD version: 3.3.4
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(174):  message(STATUS CCOLAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- CCOLAMD include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(175):  message(STATUS CCOLAMD library: C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib )
-- CCOLAMD library: C:/vcpkg/installed/x64-windows/debug/lib/ccolamd.lib
C:/vcpkg/installed/x64-windows/share/CCOLAMD/CCOLAMDConfig.cmake(176):  message(STATUS CCOLAMD static:   )
-- CCOLAMD static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_3_backup_var IN LISTS z_vcpkg_find_package_3_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_CCOLAMD_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_CCOLAMD_0a9b09ce12a5a1f5c7aa59b786684291903f217b39b7723e2dbb1374fecf7616_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_CCOLAMD_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT CCOLAMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(169):  if(NOT CAMD_FOUND OR NOT CCOLAMD_FOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(174):  if(NOT _dependencies_found )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(181):  include(C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(24):  if(TARGET SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CHOLMOD PATH )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(58):  add_library(SuiteSparse::CHOLMOD SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::CHOLMOD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CHOLMOD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CHOLMOD;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CHOLMOD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::CHOLMOD;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::CHOLMOD;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::CHOLMOD )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(59):  set_property(TARGET SuiteSparse::CHOLMOD PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(61):  set_target_properties(SuiteSparse::CHOLMOD PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::CHOLMOD APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(10):  set_target_properties(SuiteSparse::CHOLMOD PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig;SuiteSparse::AMD;SuiteSparse::COLAMD;SuiteSparse::CAMD;SuiteSparse::CCOLAMD IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CHOLMOD C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib C:/vcpkg/installed/x64-windows/debug/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(9):  set_property(TARGET SuiteSparse::CHOLMOD APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(10):  set_target_properties(SuiteSparse::CHOLMOD PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/cholmod.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig;SuiteSparse::AMD;SuiteSparse::COLAMD;SuiteSparse::CAMD;SuiteSparse::CCOLAMD IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CHOLMOD C:/vcpkg/installed/x64-windows/lib/cholmod.lib C:/vcpkg/installed/x64-windows/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CHOLMOD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/cholmod.dll )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CHOLMOD OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(183):  if(OFF )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(210):  set(_target_shared SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(211):  set(_target_static SuiteSparse::CHOLMOD_static )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(212):  set(_var_prefix CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(214):  if(NOT ON AND NOT TARGET SuiteSparse::CHOLMOD )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(219):  get_target_property(CHOLMOD_INCLUDE_DIR SuiteSparse::CHOLMOD INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(220):  if(CHOLMOD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(222):  list(GET CHOLMOD_INCLUDE_DIR 0 CHOLMOD_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(224):  get_target_property(CHOLMOD_LIBRARY SuiteSparse::CHOLMOD IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(225):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(226):  get_target_property(_library_chk SuiteSparse::CHOLMOD IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(227):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(231):  if(TARGET SuiteSparse::CHOLMOD_static )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(236):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(238):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(239):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(242):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(248):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(250):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(251):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(252):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(253):  get_target_property(_library_chk SuiteSparse::CHOLMOD IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(255):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(256):  set(CHOLMOD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(259):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(266):  if(TARGET SuiteSparse::CHOLMOD_static AND NOT CHOLMOD_STATIC )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(251):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(252):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(259):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(266):  if(TARGET SuiteSparse::CHOLMOD_static AND NOT CHOLMOD_STATIC )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(251):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(252):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(259):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(266):  if(TARGET SuiteSparse::CHOLMOD_static AND NOT CHOLMOD_STATIC )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(251):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(252):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(259):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(266):  if(TARGET SuiteSparse::CHOLMOD_static AND NOT CHOLMOD_STATIC )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(251):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(252):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(259):  if(NOT CHOLMOD_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(266):  if(TARGET SuiteSparse::CHOLMOD_static AND NOT CHOLMOD_STATIC )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(275):  set(CHOLMOD_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(277):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(288):  suitesparse_check_exist(CHOLMOD_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(279):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(281):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(282):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(289):  suitesparse_check_exist(CHOLMOD_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(279):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib _files2 )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(281):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(282):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(291):  message(STATUS CHOLMOD version: 5.3.0 )
-- CHOLMOD version: 5.3.0
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(292):  message(STATUS CHOLMOD include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- CHOLMOD include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(293):  message(STATUS CHOLMOD library: C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib )
-- CHOLMOD library: C:/vcpkg/installed/x64-windows/debug/lib/cholmod.lib
C:/vcpkg/installed/x64-windows/share/CHOLMOD/CHOLMODConfig.cmake(294):  message(STATUS CHOLMOD static:   )
-- CHOLMOD static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_CHOLMOD_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_CHOLMOD_e65588087650a2fdd162df55e2c6bd893beb5428f5fafe55687ca6f4f4dc6cb2_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_CHOLMOD_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT CHOLMOD_FOUND )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(3):  find_dependency(CXSparse CONFIG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash CXSparse;CONFIG; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_CXSparse_84204b5e1233968faf851b394f60236e0eb7b1dbc6e200392e6e38c775398499_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_CXSparse_HASH_STACK 84204b5e1233968faf851b394f60236e0eb7b1dbc6e200392e6e38c775398499 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(g2o_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(g2o_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_CXSparse_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(CXSparse CONFIG QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name CXSparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN CONFIG;QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER CXSparse z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/cxsparse/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_CXSparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/cxsparse/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(CXSparse STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(cxsparse STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(CXSparse CONFIG;QUIET )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(12):  set(PACKAGE_VERSION 4.4.1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(18):  if(4.4.1 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 4 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 4 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(35):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/CXSparse/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(37):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(44):  macro(check_required_components _NAME )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(56):  set(CXSPARSE_DATE June 20, 2024 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(57):  set(CXSPARSE_VERSION_MAJOR 4 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(58):  set(CXSPARSE_VERSION_MINOR 4 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(59):  set(CXSPARSE_VERSION_PATCH 1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(60):  set(CXSPARSE_VERSION 4.4.1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(63):  include(CMakeFindDependencyMacro )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(57):  macro(find_dependency dep )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(66):  if(OFF )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(76):  else()
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(77):  if(NOT TARGET SuiteSparse::SuiteSparseConfig )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(81):  if(NOT SuiteSparse_config_FOUND )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(88):  include(C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.29 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(23):  list(APPEND _cmake_expected_targets SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(24):  if(TARGET SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(27):  list(APPEND _cmake_targets_not_defined SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/CXSparse PATH )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(58):  add_library(SuiteSparse::CXSparse SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SuiteSparse::CXSparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CXSparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CXSparse;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;SuiteSparse::CXSparse;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;SuiteSparse::CXSparse;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(SuiteSparse::CXSparse;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name SuiteSparse::CXSparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(59):  set_property(TARGET SuiteSparse::CXSparse PROPERTY SYSTEM 0 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(61):  set_target_properties(SuiteSparse::CXSparse PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/suitesparse;$<TARGET_PROPERTY:SuiteSparse::SuiteSparseConfig,INTERFACE_INCLUDE_DIRECTORIES> )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(66):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(67):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(9):  set_property(TARGET SuiteSparse::CXSparse APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(10):  set_target_properties(SuiteSparse::CXSparse PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CXSparse C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib C:/vcpkg/installed/x64-windows/debug/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-debug.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(68):  include(C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(9):  set_property(TARGET SuiteSparse::CXSparse APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(10):  set_target_properties(SuiteSparse::CXSparse PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/cxsparse.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::SuiteSparseConfig IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(16):  list(APPEND _cmake_import_check_targets SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(17):  list(APPEND _cmake_import_check_files_for_SuiteSparse::CXSparse C:/vcpkg/installed/x64-windows/lib/cxsparse.lib C:/vcpkg/installed/x64-windows/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets-release.cmake(20):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(70):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(71):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(74):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(77):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CXSparse OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(82):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/cxsparse.dll )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(78):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_SuiteSparse::CXSparse OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(81):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(95):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(96):  unset(_cmake_import_check_files_for_SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(98):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(99):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseTargets.cmake(106):  cmake_policy(POP )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(92):  set(_target_shared SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(93):  set(_target_static SuiteSparse::CXSparse_static )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(94):  set(_var_prefix CXSPARSE )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(96):  if(NOT ON AND NOT TARGET SuiteSparse::CXSparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(101):  get_target_property(CXSPARSE_INCLUDE_DIR SuiteSparse::CXSparse INTERFACE_INCLUDE_DIRECTORIES )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(102):  if(CXSPARSE_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(104):  list(GET CXSPARSE_INCLUDE_DIR 0 CXSPARSE_INCLUDE_DIR )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(106):  get_target_property(CXSPARSE_LIBRARY SuiteSparse::CXSparse IMPORTED_IMPLIB )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(107):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(108):  get_target_property(_library_chk SuiteSparse::CXSparse IMPORTED_LOCATION )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(109):  if(EXISTS _library_chk-NOTFOUND )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(113):  if(TARGET SuiteSparse::CXSparse_static )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(118):  set(_config_types Debug Release RelWithDebInfo MinSizeRel None )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(120):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(121):  if(_isMultiConfig )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(124):  list(PREPEND _config_types Debug;Release;MinSizeRel;RelWithDebInfo )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(130):  list(REMOVE_DUPLICATES _config_types )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(132):  foreach(_config Debug;Release;MinSizeRel;RelWithDebInfo;None )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(133):  string(TOUPPER Debug _uc_config )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(134):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(135):  get_target_property(_library_chk SuiteSparse::CXSparse IMPORTED_IMPLIB_DEBUG )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(137):  if(EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(138):  set(CXSPARSE_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(141):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(148):  if(TARGET SuiteSparse::CXSparse_static AND NOT CXSPARSE_STATIC )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(133):  string(TOUPPER Release _uc_config )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(134):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(141):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(148):  if(TARGET SuiteSparse::CXSparse_static AND NOT CXSPARSE_STATIC )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(133):  string(TOUPPER MinSizeRel _uc_config )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(134):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(141):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(148):  if(TARGET SuiteSparse::CXSparse_static AND NOT CXSPARSE_STATIC )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(133):  string(TOUPPER RelWithDebInfo _uc_config )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(134):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(141):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(148):  if(TARGET SuiteSparse::CXSparse_static AND NOT CXSPARSE_STATIC )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(133):  string(TOUPPER None _uc_config )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(134):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(141):  if(NOT CXSPARSE_LIBRARY )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(148):  if(TARGET SuiteSparse::CXSparse_static AND NOT CXSPARSE_STATIC )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(157):  set(CXSPARSE_LIBRARIES C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(159):  macro(suitesparse_check_exist _var _files )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(170):  suitesparse_check_exist(CXSPARSE_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/include/suitesparse _files2 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/include/suitesparse )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(171):  suitesparse_check_exist(CXSPARSE_LIBRARY C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(161):  string(GENEX_STRIP C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib _files2 )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(163):  foreach(_file C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(164):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(173):  message(STATUS CXSparse version: 4.4.1 )
-- CXSparse version: 4.4.1
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(174):  message(STATUS CXSparse include: C:/vcpkg/installed/x64-windows/include/suitesparse )
-- CXSparse include: C:/vcpkg/installed/x64-windows/include/suitesparse
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(175):  message(STATUS CXSparse library: C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib )
-- CXSparse library: C:/vcpkg/installed/x64-windows/debug/lib/cxsparse.lib
C:/vcpkg/installed/x64-windows/share/CXSparse/CXSparseConfig.cmake(176):  message(STATUS CXSparse static:   )
-- CXSparse static:  
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_CXSparse_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_CXSparse_84204b5e1233968faf851b394f60236e0eb7b1dbc6e200392e6e38c775398499_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_CXSparse_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT CXSparse_FOUND )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(5):  find_dependency(Eigen3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash Eigen3;; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_Eigen3_c318c27e27b0e812c2bd8de463d29df560bbdefe7744e84a838713e81a5f697e_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_Eigen3_HASH_STACK c318c27e27b0e812c2bd8de463d29df560bbdefe7744e84a838713e81a5f697e )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(g2o_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(g2o_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_Eigen3_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(Eigen3  QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER Eigen3 z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_Eigen3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/eigen3/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(Eigen3 STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(eigen3 STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(Eigen3 QUIET )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(12):  set(PACKAGE_VERSION 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(16):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(18):  if(3.4.0 MATCHES ^([0-9]+)\. )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(41):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(44):  else()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(56):  if(8 STREQUAL  OR  STREQUAL  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3ConfigVersion.cmake(57):  return()
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(9):  get_filename_component(PACKAGE_PREFIX_DIR C:/vcpkg/installed/x64-windows/share/eigen3/../../ ABSOLUTE )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(11):  macro(set_and_check _var _file )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(20):  if(NOT TARGET Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(26):  set(EIGEN3_FOUND 1 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(27):  set(EIGEN3_USE_FILE C:/vcpkg/installed/x64-windows/share/eigen3/UseEigen3.cmake )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(29):  set(EIGEN3_DEFINITIONS  )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(30):  set(EIGEN3_INCLUDE_DIR C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(31):  set(EIGEN3_INCLUDE_DIRS C:/vcpkg/installed/x64-windows/include/eigen3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(32):  set(EIGEN3_ROOT_DIR C:/vcpkg/installed/x64-windows )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(34):  set(EIGEN3_VERSION_STRING 3.4.0 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(35):  set(EIGEN3_VERSION_MAJOR 3 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(36):  set(EIGEN3_VERSION_MINOR 4 )
C:/vcpkg/installed/x64-windows/share/eigen3/Eigen3Config.cmake(37):  set(EIGEN3_VERSION_PATCH 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_Eigen3_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_Eigen3_c318c27e27b0e812c2bd8de463d29df560bbdefe7744e84a838713e81a5f697e_FOUND 1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT Eigen3_FOUND )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(7):  if(1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(8):  find_dependency(OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(58):  string(SHA256 cmake_fd_call_hash OpenGL;; )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(59):  if(_CMAKE_OpenGL_b957e6d7b80e86e1522c1ed48590dd2751783c5396be18fc3cd32dc58ea6f12d_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(61):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(62):  list(APPEND _CMAKE_OpenGL_HASH_STACK b957e6d7b80e86e1522c1ed48590dd2751783c5396be18fc3cd32dc58ea6f12d )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(63):  set(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(64):  if(g2o_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(65):  set(cmake_fd_quiet_arg QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(67):  set(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(68):  if(g2o_FIND_REQUIRED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(72):  get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY _CMAKE_OpenGL_TRANSITIVE_DEPENDENCY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(76):  find_package(OpenGL  QUIET  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(777):  if(VCPKG_TRACE_FIND_PACKAGE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(785):  math(EXPR z_vcpkg_find_package_backup_id 1 + 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(786):  set(z_vcpkg_find_package_package_name OpenGL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(787):  set(z_vcpkg_find_package_2_ARGN QUIET )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(788):  set(z_vcpkg_find_package_2_backup_vars  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(790):  if(z_vcpkg_find_package_backup_id EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(825):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL visionOS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(833):  string(TOLOWER OpenGL z_vcpkg_find_package_lowercase_package_name )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(834):  set(z_vcpkg_find_package_vcpkg_cmake_wrapper_path C:/vcpkg/installed/x64-windows/share/opengl/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(836):  if(CMAKE_DISABLE_FIND_PACKAGE_OpenGL )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(839):  elseif(EXISTS C:/vcpkg/installed/x64-windows/share/opengl/vcpkg-cmake-wrapper.cmake )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(851):  elseif(z_vcpkg_find_package_package_name STREQUAL Boost AND EXISTS C:/vcpkg/installed/x64-windows/include/boost )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(865):  elseif(z_vcpkg_find_package_package_name STREQUAL ICU AND EXISTS C:/vcpkg/installed/x64-windows/include/unicode/utf.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(872):  elseif(z_vcpkg_find_package_package_name STREQUAL GSL AND EXISTS C:/vcpkg/installed/x64-windows/include/gsl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(884):  elseif(OpenGL STREQUAL CURL AND EXISTS C:/vcpkg/installed/x64-windows/include/curl )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(893):  elseif(opengl STREQUAL grpc AND EXISTS C:/vcpkg/installed/x64-windows/share/grpc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(895):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(896):  _find_package(OpenGL QUIET )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(210):  set(_OpenGL_REQUIRED_VARS OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(213):  foreach(component  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(218):  set(_OpenGL_CACHE_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(220):  if(WIN32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(222):  if(BORLAND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(225):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(226):  set(OPENGL_gl_LIBRARY opengl32 CACHE STRING OpenGL library for win32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(227):  set(OPENGL_glu_LIBRARY glu32 CACHE STRING GLU library for win32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(230):  list(APPEND _OpenGL_CACHE_VARS OPENGL_gl_LIBRARY OPENGL_glu_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(522):  if(OPENGL_xmesa_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(524):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(525):  set(OPENGL_XMESA_FOUND NO )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(528):  if(OPENGL_glu_LIBRARY AND ( WIN32 OR OPENGL_GLU_INCLUDE_DIR ) )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(529):  set(OPENGL_GLU_FOUND YES )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(537):  if(NOT OPENGL_opengl_LIBRARY AND NOT OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(539):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(540):  set(OpenGL_OpenGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(543):  if(OPENGL_glx_LIBRARY AND OPENGL_GLX_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(545):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(546):  set(OpenGL_GLX_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(549):  if(OPENGL_egl_LIBRARY AND OPENGL_EGL_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(551):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(552):  set(OpenGL_EGL_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(555):  if(OPENGL_gles2_LIBRARY AND OPENGL_GLES2_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(557):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(558):  set(OpenGL_GLES2_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(561):  if(OPENGL_gles3_LIBRARY AND OPENGL_GLES3_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(563):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(564):  set(OpenGL_GLES3_FOUND FALSE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(568):  if(OPENGL_EGL_INCLUDE_DIR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(572):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(213):  include(C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(33):  function(find_package_message pkg msg details )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(216):  cmake_policy(PUSH )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(218):  cmake_policy(SET CMP0012 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(220):  cmake_policy(SET CMP0057 NEW )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(224):  macro(_FPHSA_FAILURE_MESSAGE _msg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(243):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(278):  function(FIND_PACKAGE_CHECK_VERSION version result )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(378):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(614):  cmake_policy(POP )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(573):  if(CMAKE_FIND_PACKAGE_NAME STREQUAL GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(579):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenGL REQUIRED_VARS OPENGL_gl_LIBRARY HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(381):  set(options CONFIG_MODE HANDLE_COMPONENTS NAME_MISMATCHED HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(382):  set(oneValueArgs FAIL_MESSAGE REASON_FAILURE_MESSAGE VERSION_VAR FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(383):  set(multiValueArgs REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(386):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(387):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE REQUIRED_VARS INDEX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(389):  unset(FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(390):  if(DEFINED FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(406):  if(8 EQUAL -1 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(410):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(411):  cmake_parse_arguments(FPHSA CONFIG_MODE;HANDLE_COMPONENTS;NAME_MISMATCHED;HANDLE_VERSION_RANGE FAIL_MESSAGE;REASON_FAILURE_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS REQUIRED_VARS OPENGL_gl_LIBRARY;HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(413):  if(FPHSA_UNPARSED_ARGUMENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(417):  if(NOT FPHSA_FAIL_MESSAGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(418):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(423):  if(FPHSA_CONFIG_MODE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(429):  if(NOT FPHSA_REQUIRED_VARS AND NOT FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(434):  if(DEFINED FPHSA_NAME_MISMATCHED_override )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(438):  if(DEFINED CMAKE_FIND_PACKAGE_NAME AND NOT FPHSA_NAME_MISMATCHED AND NOT _NAME STREQUAL CMAKE_FIND_PACKAGE_NAME )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(449):  if(OpenGL_FIND_VERSION_RANGE AND NOT FPHSA_HANDLE_VERSION_RANGE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(457):  set(_CMAKE_FPHSA_PACKAGE_NAME OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(461):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(462):  set(FPHSA_FAIL_MESSAGE Could NOT find OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(465):  if(FPHSA_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(466):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(469):  string(TOUPPER OpenGL _NAME_UPPER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(470):  string(TOLOWER OpenGL _NAME_LOWER )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(472):  if(FPHSA_FOUND_VAR )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(480):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(481):  set(_FOUND_VAR OPENGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(486):  set(MISSING_VARS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(487):  set(DETAILS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(489):  set(FPHSA_FOUND_OpenGL TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(490):  foreach(_CURRENT_VAR OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(491):  if(NOT OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(494):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(495):  string(APPEND DETAILS [opengl32] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(498):  if(FPHSA_FOUND_OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(499):  set(OpenGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(500):  set(OPENGL_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(507):  unset(FOUND_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(508):  unset(MISSING_COMPONENTS_MSG )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(510):  if(FPHSA_HANDLE_COMPONENTS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(511):  foreach(comp  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(533):  set(COMPONENT_MSG   )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(534):  string(APPEND DETAILS [c ] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(538):  set(VERSION_MSG  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(539):  set(VERSION_OK TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(543):  if(DEFINED OpenGL_FIND_VERSION )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(568):  else()
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(570):  if(DEFINED  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(575):  if(VERSION_OK )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(576):  string(APPEND DETAILS [v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(583):  if(OpenGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(584):  FIND_PACKAGE_MESSAGE(OpenGL Found OpenGL: opengl32    [opengl32][c ][v()] )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageMessage.cmake(35):  if(NOT OpenGL_FIND_QUIETLY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(609):  set(OpenGL_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindPackageHandleStandardArgs.cmake(610):  set(OPENGL_FOUND TRUE PARENT_SCOPE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(581):  unset(FPHSA_NAME_MISMATCHED )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(582):  unset(_OpenGL_REQUIRED_VARS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(585):  if(OPENGL_FOUND )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(586):  set(OPENGL_INCLUDE_DIRS  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(590):  if(OPENGL_opengl_LIBRARY AND NOT TARGET OpenGL::OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(607):  if(OpenGL_GLX_FOUND AND NOT TARGET OpenGL::GLX AND TARGET OpenGL::OpenGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(626):  if(OpenGL_GLES2_FOUND AND NOT TARGET OpenGL::GLES2 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(661):  if(OpenGL_GLES3_FOUND AND NOT TARGET OpenGL::GLES3 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(693):  if(OPENGL_gl_LIBRARY AND NOT TARGET OpenGL::GL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(706):  elseif(NOT TARGET OpenGL::GL AND TARGET OpenGL::OpenGL AND TARGET OpenGL::GLX )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(722):  if(_OpenGL_EGL_IMPL AND OpenGL_EGL_FOUND AND NOT TARGET OpenGL::EGL )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(740):  if(OPENGL_GLU_FOUND AND NOT TARGET OpenGL::GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(759):  if(OPENGL_gl_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(760):  set(OPENGL_LIBRARIES opengl32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(767):  if(TARGET OpenGL::GLU )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(768):  list(APPEND OPENGL_LIBRARIES glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(772):  list(REMOVE_DUPLICATES OPENGL_INCLUDE_DIRS )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(775):  set(OPENGL_LIBRARY opengl32;glu32 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(777):  set(OPENGL_INCLUDE_PATH  )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(779):  mark_as_advanced(OPENGL_gl_LIBRARY;OPENGL_glu_LIBRARY )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/FindOpenGL.cmake(780):  unset(_OpenGL_CACHE_VARS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_2_backup_var IN LISTS z_vcpkg_find_package_2_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(80):  list(POP_BACK _CMAKE_OpenGL_HASH_STACK cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(81):  set(_CMAKE_OpenGL_b957e6d7b80e86e1522c1ed48590dd2751783c5396be18fc3cd32dc58ea6f12d_FOUND TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(83):  if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(84):  set_property(GLOBAL PROPERTY _CMAKE_OpenGL_TRANSITIVE_DEPENDENCY TRUE )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(87):  unset(cmake_fd_alreadyTransitive )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(88):  unset(cmake_fd_call_hash )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(89):  unset(cmake_fd_quiet_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(90):  unset(cmake_fd_required_arg )
C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake(91):  if(NOT OpenGL_FOUND )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(12):  if(0 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oConfig.cmake(16):  include(C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(3):  if(3.31 LESS 2.8 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 3.0.0 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(9):  cmake_policy(PUSH )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(10):  cmake_policy(VERSION 3.0.0...3.29 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(19):  set(_cmake_targets_defined  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(20):  set(_cmake_targets_not_defined  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(21):  set(_cmake_expected_targets  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS g2o::freeglut_minimal g2o::g2o_ceres_ad g2o::stuff g2o::opengl_helper g2o::core g2o::types_slam2d g2o::types_slam2d_addons g2o::types_data g2o::types_sclam2d g2o::types_slam3d g2o::types_slam3d_addons g2o::types_sba g2o::types_icp g2o::types_sim3 g2o::solver_pcg g2o::solver_dense g2o::solver_slam2d_linear g2o::solver_structure_only g2o::solver_csparse g2o::csparse_extension g2o::solver_cholmod g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::g2o_ceres_ad )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::g2o_ceres_ad )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::g2o_ceres_ad )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(23):  list(APPEND _cmake_expected_targets g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(24):  if(TARGET g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(26):  else()
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(27):  list(APPEND _cmake_targets_not_defined g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(30):  unset(_cmake_expected_target )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(44):  unset(_cmake_targets_defined )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(45):  unset(_cmake_targets_not_defined )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(46):  unset(_cmake_expected_targets )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake PATH )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share/g2o PATH )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX C:/vcpkg/installed/x64-windows/share PATH )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(53):  if(_IMPORT_PREFIX STREQUAL / )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(58):  add_library(g2o::freeglut_minimal SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::freeglut_minimal )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::freeglut_minimal )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::freeglut_minimal;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::freeglut_minimal;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::freeglut_minimal;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::freeglut_minimal;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::freeglut_minimal )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(60):  set_target_properties(g2o::freeglut_minimal PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/freeglut_minimal;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES OpenGL::GL;OpenGL::GLU )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(67):  add_library(g2o::g2o_ceres_ad INTERFACE IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::g2o_ceres_ad )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::g2o_ceres_ad )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::g2o_ceres_ad;INTERFACE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::g2o_ceres_ad;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::g2o_ceres_ad;INTERFACE;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::g2o_ceres_ad;INTERFACE;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::g2o_ceres_ad )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(69):  set_target_properties(g2o::g2o_ceres_ad PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(74):  add_library(g2o::stuff SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::stuff )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::stuff )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::stuff;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::stuff;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::stuff;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::stuff;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::stuff )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(76):  set_target_properties(g2o::stuff PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/stuff;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(83):  add_library(g2o::opengl_helper SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::opengl_helper )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::opengl_helper )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::opengl_helper;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::opengl_helper;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::opengl_helper;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::opengl_helper;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::opengl_helper )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(85):  set_target_properties(g2o::opengl_helper PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/stuff;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES OpenGL::GL;OpenGL::GLU;Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(92):  add_library(g2o::core SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::core;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::core;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::core;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::core;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::core )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(94):  set_target_properties(g2o::core PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/core;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::stuff;Eigen3::Eigen;g2o::g2o_ceres_ad )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(101):  add_library(g2o::types_slam2d SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_slam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_slam2d;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_slam2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_slam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(103):  set_target_properties(g2o::types_slam2d PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/slam2d;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(110):  add_library(g2o::types_slam2d_addons SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_slam2d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d_addons;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam2d_addons;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_slam2d_addons;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_slam2d_addons;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_slam2d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(112):  set_target_properties(g2o::types_slam2d_addons PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/slam2d_addons;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::types_slam2d;g2o::core;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(119):  add_library(g2o::types_data SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_data )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_data )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_data;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_data;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_data;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_data;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_data )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(121):  set_target_properties(g2o::types_data PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/data;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core;g2o::types_slam2d;g2o::freeglut_minimal;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(128):  add_library(g2o::types_sclam2d SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_sclam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sclam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sclam2d;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sclam2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_sclam2d;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_sclam2d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_sclam2d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(130):  set_target_properties(g2o::types_sclam2d PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/sclam2d INTERFACE_LINK_LIBRARIES g2o::types_slam2d;g2o::core;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(137):  add_library(g2o::types_slam3d SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_slam3d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_slam3d;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_slam3d;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_slam3d )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(139):  set_target_properties(g2o::types_slam3d PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/slam3d;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(146):  add_library(g2o::types_slam3d_addons SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_slam3d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d_addons;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_slam3d_addons;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_slam3d_addons;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_slam3d_addons;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_slam3d_addons )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(148):  set_target_properties(g2o::types_slam3d_addons PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/slam3d_addons;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::types_slam3d;g2o::core;g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(155):  add_library(g2o::types_sba SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_sba )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sba )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sba;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sba;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_sba;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_sba;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_sba )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(157):  set_target_properties(g2o::types_sba PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/sba;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core;g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(164):  add_library(g2o::types_icp SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_icp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_icp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_icp;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_icp;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_icp;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_icp;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_icp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(166):  set_target_properties(g2o::types_icp PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/icp;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::types_sba;g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(173):  add_library(g2o::types_sim3 SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::types_sim3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sim3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sim3;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::types_sim3;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::types_sim3;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::types_sim3;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::types_sim3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(175):  set_target_properties(g2o::types_sim3 PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/types/sim3;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(182):  add_library(g2o::solver_pcg SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_pcg )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_pcg )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_pcg;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_pcg;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_pcg;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_pcg;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_pcg )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(184):  set_target_properties(g2o::solver_pcg PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/solvers/pcg;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(191):  add_library(g2o::solver_dense SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_dense )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_dense )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_dense;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_dense;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_dense;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_dense;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_dense )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(193):  set_target_properties(g2o::solver_dense PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(200):  add_library(g2o::solver_slam2d_linear SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_slam2d_linear )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_slam2d_linear )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_slam2d_linear;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_slam2d_linear;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_slam2d_linear;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_slam2d_linear;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_slam2d_linear )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(202):  set_target_properties(g2o::solver_slam2d_linear PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::solver_eigen;g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(209):  add_library(g2o::solver_structure_only SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_structure_only )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_structure_only )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_structure_only;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_structure_only;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_structure_only;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_structure_only;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_structure_only )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(211):  set_target_properties(g2o::solver_structure_only PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(218):  add_library(g2o::solver_csparse SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_csparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_csparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_csparse;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_csparse;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_csparse;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_csparse;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_csparse )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(220):  set_target_properties(g2o::solver_csparse PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/solvers/csparse;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::csparse_extension;g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(227):  add_library(g2o::csparse_extension SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::csparse_extension )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::csparse_extension )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::csparse_extension;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::csparse_extension;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::csparse_extension;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::csparse_extension;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::csparse_extension )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(229):  set_target_properties(g2o::csparse_extension PROPERTIES INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/solvers/csparse;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::stuff;SuiteSparse::CXSparse;Eigen3::Eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(235):  add_library(g2o::solver_cholmod SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_cholmod )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_cholmod )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_cholmod;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_cholmod;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_cholmod;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_cholmod;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_cholmod )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(237):  set_target_properties(g2o::solver_cholmod PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/solvers/cholmod INTERFACE_LINK_LIBRARIES g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(244):  add_library(g2o::solver_eigen SHARED IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 3 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG g2o::solver_eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_eigen;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;g2o::solver_eigen;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;g2o::solver_eigen;SHARED;IMPORTED 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(g2o::solver_eigen;SHARED;IMPORTED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name g2o::solver_eigen )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(246):  set_target_properties(g2o::solver_eigen PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_17 INTERFACE_INCLUDE_DIRECTORIES C:/vcpkg/installed/x64-windows/include/g2o/solvers/eigen;C:/vcpkg/installed/x64-windows/include INTERFACE_LINK_LIBRARIES g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(253):  file(GLOB _cmake_config_files C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-*.cmake )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(254):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(255):  include(C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(9):  set_property(TARGET g2o::freeglut_minimal APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(10):  set_target_properties(g2o::freeglut_minimal PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_ext_freeglut_minimal.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(15):  list(APPEND _cmake_import_check_targets g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(16):  list(APPEND _cmake_import_check_files_for_g2o::freeglut_minimal C:/vcpkg/installed/x64-windows/debug/lib/g2o_ext_freeglut_minimal.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(19):  set_property(TARGET g2o::stuff APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(20):  set_target_properties(g2o::stuff PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_stuff.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(25):  list(APPEND _cmake_import_check_targets g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(26):  list(APPEND _cmake_import_check_files_for_g2o::stuff C:/vcpkg/installed/x64-windows/debug/lib/g2o_stuff.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(29):  set_property(TARGET g2o::opengl_helper APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(30):  set_target_properties(g2o::opengl_helper PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_opengl_helper.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(35):  list(APPEND _cmake_import_check_targets g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(36):  list(APPEND _cmake_import_check_files_for_g2o::opengl_helper C:/vcpkg/installed/x64-windows/debug/lib/g2o_opengl_helper.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(39):  set_property(TARGET g2o::core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(40):  set_target_properties(g2o::core PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_core.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(45):  list(APPEND _cmake_import_check_targets g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(46):  list(APPEND _cmake_import_check_files_for_g2o::core C:/vcpkg/installed/x64-windows/debug/lib/g2o_core.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(49):  set_property(TARGET g2o::types_slam2d APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(50):  set_target_properties(g2o::types_slam2d PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(55):  list(APPEND _cmake_import_check_targets g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(56):  list(APPEND _cmake_import_check_files_for_g2o::types_slam2d C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(59):  set_property(TARGET g2o::types_slam2d_addons APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(60):  set_target_properties(g2o::types_slam2d_addons PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d_addons.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(65):  list(APPEND _cmake_import_check_targets g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(66):  list(APPEND _cmake_import_check_files_for_g2o::types_slam2d_addons C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d_addons.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(69):  set_property(TARGET g2o::types_data APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(70):  set_target_properties(g2o::types_data PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_data.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(75):  list(APPEND _cmake_import_check_targets g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(76):  list(APPEND _cmake_import_check_files_for_g2o::types_data C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_data.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(79):  set_property(TARGET g2o::types_sclam2d APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(80):  set_target_properties(g2o::types_sclam2d PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sclam2d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(85):  list(APPEND _cmake_import_check_targets g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(86):  list(APPEND _cmake_import_check_files_for_g2o::types_sclam2d C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sclam2d.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(89):  set_property(TARGET g2o::types_slam3d APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(90):  set_target_properties(g2o::types_slam3d PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(95):  list(APPEND _cmake_import_check_targets g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(96):  list(APPEND _cmake_import_check_files_for_g2o::types_slam3d C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(99):  set_property(TARGET g2o::types_slam3d_addons APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(100):  set_target_properties(g2o::types_slam3d_addons PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d_addons.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(105):  list(APPEND _cmake_import_check_targets g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(106):  list(APPEND _cmake_import_check_files_for_g2o::types_slam3d_addons C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d_addons.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(109):  set_property(TARGET g2o::types_sba APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(110):  set_target_properties(g2o::types_sba PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sba.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(115):  list(APPEND _cmake_import_check_targets g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(116):  list(APPEND _cmake_import_check_files_for_g2o::types_sba C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sba.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(119):  set_property(TARGET g2o::types_icp APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(120):  set_target_properties(g2o::types_icp PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_icp.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(125):  list(APPEND _cmake_import_check_targets g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(126):  list(APPEND _cmake_import_check_files_for_g2o::types_icp C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_icp.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(129):  set_property(TARGET g2o::types_sim3 APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(130):  set_target_properties(g2o::types_sim3 PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sim3.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(135):  list(APPEND _cmake_import_check_targets g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(136):  list(APPEND _cmake_import_check_files_for_g2o::types_sim3 C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sim3.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(139):  set_property(TARGET g2o::solver_pcg APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(140):  set_target_properties(g2o::solver_pcg PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_pcg.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(145):  list(APPEND _cmake_import_check_targets g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(146):  list(APPEND _cmake_import_check_files_for_g2o::solver_pcg C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_pcg.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(149):  set_property(TARGET g2o::solver_dense APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(150):  set_target_properties(g2o::solver_dense PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_dense.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(155):  list(APPEND _cmake_import_check_targets g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(156):  list(APPEND _cmake_import_check_files_for_g2o::solver_dense C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_dense.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(159):  set_property(TARGET g2o::solver_slam2d_linear APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(160):  set_target_properties(g2o::solver_slam2d_linear PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_slam2d_linear.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(165):  list(APPEND _cmake_import_check_targets g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(166):  list(APPEND _cmake_import_check_files_for_g2o::solver_slam2d_linear C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_slam2d_linear.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(169):  set_property(TARGET g2o::solver_structure_only APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(170):  set_target_properties(g2o::solver_structure_only PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_structure_only.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(175):  list(APPEND _cmake_import_check_targets g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(176):  list(APPEND _cmake_import_check_files_for_g2o::solver_structure_only C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_structure_only.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(179):  set_property(TARGET g2o::solver_csparse APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(180):  set_target_properties(g2o::solver_csparse PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_csparse.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(185):  list(APPEND _cmake_import_check_targets g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(186):  list(APPEND _cmake_import_check_files_for_g2o::solver_csparse C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_csparse.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(189):  set_property(TARGET g2o::csparse_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(190):  set_target_properties(g2o::csparse_extension PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_csparse_extension.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(195):  list(APPEND _cmake_import_check_targets g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(196):  list(APPEND _cmake_import_check_files_for_g2o::csparse_extension C:/vcpkg/installed/x64-windows/debug/lib/g2o_csparse_extension.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(199):  set_property(TARGET g2o::solver_cholmod APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(200):  set_target_properties(g2o::solver_cholmod PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_cholmod.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG SuiteSparse::CHOLMOD IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(206):  list(APPEND _cmake_import_check_targets g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(207):  list(APPEND _cmake_import_check_files_for_g2o::solver_cholmod C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_cholmod.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(210):  set_property(TARGET g2o::solver_eigen APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(211):  set_target_properties(g2o::solver_eigen PROPERTIES IMPORTED_IMPLIB_DEBUG C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_eigen.lib IMPORTED_LOCATION_DEBUG C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(216):  list(APPEND _cmake_import_check_targets g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(217):  list(APPEND _cmake_import_check_files_for_g2o::solver_eigen C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_eigen.lib C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-debug.cmake(220):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(255):  include(C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(9):  set_property(TARGET g2o::freeglut_minimal APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(10):  set_target_properties(g2o::freeglut_minimal PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_ext_freeglut_minimal.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(15):  list(APPEND _cmake_import_check_targets g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(16):  list(APPEND _cmake_import_check_files_for_g2o::freeglut_minimal C:/vcpkg/installed/x64-windows/lib/g2o_ext_freeglut_minimal.lib C:/vcpkg/installed/x64-windows/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(19):  set_property(TARGET g2o::stuff APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(20):  set_target_properties(g2o::stuff PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_stuff.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(25):  list(APPEND _cmake_import_check_targets g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(26):  list(APPEND _cmake_import_check_files_for_g2o::stuff C:/vcpkg/installed/x64-windows/lib/g2o_stuff.lib C:/vcpkg/installed/x64-windows/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(29):  set_property(TARGET g2o::opengl_helper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(30):  set_target_properties(g2o::opengl_helper PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_opengl_helper.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(35):  list(APPEND _cmake_import_check_targets g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(36):  list(APPEND _cmake_import_check_files_for_g2o::opengl_helper C:/vcpkg/installed/x64-windows/lib/g2o_opengl_helper.lib C:/vcpkg/installed/x64-windows/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(39):  set_property(TARGET g2o::core APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(40):  set_target_properties(g2o::core PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_core.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(45):  list(APPEND _cmake_import_check_targets g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(46):  list(APPEND _cmake_import_check_files_for_g2o::core C:/vcpkg/installed/x64-windows/lib/g2o_core.lib C:/vcpkg/installed/x64-windows/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(49):  set_property(TARGET g2o::types_slam2d APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(50):  set_target_properties(g2o::types_slam2d PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(55):  list(APPEND _cmake_import_check_targets g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(56):  list(APPEND _cmake_import_check_files_for_g2o::types_slam2d C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(59):  set_property(TARGET g2o::types_slam2d_addons APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(60):  set_target_properties(g2o::types_slam2d_addons PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d_addons.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(65):  list(APPEND _cmake_import_check_targets g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(66):  list(APPEND _cmake_import_check_files_for_g2o::types_slam2d_addons C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d_addons.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(69):  set_property(TARGET g2o::types_data APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(70):  set_target_properties(g2o::types_data PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_data.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(75):  list(APPEND _cmake_import_check_targets g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(76):  list(APPEND _cmake_import_check_files_for_g2o::types_data C:/vcpkg/installed/x64-windows/lib/g2o_types_data.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(79):  set_property(TARGET g2o::types_sclam2d APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(80):  set_target_properties(g2o::types_sclam2d PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_sclam2d.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(85):  list(APPEND _cmake_import_check_targets g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(86):  list(APPEND _cmake_import_check_files_for_g2o::types_sclam2d C:/vcpkg/installed/x64-windows/lib/g2o_types_sclam2d.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(89):  set_property(TARGET g2o::types_slam3d APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(90):  set_target_properties(g2o::types_slam3d PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(95):  list(APPEND _cmake_import_check_targets g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(96):  list(APPEND _cmake_import_check_files_for_g2o::types_slam3d C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(99):  set_property(TARGET g2o::types_slam3d_addons APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(100):  set_target_properties(g2o::types_slam3d_addons PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d_addons.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(105):  list(APPEND _cmake_import_check_targets g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(106):  list(APPEND _cmake_import_check_files_for_g2o::types_slam3d_addons C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d_addons.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(109):  set_property(TARGET g2o::types_sba APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(110):  set_target_properties(g2o::types_sba PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_sba.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(115):  list(APPEND _cmake_import_check_targets g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(116):  list(APPEND _cmake_import_check_files_for_g2o::types_sba C:/vcpkg/installed/x64-windows/lib/g2o_types_sba.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(119):  set_property(TARGET g2o::types_icp APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(120):  set_target_properties(g2o::types_icp PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_icp.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(125):  list(APPEND _cmake_import_check_targets g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(126):  list(APPEND _cmake_import_check_files_for_g2o::types_icp C:/vcpkg/installed/x64-windows/lib/g2o_types_icp.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(129):  set_property(TARGET g2o::types_sim3 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(130):  set_target_properties(g2o::types_sim3 PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_types_sim3.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(135):  list(APPEND _cmake_import_check_targets g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(136):  list(APPEND _cmake_import_check_files_for_g2o::types_sim3 C:/vcpkg/installed/x64-windows/lib/g2o_types_sim3.lib C:/vcpkg/installed/x64-windows/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(139):  set_property(TARGET g2o::solver_pcg APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(140):  set_target_properties(g2o::solver_pcg PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_pcg.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(145):  list(APPEND _cmake_import_check_targets g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(146):  list(APPEND _cmake_import_check_files_for_g2o::solver_pcg C:/vcpkg/installed/x64-windows/lib/g2o_solver_pcg.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(149):  set_property(TARGET g2o::solver_dense APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(150):  set_target_properties(g2o::solver_dense PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_dense.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(155):  list(APPEND _cmake_import_check_targets g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(156):  list(APPEND _cmake_import_check_files_for_g2o::solver_dense C:/vcpkg/installed/x64-windows/lib/g2o_solver_dense.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(159):  set_property(TARGET g2o::solver_slam2d_linear APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(160):  set_target_properties(g2o::solver_slam2d_linear PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_slam2d_linear.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(165):  list(APPEND _cmake_import_check_targets g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(166):  list(APPEND _cmake_import_check_files_for_g2o::solver_slam2d_linear C:/vcpkg/installed/x64-windows/lib/g2o_solver_slam2d_linear.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(169):  set_property(TARGET g2o::solver_structure_only APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(170):  set_target_properties(g2o::solver_structure_only PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_structure_only.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(175):  list(APPEND _cmake_import_check_targets g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(176):  list(APPEND _cmake_import_check_files_for_g2o::solver_structure_only C:/vcpkg/installed/x64-windows/lib/g2o_solver_structure_only.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(179):  set_property(TARGET g2o::solver_csparse APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(180):  set_target_properties(g2o::solver_csparse PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_csparse.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(185):  list(APPEND _cmake_import_check_targets g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(186):  list(APPEND _cmake_import_check_files_for_g2o::solver_csparse C:/vcpkg/installed/x64-windows/lib/g2o_solver_csparse.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(189):  set_property(TARGET g2o::csparse_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(190):  set_target_properties(g2o::csparse_extension PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_csparse_extension.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(195):  list(APPEND _cmake_import_check_targets g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(196):  list(APPEND _cmake_import_check_files_for_g2o::csparse_extension C:/vcpkg/installed/x64-windows/lib/g2o_csparse_extension.lib C:/vcpkg/installed/x64-windows/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(199):  set_property(TARGET g2o::solver_cholmod APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(200):  set_target_properties(g2o::solver_cholmod PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_cholmod.lib IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE SuiteSparse::CHOLMOD IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(206):  list(APPEND _cmake_import_check_targets g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(207):  list(APPEND _cmake_import_check_files_for_g2o::solver_cholmod C:/vcpkg/installed/x64-windows/lib/g2o_solver_cholmod.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(210):  set_property(TARGET g2o::solver_eigen APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(211):  set_target_properties(g2o::solver_eigen PROPERTIES IMPORTED_IMPLIB_RELEASE C:/vcpkg/installed/x64-windows/lib/g2o_solver_eigen.lib IMPORTED_LOCATION_RELEASE C:/vcpkg/installed/x64-windows/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(216):  list(APPEND _cmake_import_check_targets g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(217):  list(APPEND _cmake_import_check_files_for_g2o::solver_eigen C:/vcpkg/installed/x64-windows/lib/g2o_solver_eigen.lib C:/vcpkg/installed/x64-windows/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets-release.cmake(220):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(257):  unset(_cmake_config_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(258):  unset(_cmake_config_files )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(261):  set(_IMPORT_PREFIX )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(264):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::freeglut_minimal OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_ext_freeglut_minimal.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_ext_freeglut_minimal.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_ext_freeglut_minimal.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::stuff OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_stuff.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_stuff.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_stuff.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::opengl_helper OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_opengl_helper.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_opengl_helper.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_opengl_helper.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_core.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_core.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_core.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam2d_addons OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam2d_addons.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_slam2d_addons.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_slam2d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_data OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_data.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_data.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_data.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sclam2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sclam2d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_sclam2d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_sclam2d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam3d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam3d_addons OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_slam3d_addons.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_slam3d_addons.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_slam3d_addons.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sba OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sba.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_sba.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_sba.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_icp OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_icp.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_icp.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_icp.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sim3 OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_types_sim3.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_types_sim3.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_types_sim3.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_pcg OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_pcg.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_pcg.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_pcg.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_dense OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_dense.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_dense.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_dense.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_slam2d_linear OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_slam2d_linear.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_slam2d_linear.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_slam2d_linear.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_structure_only OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_structure_only.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_structure_only.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_structure_only.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_csparse OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_csparse.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_csparse.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_csparse.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::csparse_extension OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_csparse_extension.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_csparse_extension.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_csparse_extension.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_cholmod OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_cholmod.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_cholmod.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_cholmod.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_eigen OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/lib/g2o_solver_eigen.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/debug/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/lib/g2o_solver_eigen.lib )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(269):  if(NOT EXISTS C:/vcpkg/installed/x64-windows/bin/g2o_solver_eigen.dll )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::freeglut_minimal OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::freeglut_minimal )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::stuff OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::stuff )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::opengl_helper OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::opengl_helper )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::core OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::core )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam2d_addons OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam2d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_data OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_data )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sclam2d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sclam2d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam3d OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam3d )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_slam3d_addons OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_slam3d_addons )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sba OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sba )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_icp OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_icp )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::types_sim3 OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::types_sim3 )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_pcg OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_pcg )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_dense OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_dense )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_slam2d_linear OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_slam2d_linear )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_structure_only OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_structure_only )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_csparse OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_csparse )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::csparse_extension OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::csparse_extension )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_cholmod OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_cholmod )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(265):  if(CMAKE_VERSION VERSION_LESS 3.28 OR NOT DEFINED _cmake_import_check_xcframework_for_g2o::solver_eigen OR NOT IS_DIRECTORY  )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(268):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(282):  unset(_cmake_file )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(283):  unset(_cmake_import_check_files_for_g2o::solver_eigen )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(285):  unset(_cmake_target )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(286):  unset(_cmake_import_check_targets )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(292):  set(CMAKE_IMPORT_FILE_VERSION )
C:/vcpkg/installed/x64-windows/share/g2o/g2oTargets.cmake(293):  cmake_policy(POP )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(900):  foreach(z_vcpkg_find_package_1_backup_var IN LISTS z_vcpkg_find_package_1_backup_vars )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(908):  math(EXPR z_vcpkg_find_package_backup_id 1 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(909):  if(z_vcpkg_find_package_backup_id LESS 0 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(36):  include_directories(C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3 C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/include C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/include/CameraModels C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/Thirdparty/Sophus C:/vcpkg/installed/x64-windows/include/opencv4 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(45):  if(DEFINED Pangolin_INCLUDE_DIRS )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(50):  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/lib )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(53):  add_library(ORB_SLAM3 SHARED src/System.cc src/Tracking.cc src/LocalMapping.cc src/LoopClosing.cc src/ORBextractor.cc src/ORBmatcher.cc src/FrameDrawer.cc src/Converter.cc src/MapPoint.cc src/KeyFrame.cc src/Atlas.cc src/Map.cc src/MapDrawer.cc src/Optimizer.cc src/Frame.cc src/KeyFrameDatabase.cc src/Sim3Solver.cc src/Viewer.cc src/ImuTypes.cc src/G2oTypes.cc src/CameraModels/Pinhole.cpp src/CameraModels/KannalaBrandt8.cpp src/OptimizableTypes.cpp src/MLPnPsolver.cpp src/GeometricTools.cc src/TwoViewReconstruction.cc src/Config.cc src/Settings.cc include/System.h include/Tracking.h include/LocalMapping.h include/LoopClosing.h include/ORBextractor.h include/ORBmatcher.h include/FrameDrawer.h include/Map.h include/MapPoint.h include/KeyFrame.h include/Atlas.h include/MapDrawer.h include/Optimizer.h include/Frame.h include/KeyFrameDatabase.h include/Sim3Solver.h include/ImuTypes.h include/G2oTypes.h include/camera_models/GeometricCamera.h include/camera_models/Pinhole.h include/camera_models/KannalaBrandt8.h include/OptimizableTypes.h include/SerializationUtils.h include/MLPnPsolver.h include/GeometricTools.h include/TwoViewReconstruction.h include/Config.h include/Settings.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(640):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 58 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 58 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 57 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG ORB_SLAM3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/System.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Tracking.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/LocalMapping.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/LoopClosing.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/ORBextractor.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/ORBmatcher.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/FrameDrawer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Converter.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/MapPoint.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/KeyFrame.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Atlas.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Map.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/MapDrawer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Optimizer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Frame.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/KeyFrameDatabase.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Sim3Solver.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Viewer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/ImuTypes.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/G2oTypes.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/CameraModels/Pinhole.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/CameraModels/KannalaBrandt8.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/OptimizableTypes.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/MLPnPsolver.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/GeometricTools.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/TwoViewReconstruction.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Config.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG src/Settings.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/System.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Tracking.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/LocalMapping.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/LoopClosing.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/ORBextractor.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/ORBmatcher.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/FrameDrawer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Map.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/MapPoint.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/KeyFrame.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Atlas.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/MapDrawer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Optimizer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Frame.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/KeyFrameDatabase.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Sim3Solver.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/ImuTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/G2oTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/camera_models/GeometricCamera.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/camera_models/Pinhole.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/camera_models/KannalaBrandt8.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/OptimizableTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/SerializationUtils.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/MLPnPsolver.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/GeometricTools.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/TwoViewReconstruction.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h;include/TwoViewReconstruction.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Config.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h;include/TwoViewReconstruction.h;include/Config.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG include/Settings.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h;include/TwoViewReconstruction.h;include/Config.h;include/Settings.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h;include/TwoViewReconstruction.h;include/Config.h;include/Settings.h 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(641):  _add_library(ORB_SLAM3;SHARED;src/System.cc;src/Tracking.cc;src/LocalMapping.cc;src/LoopClosing.cc;src/ORBextractor.cc;src/ORBmatcher.cc;src/FrameDrawer.cc;src/Converter.cc;src/MapPoint.cc;src/KeyFrame.cc;src/Atlas.cc;src/Map.cc;src/MapDrawer.cc;src/Optimizer.cc;src/Frame.cc;src/KeyFrameDatabase.cc;src/Sim3Solver.cc;src/Viewer.cc;src/ImuTypes.cc;src/G2oTypes.cc;src/CameraModels/Pinhole.cpp;src/CameraModels/KannalaBrandt8.cpp;src/OptimizableTypes.cpp;src/MLPnPsolver.cpp;src/GeometricTools.cc;src/TwoViewReconstruction.cc;src/Config.cc;src/Settings.cc;include/System.h;include/Tracking.h;include/LocalMapping.h;include/LoopClosing.h;include/ORBextractor.h;include/ORBmatcher.h;include/FrameDrawer.h;include/Map.h;include/MapPoint.h;include/KeyFrame.h;include/Atlas.h;include/MapDrawer.h;include/Optimizer.h;include/Frame.h;include/KeyFrameDatabase.h;include/Sim3Solver.h;include/ImuTypes.h;include/G2oTypes.h;include/camera_models/GeometricCamera.h;include/camera_models/Pinhole.h;include/camera_models/KannalaBrandt8.h;include/OptimizableTypes.h;include/SerializationUtils.h;include/MLPnPsolver.h;include/GeometricTools.h;include/TwoViewReconstruction.h;include/Config.h;include/Settings.h )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(642):  set(target_name ORB_SLAM3 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(644):  list(FIND ARGS IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(645):  list(FIND ARGS INTERFACE INTERFACE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(646):  list(FIND ARGS ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(647):  if(IMPORTED_IDX EQUAL -1 AND INTERFACE_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(648):  get_target_property(IS_LIBRARY_SHARED ORB_SLAM3 TYPE )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(649):  if(VCPKG_APPLOCAL_DEPS AND Z_VCPKG_TARGET_TRIPLET_PLAT MATCHES windows|uwp|xbox AND ( IS_LIBRARY_SHARED STREQUAL SHARED_LIBRARY OR IS_LIBRARY_SHARED STREQUAL MODULE_LIBRARY ) )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(650):  z_vcpkg_set_powershell_path()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(187):  if(NOT DEFINED Z_VCPKG_POWERSHELL_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(188):  find_program(Z_VCPKG_PWSH_PATH pwsh )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(189):  if(Z_VCPKG_PWSH_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(191):  else()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(192):  message(DEBUG vcpkg: Could not find PowerShell Core; falling back to PowerShell )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(193):  find_program(Z_VCPKG_BUILTIN_POWERSHELL_PATH powershell )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(194):  if(Z_VCPKG_BUILTIN_POWERSHELL_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(195):  set(Z_VCPKG_POWERSHELL_PATH C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe CACHE INTERNAL The path to the PowerShell implementation to use. )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(651):  add_custom_command(TARGET ORB_SLAM3 POST_BUILD COMMAND C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary $<TARGET_FILE:ORB_SLAM3> -installedDir C:/vcpkg/installed/x64-windows$<$<CONFIG:Debug>:/debug>/bin -OutVariable out VERBATIM )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(659):  set_target_properties(ORB_SLAM3 PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(660):  set_target_properties(ORB_SLAM3 PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(114):  set(THIRDPARTY_LIBS opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(116):  if(TARGET Eigen3::Eigen )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(117):  list(APPEND THIRDPARTY_LIBS Eigen3::Eigen )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(120):  if(TARGET pangolin::pangolin )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(122):  elseif(DEFINED Pangolin_LIBRARIES )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(123):  list(APPEND THIRDPARTY_LIBS pango_core;pango_display;pango_geometry;pango_glgeometry;pango_image;pango_opengl;pango_packetstream;pango_plot;pango_python;pango_scene;pango_tools;pango_vars;pango_video;pango_windowing;tinyobj )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(129):  set(_dbow2_target  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(130):  if(DBoW2_FOUND )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(131):  foreach(t IN ITEMS DBoW2::DBoW2 DBoW2 dbow2::dbow2 unofficial-DBoW2::DBoW2 unofficial-dbow2::dbow2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(132):  if(TARGET DBoW2::DBoW2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(132):  if(TARGET DBoW2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(132):  if(TARGET dbow2::dbow2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(132):  if(TARGET unofficial-DBoW2::DBoW2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(132):  if(TARGET unofficial-dbow2::dbow2 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(137):  if(_dbow2_target )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(139):  else()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(140):  if(DEFINED DBoW2_LIBRARIES )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(141):  list(APPEND THIRDPARTY_LIBS C:/vcpkg/installed/x64-windows/lib/DBoW2.lib )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(147):  if(DEFINED DBoW2_INCLUDE_DIRS )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(148):  target_include_directories(ORB_SLAM3 PRIVATE DBoW2_INCLUDE_DIR-NOTFOUND )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(157):  set(_g2o_to_link  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(158):  if(g2o_FOUND )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(159):  foreach(t IN ITEMS g2o::core g2o::stuff g2o::types_sba g2o::types_sim3 g2o::types_slam3d g2o::solver_dense g2o::solver_csparse g2o::csparse_extension )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::core )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::core )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::stuff )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::stuff )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::types_sba )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::types_sba )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::types_sim3 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::types_sim3 )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::types_slam3d )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::types_slam3d )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::solver_dense )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::solver_dense )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::solver_csparse )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::solver_csparse )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(160):  if(TARGET g2o::csparse_extension )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(161):  list(APPEND _g2o_to_link g2o::csparse_extension )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(164):  if(_g2o_to_link STREQUAL  )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(168):  else()
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(169):  list(APPEND THIRDPARTY_LIBS g2o::core;g2o::stuff;g2o::types_sba;g2o::types_sim3;g2o::types_slam3d;g2o::solver_dense;g2o::solver_csparse;g2o::csparse_extension )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(177):  if(realsense2_FOUND )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(181):  target_link_libraries(ORB_SLAM3 PRIVATE opencv_core;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_photo;opencv_video;opencv_videoio;Eigen3::Eigen;pango_core;pango_display;pango_geometry;pango_glgeometry;pango_image;pango_opengl;pango_packetstream;pango_plot;pango_python;pango_scene;pango_tools;pango_vars;pango_video;pango_windowing;tinyobj;C:/vcpkg/installed/x64-windows/lib/DBoW2.lib;g2o::core;g2o::stuff;g2o::types_sba;g2o::types_sim3;g2o::types_slam3d;g2o::solver_dense;g2o::solver_csparse;g2o::csparse_extension )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(184):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/Examples/Monocular )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(185):  add_executable(mono_tum Examples/Monocular/mono_tum.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(599):  z_vcpkg_function_arguments(ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(152):  if(1 EQUAL 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(153):  set(z_vcpkg_function_arguments_FIRST_ARG 0 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(161):  set(ARGS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(164):  set(z_vcpkg_function_arguments_ARGC_NAME ARGC )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(165):  set(z_vcpkg_function_arguments_ARGC 2 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(167):  math(EXPR z_vcpkg_function_arguments_LAST_ARG 2 - 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(168):  if(z_vcpkg_function_arguments_LAST_ARG GREATER_EQUAL z_vcpkg_function_arguments_FIRST_ARG )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(169):  foreach(z_vcpkg_function_arguments_N RANGE 0 1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG mono_tum )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;mono_tum )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(170):  string(REPLACE ; \; z_vcpkg_function_arguments_ESCAPED_ARG Examples/Monocular/mono_tum.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(172):  set(ARGS ;mono_tum;Examples/Monocular/mono_tum.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(175):  string(SUBSTRING ;mono_tum;Examples/Monocular/mono_tum.cc 1 -1 ARGS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(600):  _add_executable(mono_tum;Examples/Monocular/mono_tum.cc )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(601):  set(target_name mono_tum )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(603):  list(FIND ARGV IMPORTED IMPORTED_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(604):  list(FIND ARGV ALIAS ALIAS_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(605):  list(FIND ARGV MACOSX_BUNDLE MACOSX_BUNDLE_IDX )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(606):  if(IMPORTED_IDX EQUAL -1 AND ALIAS_IDX EQUAL -1 )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(607):  if(VCPKG_APPLOCAL_DEPS )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(608):  if(Z_VCPKG_TARGET_TRIPLET_PLAT MATCHES windows|uwp|xbox )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(609):  z_vcpkg_set_powershell_path()
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(187):  if(NOT DEFINED Z_VCPKG_POWERSHELL_PATH )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(610):  set(EXTRA_OPTIONS  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(611):  if(X_VCPKG_APPLOCAL_DEPS_SERIALIZED )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(614):  add_custom_command(TARGET mono_tum POST_BUILD COMMAND C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary $<TARGET_FILE:mono_tum> -installedDir C:/vcpkg/installed/x64-windows$<$<CONFIG:Debug>:/debug>/bin -OutVariable out VERBATIM  )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(634):  set_target_properties(mono_tum PROPERTIES VS_USER_PROPS do_not_import_user.props )
C:/vcpkg/scripts/buildsystems/vcpkg.cmake(635):  set_target_properties(mono_tum PROPERTIES VS_GLOBAL_VcpkgEnabled false )
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/CMakeLists.txt(186):  target_link_libraries(mono_tum PRIVATE ORB_SLAM3 )
-- Configuring done (7.1s)
CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
Please set them or make sure they are set and tested correctly in the CMake files:
C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3/DBoW2_INCLUDE_DIR
   used as include directory in directory C:/Users/William He/PycharmProjects/HellBots/third_party/ORB_SLAM3

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:641 (_add_library):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:53 (add_library)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:641 (_add_library):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:53 (add_library)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:641 (_add_library):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:53 (add_library)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:641 (_add_library):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:53 (add_library)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:600 (_add_executable):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:185 (add_executable)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:600 (_add_executable):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:185 (add_executable)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:600 (_add_executable):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:185 (add_executable)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/vcpkg/scripts/buildsystems/vcpkg.cmake:600 (_add_executable):
  Policy CMP0156 is not set: De-duplicate libraries on link lines based on
  linker capabilities.  Run "cmake --help-policy CMP0156" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Since the policy is not set, legacy libraries de-duplication strategy will
  be applied.
Call Stack (most recent call first):
  CMakeLists.txt:185 (add_executable)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Generating done (0.3s)
CMake Generate step failed.  Build files cannot be regenerated correctly.
